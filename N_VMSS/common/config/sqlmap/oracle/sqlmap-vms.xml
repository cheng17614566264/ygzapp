<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="vms">
	<!-- 交易 -->
	<typeAlias alias="transInfo" type="com.cjit.vms.trans.model.TransInfo" />
	<typeAlias alias="transInfoYS" type="com.cjit.vms.trans.model.TransInfoYS" />
	<typeAlias alias="transBillInfo" type="com.cjit.vms.trans.model.TransBillInfo" />
	<!-- 票据 -->
	<typeAlias alias="billInfo" type="com.cjit.vms.trans.model.BillInfo" />
	<typeAlias alias="billItemInfo" type="com.cjit.vms.trans.model.BillItemInfo" />
	<!-- 发票补打信息记录表 -->
	<typeAlias alias="billPrintHistoryInfo"
		type="com.cjit.vms.trans.model.BillPrintHistoryInfo" />
	<!-- 系统参数 -->
	<typeAlias alias="business" type="com.cjit.vms.system.model.Business" />
	<typeAlias alias="businessInfo" type="com.cjit.vms.system.model.BusinessInfo" />
	<typeAlias alias="customer" type="com.cjit.vms.system.model.Customer" />
	<typeAlias alias="goods" type="com.cjit.vms.system.model.GoodsInfo" />
	<typeAlias alias="initRunningLog" type="com.cjit.vms.system.model.InitRunningLog" />
	<typeAlias alias="accEntry" type="com.cjit.vms.system.model.AccEntry" />
	<!-- XML标签类 -->
	<typeAlias alias="xmlColumnInfo" type="com.cjit.vms.trans.model.XmlColumnInfo" />
	<!-- czl EMS快递 -->
	<typeAlias alias="emsInfo" type="com.cjit.vms.trans.model.EmsInfo" />
	<!-- 完整性对账 -->
	<typeAlias alias="integrityCheckAccount"
		type="com.cjit.vms.trans.model.IntegrityCheckAccount" />
	<!-- czl 发票作废 -->
	<typeAlias alias="billCancelInfo"
		type="com.cjit.vms.trans.model.billInvalid.BillCancelInfo" />
	<typeAlias alias="userColComments" type="com.cjit.vms.system.model.UserColComments" />
	<typeAlias alias="invoiceAlertListInfo"
		type="com.cjit.vms.trans.model.storage.InvoiceAlertListInfo" />
	<typeAlias alias="paramInSurtaxListInfo"
		type="com.cjit.vms.trans.model.ParamInSurtaxListInfo" />
	<typeAlias alias="taxDiskMonitorInfo"
		type="com.cjit.vms.trans.model.TaxDiskMonitorInfo" />
	<typeAlias alias="paperInvoiceRbDetail"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceRbDetail" />
	<!-- 空白发票作废 -->
	<typeAlias alias="invoiceStockDetail"
		type="com.cjit.vms.trans.model.storage.InvoiceStockDetail" />
	<!-- Dlt job执行记录 -->
	<typeAlias alias="dLTJobLog" type="com.cjit.vms.trans.model.DLTJobLog" />

	<!--机构附加税合计查询 -->
	<typeAlias alias="surtaxAMT" type="com.cjit.vms.trans.model.SurtaxAMT" />
	<!-- -->
	<typeAlias alias="instInfo" type="com.cjit.vms.trans.model.InstInfo" />

	<!--代扣代缴通知书 <typeAlias alias="specialBillWithhold" type="com.cjit.vms.input.model.SpecialBillWithhold" 
		/> -->
		
		<typeAlias alias="specialBillWithhold" type="com.cjit.vms.input.model.SpecialBillWithhold" />
	<typeAlias alias="transVerification" type="com.cjit.vms.trans.model.TransVerification" />
	<typeAlias alias="taxDiffCheckAccountInfo"
		type="com.cjit.vms.trans.model.TaxDiffCheckAccountInfo" />
	<!-- 交易类型对应商品 -->
	<typeAlias alias="goodsConfig" type="com.cjit.vms.trans.model.GoodsConfig" />
	<!-- VMS单证管理 -->
	<typeAlias alias="documentManageInfo"
		type="com.cjit.vms.metlife.model.DocumentManageInfo"></typeAlias>
	<!-- 收费凭证 -->
	<typeAlias alias="chargesVoucherInfo"
		type="com.cjit.vms.metlife.model.ChargesVoucherInfo"></typeAlias>
	<!-- 会计分录 -->
	<typeAlias alias="accountingEntriesInfo"
		type="com.cjit.vms.metlife.model.AccountingEntriesInfo"></typeAlias>
	<!-- 定时任务 -->
	<typeAlias alias="timeTaskEntity" type="com.cjit.vms.input.model.TimeTaskEntity" />

	<!-- 客户类 -->
	<typeAlias alias="CustomerEntity" type="com.cjit.webService.client.entity.Customer" />
	<!-- 发票回写核心类 -->
	<typeAlias alias="billEntity"
		type="com.cjit.webService.client.entity.BillEntity" />
	<!-- 转出比例 -->
	<typeAlias alias="taxTransferInfo"
		type="com.cjit.webService.client.entity.TaxTransferInfo" />
	
	<!-- 主表应用表数据更新 -->
	<typeAlias alias="inputInfo" type="com.cjit.vms.input.model.InputInfo" />
	<!-- 明细表应用表数据更新 -->
	<typeAlias alias="inputInvoiceNew" type="com.cjit.vms.input.model.InputInvoiceNew" />
	<!--新增
		日期：2018-08-22
		作者：刘俊杰
		功能：通过远程连接总账的数据库(oracle)
	-->
	<!-- start -->
	<typeAlias alias="GeneralLedgerTemp" type="com.cjit.vms.input.model.GeneralLedgerTemp" />
	<!-- end -->
	
	<!--新增
		日期：2018-09-03
		作者：刘俊杰
		功能：跑批任务开始时间及间隔时间表batchruntime
	-->
	<!-- start -->
	<typeAlias alias="BatchRunTime" type="com.cjit.vms.BatchRun.model.BatchRunTime" />
	<!-- end -->
	
		<!--oracle版本  -->
	<!-- 	<sql id="page_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty>
			) d where 1=1
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</sql> -->
	
	
<!-- 公用的  -->
	<sql id="page_fragment">
		<dynamic>
			) d where 1=1
			<isNotEmpty prepend=" " property="startIndex"> 
				limit 
				<![CDATA[ $startIndex$ ,$PageSize$ ]]>
<!-- 				<![CDATA[ $startIndex$ ,$PageSize$ ]]> -->
			</isNotEmpty>
		</dynamic>
	</sql>

		<!--oracle版本  -->
	<!-- 	<sql id="page_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty>
			) d where 1=1
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</sql> -->
<!-- 	<sql id="page_fragment"> -->
<!-- 		<dynamic> -->
<!-- 			) d where 1=1 -->
<!-- 			<isNotEmpty prepend=" " property="startIndex">  -->
<!-- 				limit  -->
<!-- 				<![CDATA[ $startIndex$ ,$PageSize$ ]]> -->
<!-- 			</isNotEmpty> -->
<!-- 		</dynamic> -->
<!-- 	</sql> -->

	
	<!--公用的变为私有的  -->
	<sql id="page_fragmentThis">
		<dynamic>
			) d where 1=1
			order by d.transDate desc
			<isNotEmpty prepend=" " property="startIndex"> 
				limit 
				<![CDATA[ $startIndex$ ,$PageSize$ ]]>
			</isNotEmpty>
		</dynamic>
	</sql>
	
	
		<!-- <sql id="page_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty>
			) d where 1=1
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</sql> -->
	
	
	<sql id="transInfo_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transId">
				trans_Id =
				#transInfo.transId#
			</isNotEmpty>
		</dynamic>
	</sql>
<sql id="transInfoMainQuery_fragment">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transType">
				t4.TRANS_TYPE_NAME=#transInfo.transType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transId">
				t.trans_Id =
				#transInfo.transId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="transInfo.type">
				<![CDATA[t.AMT_CCY < 0 ]]>
			</isNotEmpty>
		</dynamic>
		<isNotEmpty prepend="and" property="transInfo.cherNum">
			t.CHERNUM like
			'%$transInfo.cherNum$%'
			OR
			t.REPNUM like '%$transInfo.cherNum$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.ttmpRcno">
			t.TTMPRCNO like
			'%$transInfo.ttmpRcno$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.feeTyp">
			t.FEETYP =
			#transInfo.feeTyp#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.billFreq">
			t.BILLFREQ =
			#transInfo.billFreq#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.billBeginDate">
		    <!--Oracle版本  -->
			<!-- <![CDATA[ to_date(t.Trans_Date,'yyyy-mm-dd') >= to_date(#transInfo.billBeginDate#,'yyyy-mm-dd') ]]> -->
			<!--Mysql版本  -->
			<![CDATA[ str_to_date(t.Trans_Date,'%Y-%m-%d') >= str_to_date(#transInfo.billBeginDate#,'%Y-%m-%d') ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.billEndDate">
			<!--Oracle版本  -->
			<!-- <![CDATA[ to_date(t.Trans_Date,'yyyy-mm-dd') <= to_date(#transInfo.billEndDate#,'yyyy-mm-dd')  ]]> -->
			<!--Mysql版本  -->
			<![CDATA[ str_to_date(t.Trans_Date,'%Y-%m-%d') <= str_to_date(#transInfo.billEndDate#,'%Y-%m-%d')  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.hissBeginDte">
		    <!--Oracle版本  -->
			<!-- <![CDATA[ to_date(to_char(t.HISSDTE,'yyyy-mm-dd'),'yyyy-mm-dd') >= to_date(#transInfo.hissBeginDte#,'yyyy-mm-dd') ]]> -->
			<!--Mysql版本  -->
			<![CDATA[ str_to_date(date_format(t.HISSDTE,'%Y-%m-%d'),'%Y-%m-%d') >= str_to_date(#transInfo.hissBeginDte#,'%Y-%m-%d') ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.hissEndDte">
			<!--Oracle版本  -->
			<!-- <![CDATA[ to_date(to_char(t.HISSDTE,'yyyy-mm-dd'),'yyyy-mm-dd') <= to_date(#transInfo.hissEndDte#,'yyyy-mm-dd')  ]]> -->
			<!--Mysql版本  -->
			<![CDATA[ str_to_date(date_format(t.HISSDTE,'%Y-%m-%d'),'%Y-%m-%d') <= str_to_date(#transInfo.hissEndDte#,'%Y-%m-%d')  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.dsouRce">
			t.DSOURCE =
			#transInfo.dsouRce#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="transInfo.chanNel">
			t.CHANNEL =
			#transInfo.chanNel#
		</isNotEmpty>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transBeginDate">
		<!--Oracle版本  --> 
        <!-- <![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#transInfo.transBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]> -->
        <!--Mysql版本  -->
        <![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#transInfo.transBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transEndDate"> 
		<!--oracle版本  -->
        <!-- <![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#transInfo.transEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]> -->
		<!--Mysql版本  -->
		 <![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#transInfo.transEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.amtMin2"> 
        <![CDATA[ t.AMT_CNY >= #transInfo.amtMin2# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.amtMax2"> 
        <![CDATA[ t.AMT_CNY <= #transInfo.amtMax2# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.balanceMin2"> 
        <![CDATA[ t.BALANCE >= #transInfo.balanceMin2# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.balanceMax2"> 
        <![CDATA[ t.BALANCE <= #transInfo.balanceMax2# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.fapiaoType">
				t.FAPIAO_TYPE =
				#transInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerName">
				c.CUSTOMER_CNAME like
				'%$transInfo.customerName$%'
			</isNotEmpty>
		</dynamic>

		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerTaxno">
				c.CUSTOMER_TAXNO like
				'%$transInfo.customerTaxno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerTaxPayerType">
				c.taxpayer_type =
				#transInfo.customerTaxPayerType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transFlag">
				t.TRANS_FLAG =
				#transInfo.transFlag#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.dataStatus">
				t.DATASTATUS =
				#transInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billBeginDate"> 
		<!--Oracle版本  -->
        <!-- <![CDATA[ to_date(t3.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#transInfo.billBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]> -->
		<!--Mysql版本  -->
		<![CDATA[ str_to_date(t3.BILL_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#transInfo.billBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billEndDate"> 
		<!--Oracle版本  -->
        <!-- <![CDATA[ to_date(t3.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#transInfo.billEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]> -->
        <!--Mysql版本  -->
        <![CDATA[ str_to_date(t3.BILL_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#transInfo.billEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
	</sql>
	<!--新来的  -->
		<sql id="transInfo_link_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transTypeName">
				b.transTypeName like
				'%$transInfo.transTypeName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerName">
				c.customer_cname like
				'%$transInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerTaxPayerType">
				c.TAXPAYER_TYPE =
				#transInfo.customerTaxPayerType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerFaPiaoFlag">
				c.CUSTOMER_FAPIAO_FLAG
				= #transInfo.customerFaPiaoFlag#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.fapiaoDate">
				t.fapiao_Date
				=
				#transInfo.fapiaoDate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.dataStatus">
				t.dataStatus
				=
				#transInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerFaPiaoType">
				c.FAPIAO_TYPE =
				#transInfo.customerFaPiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchConditionLink">
				$searchConditionLink$
			</isNotEmpty>
		</dynamic>
	</sql>


	<!--Oracle -->
	<!-- <select id="findTransInfoMainQuery" parameterClass="java.util.Map" 
		resultClass="transInfo" remapResults="true"> select * from ( select rownum 
		as rowindex, t.trans_Id as transId, t.trans_Date as transDate, t.customer_id 
		as customerId, c.customer_CName as customerName, c.customer_TaxNo as customerTaxno, 
		c.customer_account as customerAccount, c.taxpayer_type as customerTaxPayerType, 
		t4.TRANS_TYPE_NAME as transType, t.trans_flag as transFlag, t.TRANS_FAPIAO_FLAG 
		as transFapiaoFlag, t.vat_rate_code as vatRateCode, t.is_reverse as isReverse, 
		t.FAPIAO_TYPE as fapiaoType, t.tax_flag as taxFlag, t.tax_Rate as taxRate, 
		t.balance as balance, t.dataStatus as dataStatus, t.AMT_CNY as amt, t.TAX_AMT_CNY 
		as taxAmt, t.income_cny as income, t.CHERNUM as cherNum, t.REPNUM as repNum, 
		t.TTMPRCNO as ttmpRcno, t.FEETYP as feeTyp, t.BILLFREQ as billFreq, t.POLYEAR 
		as polYear, t.HISSDTE as hissDte, t.DSOURCE as dsouRce, t.CHANNEL as chanNel, 
		t.PREMTERM as premTerm, t.BATCH_NO as batchNo, t2.wkze as wkze from VMS_TRANS_INFO 
		t left join VMS_TRANS_CKECK_VIEW T2 on t.CHERNUM=T2.CHERNUM left join Vms_Customer_Info 
		c on t.CUSTOMER_ID = c.CUSTOMER_ID left join VMS_TRANS_TYPE t4 on t.TRANS_TYPE 
		= t4.TRANS_TYPE_ID <include refid="transInfoMainQuery_fragment" /> <include 
		refid="page_fragment" /> order by d.transDate desc </select> -->

	<!--Mysql版本 -->
	<select id="findTransInfoMainQuery" parameterClass="java.util.Map"
		resultClass="transInfo" remapResults="true">
		select * from (
		select
		(@rowNum:=@rowNum+1) as rowindex,
		t.trans_Id as
		transId,
		t.trans_Date as transDate,
		t.customer_id
		as customerId,
		c.customer_CName
		as customerName,
		c.customer_TaxNo as customerTaxno,
		c.customer_account as customerAccount,
		c.taxpayer_type as
		customerTaxPayerType,
		t4.TRANS_TYPE_NAME as transType,
		t.trans_flag as
		transFlag,
		t.TRANS_FAPIAO_FLAG as transFapiaoFlag,
		t.vat_rate_code as
		vatRateCode,
		t.is_reverse as isReverse,
		t.FAPIAO_TYPE as fapiaoType,
		t.tax_flag as taxFlag,
		t.tax_Rate as taxRate,
		t.balance as balance,
		t.dataStatus as dataStatus,
		t.AMT_CNY as amt,
		t.TAX_AMT_CNY as taxAmt,
		t.income_cny as income,
		t.CHERNUM as cherNum,
		t.REPNUM as repNum,
		t.TTMPRCNO as ttmpRcno,
		t.FEETYP as feeTyp,
		t.BILLFREQ as billFreq,
		t.POLYEAR as polYear,
		t.HISSDTE as hissDte,
		t.DSOURCE as dsouRce,
		t.CHANNEL as chanNel,
		t.PREMTERM as premTerm,
		t.BATCH_NO as batchNo,
		t2.wkze as wkze
		from VMS_TRANS_INFO t
		left join VMS_TRANS_CKECK_VIEW T2
		on t.CHERNUM=T2.CHERNUM
		left join Vms_Customer_Info
		c on
		t.CUSTOMER_ID =
		c.CUSTOMER_ID
		left join VMS_TRANS_TYPE t4 on
		t.TRANS_TYPE =
		t4.TRANS_TYPE_ID,(SELECT (@rowNum :=0) ) nn
		<include refid="transInfoMainQuery_fragment" />
		<!-- order by d.transDate desc -->
		<include refid="page_fragmentThis" />
		
	</select>






	<select id="findTransInfoMainQueryCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_TRANS_INFO t
		left join Vms_Customer_Info
		c on
		t.CUSTOMER_ID = c.CUSTOMER_ID
		left join VMS_TRANS_TYPE t4 on
		t.TRANS_TYPE = t4.TRANS_TYPE_ID
		<include refid="transInfoMainQuery_fragment" />
	</select>

	<!--Oracle版本 -->
	<!-- <select id="findTransInfoForAuto" parameterClass="java.util.Map" resultClass="transInfo" 
		remapResults="true"> select * from ( select rownum as rowindex, t.TRANS_ID 
		as transId, t.TRANS_DATE as transDate, t.TRANS_TYPE as transType, t.CUSTOMER_ID 
		as customerId, t.CUSTOMER_ACCOUNT as customerAccount, t.TAX_FLAG as taxFlag, 
		t.AMT_CNY as amt, t.TAX_RATE as taxRate, t.TAX_AMT_CNY as taxAmt, t.IS_REVERSE 
		as isReverse, t.BANK_CODE as bankCode, t.REMARK as remark, t.ORG_CURR_CODE 
		as orgCurrCode, t.ORG_ACC_NO as orgAccNo, t.AMT_CCY as amtCcy, t.REVERSE_TRANS_ID 
		as reverseTransId, t.INCOME_CNY as income, t.SHORT_AND_OVER as shortAndOver, 
		t.BALANCE as balance, t.INSTCODE as instCode, t.INSTNAME as instName, t.DATASTATUS 
		as dataStatus, t.ORG_Trans_Type as orgTransType, t.ORG_Trans_SUB_Type as 
		orgTransSubType, t.REVERSE_TRANS_DATE as reverseTransDate, t.TRANS_BUS_ID 
		as transBusId, t.Trans_Curr as transCurr, t.TAX_AMT_CCY as taxAmtCcy, t.INCOME_CCY 
		as incomeCcy, t.Surtax1_AMT_CNY as surtax1, t.Surtax2_AMT_CNY as surtax2, 
		t.Surtax3_AMT_CNY as surtax3, t.Surtax4_AMT_CNY as surtax4, t.Trans_FaPiao_Flag 
		as transFapiaoFlag, t.FaPiao_Date as fapiaoDate, case when t.fapiao_Type 
		= '0' and c.fapiao_type = '0' then '0' else '1' end as fapiaoType, t.Trans_Flag 
		as transFlag, t.VAT_Rate_Code as vatRateCode, inst.TAXPERNAME as instTaxperName, 
		inst.TAXPERNUMBER as instTaxperNumber, inst.ACCOUNT as instAccount, inst.TAXADDRESS 
		as instTaxAddress, inst.TAXTEL as instTaxTel, inst.TAXBANK as instTaxBank, 
		v2.GOODS_ID || '-' || v.item_code as goodsKey, v2.goods_name as goodsName 
		<dynamic> <isNotEmpty prepend="" property="searchColums"> $searchColums$ 
		</isNotEmpty> </dynamic> from (select * from VMS_TRANS_INFO t where 1 = 1 
		<dynamic> <isNotEmpty prepend="and" property="auth_inst_ids"> t.INSTCODE 
		in <iterate property="auth_inst_ids" conjunction="," open="(" close=")"> 
		#auth_inst_ids[]# </iterate> <include refid="transInfo_fragment" /> </isNotEmpty> 
		</dynamic> ) t inner join u_base_inst inst on inst.inst_id = t.INSTCODE <dynamic> 
		<isNotEmpty prepend="" property="searchTables"> $searchTables$ </isNotEmpty> 
		</dynamic> where 1 = 1 <include refid="transInfo_link_fragment" /> ) inner 
		join VMS_TAX_INFO tax on tax.TAXNO = instTaxperNumber and tax.FAPIAO_TYPE 
		= fapiaoType and tax.TAX_RATE = taxRate order by bankCode, customerId, fapiaoType, 
		goodsKey </select> -->

	<!--Mysql版本 -->
	<select id="findTransInfoForAuto" parameterClass="java.util.Map"
		resultClass="transInfo" remapResults="true">
		select * from (
		select
		(@rowNum:=@rowNum+1) as rowindex,
		t.TRANS_ID as
		transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE as transType,
		t.CUSTOMER_ID as
		customerId,
		t.CUSTOMER_ACCOUNT as customerAccount,
		t.TAX_FLAG as
		taxFlag,
		t.AMT_CNY as amt,
		t.TAX_RATE as taxRate,
		t.TAX_AMT_CNY as
		taxAmt,
		t.IS_REVERSE as isReverse,
		t.BANK_CODE as
		bankCode,
		t.REMARK as
		remark,
		t.ORG_CURR_CODE as orgCurrCode,
		t.ORG_ACC_NO as orgAccNo,
		t.AMT_CCY as amtCcy,
		t.REVERSE_TRANS_ID as
		reverseTransId,
		t.INCOME_CNY
		as income,
		t.SHORT_AND_OVER as shortAndOver,
		t.BALANCE as balance,
		t.INSTCODE as instCode,
		t.INSTNAME as instName,
		t.DATASTATUS as
		dataStatus,
		t.ORG_Trans_Type as orgTransType,
		t.ORG_Trans_SUB_Type as
		orgTransSubType,
		t.REVERSE_TRANS_DATE as
		reverseTransDate,
		t.TRANS_BUS_ID as transBusId,
		t.Trans_Curr as
		transCurr,
		t.TAX_AMT_CCY
		as taxAmtCcy,
		t.INCOME_CCY as incomeCcy,
		t.Surtax1_AMT_CNY as surtax1,
		t.Surtax2_AMT_CNY as surtax2,
		t.Surtax3_AMT_CNY as surtax3,
		t.Surtax4_AMT_CNY as surtax4,
		t.Trans_FaPiao_Flag as transFapiaoFlag,
		t.FaPiao_Date as fapiaoDate,
		case
		when t.fapiao_Type = '0'
		and
		c.fapiao_type = '0' then '0'
		else '1'
		end as fapiaoType,
		t.Trans_Flag as
		transFlag,
		t.VAT_Rate_Code as
		vatRateCode,
		inst.TAXPERNAME as
		instTaxperName,
		inst.TAXPERNUMBER as
		instTaxperNumber,
		inst.ACCOUNT as
		instAccount,
		inst.TAXADDRESS as
		instTaxAddress,
		inst.TAXTEL as
		instTaxTel,
		inst.TAXBANK as instTaxBank,
		concat(v2.GOODS_ID,'-',
		v.item_code) as goodsKey,
		v2.goods_name as
		goodsName
		<dynamic>
			<isNotEmpty prepend="" property="searchColums">
				$searchColums$
			</isNotEmpty>
		</dynamic>
		from (select * from VMS_TRANS_INFO t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.INSTCODE in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
				<include refid="transInfo_fragment" />
			</isNotEmpty>
		</dynamic>
		) t
		inner join u_base_inst inst
		on inst.inst_id = t.INSTCODE
		<dynamic>
			<isNotEmpty prepend="" property="searchTables">
				$searchTables$
			</isNotEmpty>
		</dynamic>
		where 1 = 1
		<include refid="transInfo_link_fragment" />
		) inner join VMS_TAX_INFO tax
		on tax.TAXNO = instTaxperNumber
		and
		tax.FAPIAO_TYPE = fapiaoType
		and tax.TAX_RATE = taxRate
		order by
		bankCode, customerId, fapiaoType,
		goodsKey
	</select>


	<update id="updateTransInfoStatusForAuto" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO t set DATASTATUS = #dataStatus# , BALANCE = '0'
		where
		exists (select 1
		from VMS_TRANS_BILL tb
		where t.TRANS_ID = tb.TRANS_ID
		and tb.BILL_ID = #billId#)
	</update>

	<!--Oracle版本 -->
	<select id="findTransInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		<!-- select count(1) from (select * from ( select rownum as rowindex, t.TRANS_ID 
			as transId, t.TRANS_DATE as transDate, t.TRANS_TYPE as transType, t.CUSTOMER_ID 
			as customerId, b.business_cname as transTypeName, t.CUSTOMER_ACCOUNT as customerAccount, 
			t.TAX_FLAG as taxFlag, t.AMT_CNY as amt, t.TAX_RATE as taxRate, t.TAX_AMT_CNY 
			as taxAmt, t.IS_REVERSE as isReverse, t.BANK_CODE as bankCode, t.REMARK as 
			remark, t.ORG_CURR_CODE as orgCurrCode, t.ORG_ACC_NO as orgAccNo, t.AMT_CCY 
			as amtCcy, t.REVERSE_TRANS_ID as reverseTransId, t.INCOME_CNY as income, 
			t.SHORT_AND_OVER as shortAndOver, t.BALANCE as balance, t.INSTCODE as instCode, 
			t.INSTNAME as instName, t.DATASTATUS as dataStatus, t.ORG_Trans_Type as orgTransType, 
			t.ORG_Trans_SUB_Type as orgTransSubType, t.REVERSE_TRANS_DATE as reverseTransDate, 
			t.TRANS_BUS_ID as transBusId, t.Trans_Curr as transCurr, t.TAX_AMT_CCY as 
			taxAmtCcy, t.INCOME_CCY as incomeCcy, t.Surtax1_AMT_CNY as surtax1, t.Surtax2_AMT_CNY 
			as surtax2, t.Surtax3_AMT_CNY as surtax3, t.Surtax4_AMT_CNY as surtax4, t.Trans_FaPiao_Flag 
			as transFapiaoFlag, t.FaPiao_Date as fapiaoDate, t.FaPiao_Type as fapiaoType, 
			t.Trans_Flag as transFlag, t.VAT_Rate_Code as vatRateCode <dynamic> <isNotEmpty 
			prepend="" property="searchColums"> $searchColums$ </isNotEmpty> </dynamic> 
			from VMS_TRANS_INFO t left join VMS_BUSINESS_TB b on t.TRANS_TYPE = b.business_code 
			<dynamic> <isNotEmpty prepend="" property="searchTables"> $searchTables$ 
			</isNotEmpty> </dynamic> where 1 = 1 <dynamic> <isNotEmpty prepend="and" 
			property="auth_inst_ids"> t.Instcode in <iterate property="auth_inst_ids" 
			conjunction="," open="(" close=")"> #auth_inst_ids[]# </iterate> </isNotEmpty> 
			</dynamic> <include refid="transInfo_fragment" /> <include refid="transInfo_link_fragment" 
			/> <include refid="page_fragment" /> ) </select> -->

		<!--Mysql版本 -->
		select count(1) from (select * from (
		select
		(@rowNum:=@rowNum+1) as
		rowindex,
		t.TRANS_ID as transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE
		as
		transType,
		t.CUSTOMER_ID as
		customerId,
		b.business_cname as
		transTypeName,
		t.CUSTOMER_ACCOUNT as
		customerAccount,
		t.TAX_FLAG as
		taxFlag,
		t.AMT_CNY as amt,
		t.TAX_RATE as
		taxRate,
		t.TAX_AMT_CNY as taxAmt,
		t.IS_REVERSE as isReverse,
		t.BANK_CODE
		as bankCode,
		t.REMARK as remark,
		t.ORG_CURR_CODE as orgCurrCode,
		t.ORG_ACC_NO as orgAccNo,
		t.AMT_CCY as
		amtCcy,
		t.REVERSE_TRANS_ID as
		reverseTransId,
		t.INCOME_CNY as income,
		t.SHORT_AND_OVER as
		shortAndOver,
		t.BALANCE as balance,
		t.INSTCODE as
		instCode,
		t.INSTNAME as instName,
		t.DATASTATUS as dataStatus,
		t.ORG_Trans_Type as orgTransType,
		t.ORG_Trans_SUB_Type as
		orgTransSubType,
		t.REVERSE_TRANS_DATE as reverseTransDate,
		t.TRANS_BUS_ID as transBusId,
		t.Trans_Curr as transCurr,
		t.TAX_AMT_CCY
		as taxAmtCcy,
		t.INCOME_CCY as incomeCcy,
		t.Surtax1_AMT_CNY as surtax1,
		t.Surtax2_AMT_CNY as surtax2,
		t.Surtax3_AMT_CNY as surtax3,
		t.Surtax4_AMT_CNY as surtax4,
		t.Trans_FaPiao_Flag as transFapiaoFlag,
		t.FaPiao_Date as fapiaoDate,
		t.FaPiao_Type as fapiaoType,
		t.Trans_Flag
		as transFlag,
		t.VAT_Rate_Code as vatRateCode
		<dynamic>
			<isNotEmpty prepend="" property="searchColums">
				$searchColums$
			</isNotEmpty>
		</dynamic>
		from VMS_TRANS_INFO t
		left join VMS_BUSINESS_TB b on t.TRANS_TYPE =
		b.business_code
		<dynamic>
			<isNotEmpty prepend="" property="searchTables">
				$searchTables$
			</isNotEmpty>
		</dynamic>
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<include refid="transInfo_fragment" />
		<include refid="transInfo_link_fragment" />
		<include refid="page_fragment" />
		)fff
	</select>






	<update id="updateTransInfo" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set
		TRANS_DATE = #transInfo.transDate#,
		TRANS_TYPE =
		#transInfo.transType#,
		CUSTOMER_ID = #transInfo.customerId#,
		CUSTOMER_ACCOUNT =
		#transInfo.customerAccount#,
		TAX_FLAG =
		#transInfo.taxFlag#,
		AMT_CNY =
		#transInfo.amt#,
		TAX_RATE =
		#transInfo.taxRate#,
		TAX_AMT_CNY =
		#transInfo.taxAmt#,
		IS_REVERSE =
		#transInfo.isReverse#,
		BANK_CODE =
		#transInfo.bankCode#,
		REMARK =
		#transInfo.remark#,
		ORG_CURR_CODE =
		#transInfo.orgCurrCode#,
		ORG_ACC_NO =
		#transInfo.orgAccNo#,
		AMT_CCY =
		#transInfo.amtCcy#,
		REVERSE_TRANS_ID =
		#transInfo.reverseTransId#,
		INCOME_CNY = #transInfo.income#,
		SHORT_AND_OVER =
		#transInfo.shortAndOver#,
		BALANCE =
		#transInfo.balance#,
		INSTCODE =
		#transInfo.instCode#,
		DATASTATUS =
		#transInfo.dataStatus#,
		ORG_Trans_Type = #transInfo.orgTransType#,
		ORG_Trans_SUB_Type =
		#transInfo.orgTransSubType#,
		REVERSE_TRANS_DATE =
		#transInfo.reverseTransDate#,
		TRANS_BUS_ID = #transInfo.transBusId#,
		Trans_Curr = #transInfo.transCurr#,
		TAX_AMT_CCY =
		#transInfo.taxAmtCcy#,
		INCOME_CCY = #transInfo.incomeCcy#,
		Surtax1_AMT_CNY = #transInfo.surtax1#,
		Surtax2_AMT_CNY =
		#transInfo.surtax2#,
		Surtax3_AMT_CNY = #transInfo.surtax3#,
		Surtax4_AMT_CNY = #transInfo.surtax4#,
		Trans_FaPiao_Flag =
		#transInfo.transFapiaoFlag#,
		FaPiao_Date = #transInfo.fapiaoDate#,
		FaPiao_Type = #transInfo.fapiaoType#,
		Trans_Flag =
		#transInfo.transFlag#,
		VAT_Rate_Code = #transInfo.vatRateCode#
		where
		TRANS_ID = #transInfo.transId#
	</update>

	<update id="updateTransBalance" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set BALANCE = #balance# where TRANS_ID = #transId#
	</update>

	<update id="updateTransInfoStatusBalance" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set
		DATASTATUS = #transInfo.dataStatus#
		,BALANCE =
		#transInfo.balance#
		,TAX_CNY_BALANCE =#transInfo.taxCnyBalance#
		where
		TRANS_ID =
		#transInfo.transId#
	</update>

	<update id="updateTransDataStatus" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set DATASTATUS = #dataStatus# where TRANS_ID =
		#transId#
	</update>

	<delete id="deleteTransInfo" parameterClass="java.util.Map">
		delete from VMS_TRANS_INFO t where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.dataStatus">
				t.dataStatus =
				#transInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.importDate">
				t.importDate like
				'%$transInfo.importDate$%'
			</isNotEmpty>
		</dynamic>
	</delete>

	<delete id="deleteTransData" parameterClass="java.util.Map">
		delete VMS_TRANS_INFO t
		where t.TRANS_ID in
		<iterate property="trans_ids" conjunction="," open="(" close=")">
			#trans_ids[]#
		</iterate>
	</delete>

	<select id="findTransInfoTemp" parameterClass="java.util.Map"
		resultClass="transInfo">
		select
		t.TRANS_ID as transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE as
		transType,
		t.CUSTOMER_ACCOUNT as customerAccount,
		t.CUSTOMER_FLAG as
		customerFlag,
		t.GOODS_NAME as goodsName,
		t.SPECANDMODEL as specandmodel,
		t.GOODS_NO as goodsNo,
		t.GOODS_PRICE as goodsPrice,
		t.TAX_FLAG as
		taxFlag,
		t.AMT as amt,
		t.TAX_RATE as taxRate,
		t.TAX_AMT as taxAmt,
		t.BANK_CODE as bankCode,
		t.DEPART_CODE as departCode,
		t.REMARK as
		remark,
		t.IS_REVERSE as isReverse,
		t.IMPORTDATE as importDate
		from
		VMS_TRANS_INFO_TEMP t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.importDate">
				t.IMPORTDATE like
				'$transInfo.importDate$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.instCode">
				t.instCode =
				#transInfo.instCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchCondition">
				$searchCondition$
			</isNotEmpty>
		</dynamic>
	</select>

	<sql id="billInfo_fragment">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.ttmpRcno">
				t.TTMPRCNO like
				'%$billInfo.ttmpRcno$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.feeTyp">
				t.FEETYP =
				#billInfo.feeTyp#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billFreq">
				t.BILLFREQ =
				#billInfo.billFreq#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.polYear">
				t.POLYEAR =
				#billInfo.polYear#
			</isNotEmpty>
			<!--oracle版本  -->
			<!-- <isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ to_date(t.HISSDTE,'yyyy-mm-dd') >= to_date(#billInfo.hissBeginDte#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ to_date(t.HISSDTE,'yyyy-mm-dd') <= to_date(#billInfo.hissEndDte#,'yyyy-mm-dd')  ]]>
			</isNotEmpty> -->
			
			<!--mysql版本  -->
			 <isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ str_to_date(t.HISSDTE,'%Y-%m-%d') >= str_to_date(#billInfo.hissBeginDte#,'%Y-%m-%d') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ str_to_date(t.HISSDTE,'%Y-%m-%d') <= str_to_date(#billInfo.hissEndDte#,'%Y-%m-%d')  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.dsouRce">
				t.DSOURCE =
				#billInfo.dsouRce#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.chanNel">
				t.CHANNEL =
				#billInfo.chanNel#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.premTerm">
				t.PREMTERM =
				#billInfo.premTerm#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.emsStatus">
				e.EMS_STATUS=
				#billInfo.emsStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerTaxno">
				t.CUSTOMER_TAXNO like
				'%$billInfo.customerTaxno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.fapiaoType">
				t.FAPIAO_TYPE =
				#billInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.issueType">
				t.ISSUE_TYPE =
				#billInfo.issueType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.cherNum">
				t.INSURE_ID =
				#billInfo.cherNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.dataStatus">
				t.DATASTATUS =
				#billInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.isHandiwork">
				t.IS_HANDIWORK =
				#billInfo.isHandiwork#
			</isNotEmpty>
		</dynamic>
		<!--dcg 结束 -->
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billCode">
				t.BILL_CODE like
				'%$billInfo.billCode$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billNo">
				t.BILL_NO like
				'%$billInfo.billNo$%'
			</isNotEmpty>
		</dynamic>
		
	<!--Mysql版本  -->
	<!-- 	<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ to_date(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ to_date(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.applyBeginDate">
				<![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd') >= to_date(#billInfo.applyBeginDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.applyEndDate">
				<![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd') <= to_date(#billInfo.applyEndDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--oracle版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ str_to_date(t.BILL_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#billInfo.billBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ str_to_date(t.BILL_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#billInfo.billEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.applyBeginDate">
				<![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#billInfo.applyBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.applyEndDate">
				<![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#billInfo.applyEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerName">
				t.CUSTOMER_NAME like
				'%$billInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerBankandaccount">
				t.CUSTOMER_BANKANDACCOUNT like '%$billInfo.customerBankandaccount$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.transId">
				exists (select 1 from
				vms_trans_bill tb where tb.bill_ID = t.bill_ID and tb.trans_ID =
				#billInfo.transId#)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.sumAmtBegin">
				<![CDATA[ t.SUM_AMT >= #billInfo.sumAmtBegin# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.sumAmtEnd">
				<![CDATA[ t.SUM_AMT <= #billInfo.sumAmtEnd# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchCondition">
				$searchCondition$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billIds">
				t.bill_id in
				<iterate property="billIds" open="(" close=")" conjunction=",">
					#billIds[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="issueStatuses">
				t.dataStatus in
				<iterate property="issueStatuses" open="(" close=")"
					conjunction=",">
					#issueStatuses[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
	</sql>
	<!--红冲bug00000416修改 sql语句findbillinfo改为findbillinfo2 -->
	<select id="findBillInfo2" parameterClass="java.util.Map"
		resultClass="billInfo">
		select BILL_ID as billId,
		BILL_CODE as billCode,
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BILL_DATE as billDate,
		NAME as name,
		TAXNO as taxno,
		VENDOR_ADDRESSANDPHONE as customerAddressandphone,
		VENDOR_BANKANDACCOUNT as customerBankandaccount,
		PAYEE as payee,
		u2.user_cname as reviewerName,
		FAPIAO_TYPE as fapiaoType,
		AMT_SUM as
		amtSum,
		TAX_AMT_SUM as taxAmtSum,
		VENDOR_NAME as customerName,
		VENDOR_TAXNO as customerTaxno,
		SUM_AMT as sumAmt,
		REMARK as remark,
		ADDRESSANDPHONE as addressandphone,
		BANKANDACCOUNT as bankandaccount,
		DRAWER as drawer,
		u1.user_cname as drawerName,
		REVIEWER as reviewer
		from
		VMS_INPUT_INVOICE_INFO t
		left join
		u_base_user u2 on
		u2.user_id =
		t.reviewer
		left join
		u_base_user u1 on
		u1.user_id = t.drawer
		<include refid="billInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findBillInfo" parameterClass="java.util.Map"
		resultClass="billInfo">
		select BILL_ID as billId,
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BILL_DATE as billDate,
		CUSTOMER_NAME as customerName,
		CUSTOMER_TAXNO as
		customerTaxno,
		CUSTOMER_ADDRESSANDPHONE as customerAddressandphone,
		CUSTOMER_BANKANDACCOUNT as customerBankandaccount,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		REMARK as remark,
		DRAWER as
		drawer,
		DSOURCE as dsouRce,
		u1.user_cname as drawerName,
		REVIEWER as
		reviewer,
		u2.user_cname as reviewerName,
		PAYEE as payee,
		NAME as name,
		TAXNO as taxno,
		ADDRESSANDPHONE as addressandphone,
		BANKANDACCOUNT as
		bankandaccount,
		INSTCODE as instCode,
		CANCEL_INITIATOR as
		cancelInitiator,
		CANCEL_AUDITOR as cancelAuditor,
		t.DESCRIPTION as
		description,
		DATASTATUS as dataStatus,
		IS_HANDIWORK as isHandiwork,
		FAPIAO_TYPE as fapiaoType,
		ISSUE_TYPE as issueType,
		ORI_BILL_CODE as
		oriBillCode,
		ORI_BILL_NO as oriBillNo,
		t.INSURE_ID as insureId,
		<!-- t.TTMPRCNO as -->
		t.TTMPRCNO as ttmprcno
		from VMS_BILL_INFO t
		left join
		u_base_user u1 on
		u1.user_id
		= t.drawer
		left
		join u_base_user u2 on
		u2.user_id = t.reviewer
		<include refid="billInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
	</select>

	<sql id="billInfo_fragment1">
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.dsouRce">
				bills.DSOURCE
				=#billInfo.dsouRce#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerTaxno">
				bills.CUSTOMER_TAXNO
				like '%$billInfo.customerTaxno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.fapiaoType">
				bills.FAPIAO_TYPE =
				#billInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.issueType">
				bills.ISSUE_TYPE =
				#billInfo.issueType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.dataStatus">
				bills.DATASTATUS =
				#billInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.isHandiwork">
				bills.IS_HANDIWORK =
				#billInfo.isHandiwork#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ to_date(substr(bills.BILL_DATE, 0, 10), 'yyyy-mm-dd') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ to_date(substr(bills.BILL_DATE, 0, 10), 'yyyy-mm-dd') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ str_to_date(substring(bills.BILL_DATE, 0, 10), '%Y-%m-%d') >= str_to_date(#billInfo.billBeginDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ str_to_date(substring(bills.BILL_DATE, 0, 10), '%Y-%m-%d') <= str_to_date(#billInfo.billEndDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerName">
				bills.CUSTOMER_NAME
				like '%$billInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
	</sql>



	<!--Oracle版本 -->
	<!-- <select id="findBillInfoNew" parameterClass="java.util.Map" resultClass="billInfo"> 
		SELECT * FROM (SELECT ROWNUM AS rowIndex,N.* FROM ( select distinct bills.bill_date 
		as billDate, bills.customer_name as customerName, bills.customer_taxno as 
		customerTaxNo, bills.bill_code as billCode, bills.bill_no as billNo, bills.amt_sum 
		as amtSum, bills.tax_amt_sum as taxAmtSum, bills.sum_amt as sumAmt, bills.is_handiwork 
		as isHandiwork, bills.issue_type as issueType, bills.fapiao_type as faPiaoType, 
		bills.datastatus as dataStatus, bills.bill_id as billId, bills.DSOURCE as 
		dsouRce from (select * from (select bills.*,rownum as rowindex from VMS_BILL_INFO 
		bills where 1 = 1 <include refid="billInfo_fragment1" /> <include refid="page_fragment" 
		/> ) bills where bills.datastatus in('5','6','9') <dynamic> <isNotEmpty prepend="and" 
		property="auth_inst_ids"> instCode in <iterate property="auth_inst_ids" conjunction="," 
		open="(" close=")"> #auth_inst_ids[]# </iterate> </isNotEmpty> </dynamic> 
		<dynamic prepend="and"> <isNotEmpty prepend="" property="billInfo.instCode"> 
		instCode = #transInfo.instCode# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="billInfo.billCode"> bills.bill_code = #billInfo.billCode# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="billInfo.billNo"> 
		bills.bill_no = #billInfo.billNo# </isNotEmpty> </dynamic> order by billNo 
		asc ,billDate desc <isNotEmpty prepend="and" property="endIndex"> <![CDATA[ 
		ROWNUM <= #endIndex#]]> </isNotEmpty> ) N ) T WHERE 1=1 <isNotEmpty prepend="and" 
		property="startIndex"> <![CDATA[ T.rowIndex > #startIndex# ]]> </isNotEmpty> 
		</select> -->

	<!--Mysql版本 -->
	<select id="findBillInfoNew" parameterClass="java.util.Map"
		resultClass="billInfo">
		SELECT * FROM
		(SELECT (@rowNum:=@rowNum+1) AS rowIndex,N.* FROM (

		select distinct bills.bill_date as billDate,
		bills.customer_name as
		customerName,
		bills.customer_taxno as customerTaxNo,
		bills.bill_code as
		billCode,
		bills.bill_no as billNo,
		bills.amt_sum as amtSum,
		bills.tax_amt_sum as taxAmtSum,
		bills.sum_amt as sumAmt,
		bills.is_handiwork as isHandiwork,
		bills.issue_type as issueType,
		bills.fapiao_type as faPiaoType,
		bills.datastatus as dataStatus,
		bills.bill_id as billId,
		bills.DSOURCE as dsouRce
		from
		(select * from
		(select bills.*,(@rowNum:=@rowNum+1) as
		rowindex from VMS_BILL_INFO
		bills where 1 = 1
		<include refid="billInfo_fragment1" />
		<include refid="page_fragment" />
		) bills

		where bills.datastatus in('5','6','9')
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				instCode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billInfo.instCode">
				instCode =
				#transInfo.instCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billCode">
				bills.bill_code =
				#billInfo.billCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billNo">
				bills.bill_no =
				#billInfo.billNo#
			</isNotEmpty>
		</dynamic>
		order by billNo asc ,billDate desc
		
		<isNotEmpty prepend="and" property="endIndex"> 

				<![CDATA[ ROWNUM <= #endIndex#]]>
		</isNotEmpty>
		
		
		) N
		) T WHERE 1=1
		<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ T.rowIndex > #startIndex#  ]]>
		</isNotEmpty>
	</select>





	<select id="findBillInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BILL_INFO t
		left join u_base_user u1 on
		u1.user_id = t.drawer
		left join u_base_user u2 on u2.user_id =
		t.reviewer
		<include refid="billInfo_fragment" />
	</select>

	<select id="findBillInfoNewCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_BILL_INFO bills
		left join VMS_BILL_ITEM_INFO
		billItem on bills.bill_id = billItem.Bill_Id
		where bills.datastatus
		in('5','6','9')
		<include refid="billInfo_fragment1" />
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				instCode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billInfo.instCode">
				instCode =
				#transInfo.instCode#
			</isNotEmpty>
		</dynamic>
	</select>


	<sql id="inputBillTrans_fragment">
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="billCode">
				bills.bill_code =
				'$billCode$'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billNo">
				bills.bill_no =
				'$billNo$'
			</isNotEmpty>
		</dynamic>
	</sql>


	<select id="findBillInfoExcel" parameterClass="java.util.Map"
		resultClass="billInfo">
		select bills.APPLY_DATE as applyDate,
		bills.bill_date as billDate,
		bills.customer_name as customerName,
		bills.customer_taxno as
		customerTaxNo,
		bills.bill_code as billCode,
		bills.bill_no as billNo,
		bills.drawer as drawer,
		bills.tax_disk_no as taxDiskNo,
		bills.MACHINE_NO as machineNo,
		bills.AMT_SUM as amtSum,
		bills.TAX_AMT_SUM as taxAmtSum,
		bills.SUM_AMT as sumAmt,
		bills.is_handiwork as isHandiWork,
		bills.issue_type as issueType,
		bills.fapiao_type as fapiaoType,
		bills.datastatus as dataStatus
		from
		VMS_BILL_INFO bills
		left join VMS_BILL_ITEM_INFO billItem on
		bills.bill_id = billItem.Bill_Id
		where bills.datastatus in('5','6','9')
		<include refid="billInfo_fragment1" />
	</select>


	<select id="inputBillTrans" parameterClass="java.util.Map"
		resultClass="transInfo">
		select t.trans_date as transDate,
		t.trans_type as transType,
		t.amt_cny
		as amt,
		t.is_reverse as isReverse,
		t.tax_rate as taxRate,
		t.tax_amt_cny
		as taxAmt,
		t.income_cny as income,
		t.balance as balance,
		t.fapiao_type as
		fapiaoType,
		t.datastatus as dataStatus,
		c.customer_cname as
		customerName,
		t.item_code as itemCode
		from vms_trans_info t
		left join
		VMS_TRANS_BILL tb on t.trans_id =
		tb.trans_id
		left join VMS_BILL_INFO
		bills on tb.bill_id = bills.bill_id
		left join vms_customer_info c on
		t.customer_id = c.customer_id
		<include refid="inputBillTrans_fragment" />
	</select>


	<!--dcg 发票跟踪开始oracle版本 -->
	<!-- <select id="findBillTrack" parameterClass="java.util.Map" resultClass="billInfo"> 
		select * from ( select rownum as rowindex, BILL_ID as billId, BILL_CODE as 
		billCode, BILL_NO as billNo, BILL_DATE as billDate, CUSTOMER_NAME as customerName, 
		CUSTOMER_TAXNO as customerTaxno, CUSTOMER_ADDRESSANDPHONE as customerAddressandphone, 
		CUSTOMER_BANKANDACCOUNT as customerBankandaccount, AMT_SUM as amtSum, TAX_AMT_SUM 
		as taxAmtSum, SUM_AMT as sumAmt, REMARK as remark, DRAWER as drawer, REVIEWER 
		as reviewer, PAYEE as payee, NAME as name, TAXNO as taxno, ADDRESSANDPHONE 
		as addressandphone, BANKANDACCOUNT as bankandaccount, INSTCODE as instCode, 
		CANCEL_INITIATOR as cancelInitiator, CANCEL_AUDITOR as cancelAuditor, TAX_DISK_NO 
		as taxDiskNo, MACHINE_NO as machineNo, NOTICE_NO as noticeNo, ORI_BILL_CODE 
		as oriBillCode, ORI_BILL_NO as oriBillNo, DATASTATUS as dataStatus, t.DESCRIPTION 
		as description, IS_HANDIWORK as isHandiwork, ISSUE_TYPE as issueType, FAPIAO_TYPE 
		as fapiaoType, OPERATESTATUS as operateStatus, APPLY_DATE as applyDate, BALANCE 
		as balance, t.INSURE_ID as insureId, t.REPNUM as repNum, t.TTMPRCNO as ttmpRcno, 
		t.FEETYP as feeTyp, t.BILLFREQ as billFreq, t.HISSDTE as hissDte, t.DSOURCE 
		as dsouRce, t.CHANNEL as chanNel, t.HISTORYFLAG as hisToryFlag from VMS_BILL_INFO 
		t <include refid="billInfo_fragment" /> <dynamic> <isNotEmpty prepend="" 
		property="billInfo.orderBy"> $billInfo.orderBy$ </isNotEmpty> </dynamic> 
		<dynamic> <isNotEmpty prepend="and" property="endIndex"> <![CDATA[ rownum 
		<= #endIndex#]]> </isNotEmpty> order by BILL_DATE desc ) d where 1=1 <isNotEmpty 
		prepend="and" property="startIndex"> <![CDATA[ rowIndex > #startIndex# ]]> 
		</isNotEmpty> </dynamic> </select> -->


	<!--dcg 发票跟踪开始Mysql版本 -->
	<select id="findBillTrack" parameterClass="java.util.Map"
		resultClass="billInfo">
		select * from (
		select
		(@rowNum:=@rowNum+1) as rowindex,
		BILL_ID as
		billId,
		BILL_CODE as
		billCode,
		BILL_NO as
		billNo,
		BILL_DATE as billDate,
		CUSTOMER_NAME as
		customerName,
		CUSTOMER_TAXNO as
		customerTaxno,
		CUSTOMER_ADDRESSANDPHONE
		as
		customerAddressandphone,
		CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		REMARK as remark,
		DRAWER as
		drawer,
		REVIEWER as reviewer,
		PAYEE as payee,
		NAME as name,
		TAXNO as
		taxno,
		ADDRESSANDPHONE as addressandphone,
		BANKANDACCOUNT as
		bankandaccount,
		INSTCODE as instCode,
		CANCEL_INITIATOR as
		cancelInitiator,
		CANCEL_AUDITOR as cancelAuditor,
		TAX_DISK_NO as
		taxDiskNo,
		MACHINE_NO as machineNo,
		NOTICE_NO as noticeNo,
		ORI_BILL_CODE
		as oriBillCode,
		ORI_BILL_NO as oriBillNo,
		DATASTATUS as dataStatus,
		t.DESCRIPTION as description,
		IS_HANDIWORK as isHandiwork,
		ISSUE_TYPE as
		issueType,
		FAPIAO_TYPE as fapiaoType,
		OPERATESTATUS as operateStatus,
		APPLY_DATE as applyDate,
		BALANCE as balance,
		t.INSURE_ID as insureId,
		t.REPNUM as repNum,
		t.TTMPRCNO as ttmpRcno,
		t.FEETYP as feeTyp,
		t.BILLFREQ as billFreq,
		t.HISSDTE as hissDte,
		t.DSOURCE as dsouRce,
		t.CHANNEL as chanNel,
		t.HISTORYFLAG as hisToryFlag
		from
		VMS_BILL_INFO t
		<include refid="billInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty> 
			
			order by BILL_DATE desc
			) d where 1=1
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</select>


	<select id="findBillTrackCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BILL_INFO t
		<include refid="billInfo_fragment" />
	</select>

	<select id="findTransByBillId" parameterClass="java.util.Map"
		resultClass="transInfo">
		select ti.TRANS_ID as transId,
		ti.TRANS_DATE as transDate,
		c.CUSTOMER_ID as customerId,
		c.CUSTOMER_CNAME as customerName,
		c.CUSTOMER_TAXNO as customerTaxno,
		ti.CUSTOMER_ACCOUNT as
		customerAccount,
		ti.TAX_FLAG as taxFlag,
		ti.TRANS_TYPE as transType,
		b.TRANS_TYPE_NAME as transTypeName,
		ti.AMT_CNY as amt,
		ti.TAX_AMT_CNY as
		taxAmt,
		ti.INCOME_CNY as income,
		ti.TAX_RATE as taxRate,
		ti.BANK_CODE as
		bankCode,
		i.inst_name as bankName,
		ti.IS_REVERSE as isReverse,
		ti.FAPIAO_TYPE as fapiaoType,
		ti.TRANS_FLAG as transFlag,
		ti.DATASTATUS
		as dataStatus,
		ti.TAX_FLAG as taxFlag,
		ti.FAPIAO_TYPE as fapiaoType,
		ti.BALANCE as balance,
		c.taxpayer_type as customerTaxPayerType,
		ti.trans_fapiao_flag as transFapiaoFlag,
		ti.vat_rate_code as
		vatRateCode,
		ti.item_code as itemCode,
		ti.AMT_CNY as reverseAmt,
		tr.TAX_AMT_CNY as reverseTaxAmt,
		tr.INCOME_CNY as reverseIncome,
		<!-- metlife begin -->
		ti.CHERNUM as cherNum,
		ti.REPNUM as repNum,
		ti.TTMPRCNO as ttmpRcno,
		ti.FEETYP as feeTyp,
		ti.BILLFREQ as billFreq,
		ti.POLYEAR as polYear,
		ti.HISSDTE as hissDte,
		ti.OCCDATE as occDate,
		ti.DSOURCE as dsouRce,
		ti.CHANNEL as chanNel,
		ti.PREMTERM as premTerm,
		ti.INSTFROM as instFrom,
		ti.INSTTO as instTo,
		ti.ALTREF as altref
		<!-- metlife end -->
		from
		vms_trans_info ti
		left join vms_customer_info c
		on
		ti.customer_id =
		c.customer_id and ti.chernum = c.chernum
		left join vms_trans_bill t on
		t.trans_id
		= ti.trans_id
		left
		join VMS_TRANS_TYPE b
		on ti.TRANS_TYPE = b.TRANS_TYPE_ID
		left join
		u_base_inst i
		on ti.bank_code = i.inst_id
		left join vms_trans_info tr
		on
		tr.REVERSE_TRANS_ID = ti.trans_id
		and tr.IS_REVERSE = 'Y'
		<include refid="billInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!-- 2018-03-23新增 -->
	<select id="findBillByBillId" parameterClass="java.util.Map"
		resultClass="transInfo">
		select bi.APPLY_DATE as transDate, 
		bi.CUSTOMER_NAME as customerName, 
		ci.TAXPAYER_TYPE as customerTaxPayerType, 
		ci.CUSTOMER_FAPIAO_FLAG as transFapiaoFlag, 
		bi.FAPIAO_TYPE as fapiaoType, 
		bii.AMT as amt, 
		bii.TAX_RATE as taxRate, 
		bii.TAX_AMT as taxAmt, 
		bi.SUM_AMT as reverseAmt, 
		bi.DATASTATUS as dataStatus 
		from vms_bill_info bi left join vms_bill_item_info bii on bi.bill_id = bii.bill_id 
		left join vms_customer_info ci on bi.customer_id = ci.customer_id 
		and bi.INSURE_ID = ci.chernum where 1 = 1 
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				bi.bill_Id = #billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!-- 2018-06-08计数新增 -->
	<select id="findBillByBillIdCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) 
		from vms_bill_info bi left join vms_bill_item_info bii on bi.bill_id = bii.bill_id 
		left join vms_customer_info ci on bi.customer_id = ci.customer_id 
		and bi.INSURE_ID = ci.chernum where 1 = 1 
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				bi.bill_Id = #billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findTransInfoById" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.createBill.TransInfo"
		remapResults="true">
		select
		t.TRANS_ID as transId,
		t.trans_type as transType,
		t.BALANCE as balance,
		t.DATASTATUS as dataStatus,
		t.INCOME_CNY as
		incomeCny,
		t.amt_cny as amtCny,
		t.tax_amt_cny as taxAmtCny,
		t.customer_id as customerId,
		t.income_cny as incomeCny,
		t.businessid as
		reverseTransId,
		t.trans_bus_id as transBusId,
		t.instname as instname,
		t.DSOURCE as dsouRce,
		t.BUSINESSID as businessid,
		t.CHERNUM as chernum,
		t.TTMPRCNO as ttmprcno
		from VMS_TRANS_INFO t
		inner join vms_trans_bill
		tb
		on
		tb.trans_id =
		t.trans_id and tb.bill_id =
		#billInfo.billId#
	</select>
	
	<!--  新增字段  查询交易信息  用于组装开具报文     
	                    程   2018/08/23                   
	         20180830  新增  QDFLAG
	  -->
	<select id="findTransInfoDiskById" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.createBill.TransInfo"
		remapResults="true">
		
		SELECT
		t.TRANS_ID AS transId,
		t.trans_type AS transType,
		t.BALANCE AS balance,
		t.DATASTATUS AS dataStatus,
		t.INCOME_CNY AS
		incomeCny,
		t.amt_cny AS amtCny,
		t.tax_amt_cny AS taxAmtCny,
		t.customer_id AS customerId,
		t.income_cny AS incomeCny,
		t.businessid AS
		reverseTransId,
		t.trans_bus_id AS transBusId,
		t.instname AS instname,
		t.DSOURCE AS dsouRce,
		t.BUSINESSID AS businessid,
		t.CHERNUM AS chernum,
		t.TTMPRCNO AS ttmprcno,
		t.feetyp AS feetype,
		t.planlongdesc AS planlongdesc,
		t.trans_date AS transDate,
		t.repnum AS repnum,
		t.QDFLAG AS qdFlag
		FROM VMS_TRANS_INFO t
		
		INNER JOIN vms_trans_bill  tb
		ON
		tb.trans_id =
		t.trans_id AND tb.bill_id =  #billInfo.billId#
	</select>
	
	
	<!-- 2018-03-15 发票状态回写中间表 -->
	<update id="updateTransTemp" parameterClass="java.util.Map">
		update vms_trans_info_temp2 set valueflage = '2'
		where BUSINESS_ID = #transTemp.businessid# and CUSTOMER_NO = #transTemp.customerId#
	</update>

	<select id="findTransByBillIdCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from vms_trans_info ti
		left join vms_customer_info c on
		ti.customer_id = c.customer_id AND ti.CHERNUM = c.chernum
		left join vms_trans_bill t on t.trans_id
		= ti.trans_id
		left join VMS_TRANS_TYPE b
		on ti.TRANS_TYPE =
		b.TRANS_TYPE_ID
		<include refid="billInfo_fragment" />
	</select>

	<update id="updateBillDataStatus" parameterClass="java.util.Map">
		update VMS_BILL_INFO set DATASTATUS = #dataStatus# where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billId"> BILL_ID = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billIds"> <![CDATA[ BILL_ID in $billIds$ ]]>
			</isNotEmpty>
		</dynamic>
	</update>

	<update id="updateTransInfoStatus" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO t set DATASTATUS = #dataStatus#
		where exists (select 1
		from VMS_TRANS_BILL tb
		where t.TRANS_ID = tb.TRANS_ID
		and tb.BILL_ID =
		#billId#)
	</update>
	<delete id="deleteTransBillInfo" parameterClass="java.util.Map">
		delete from
		VMS_TRANS_BILL where BILL_ID = #billId#
	</delete>
	<!--dcg 结束 -->
	<!--  cheng   20180829  新增   bi.GOODS_ID AS goodsId-->
	<select id="findBillItemInfo" parameterClass="java.util.Map"
		resultClass="billItemInfo">
		SELECT
		bi.BILL_ID AS billId,
		bi.BILL_ITEM_ID AS billItemId,
		bi.GOODS_NAME AS goodsName,
		bi.SPECANDMODEL AS specandmodel,
		bi.GOODS_UNIT AS goodsUnit,
		bi.GOODS_NO AS goodsNo,
		bi.GOODS_PRICE AS
		goodsPrice,
		bi.TAX_FLAG AS taxFlag,
		bi.AMT AS amt,
		bi.TAX_RATE AS
		taxRate,
		bi.TAX_AMT AS taxAmt,
		bi.TAX_ITEM AS taxItem,
		bi.IS_MAINGOODS AS
		isMainGoods,
		bi.ROW_NATURE AS rowNature,
		bi.GOODS_ID AS goodsId,
		CASE
		WHEN bi.DIS_ITEM_ID IS NULL
		THEN bi.bill_item_id
		ELSE bi.DIS_ITEM_ID
		END AS disItemId,
		bi.DISCOUNT_RATE AS discountRate
		FROM VMS_BILL_ITEM_INFO bi
		WHERE  1=1
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.billId">
				bi.BILL_ID =
				#billItem.billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.billItemId">
				bi.BILL_ITEM_ID =
				#billItem.billItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.disItemId">
				bi.DIS_ITEM_ID =
				#billItem.disItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.rowNature">
				bi.ROW_NATURE =
				#billItem.rowNature#
			</isNotEmpty>
		</dynamic>
		order by disItemId, billItemId
	</select>

	<delete id="deleteBillInfo" parameterClass="java.util.Map">
		delete from VMS_BILL_INFO
		<dynamic prepend="">
			<isNotEmpty prepend="" property="billId"> where Bill_ID = #billId#
			</isNotEmpty>
			<isEmpty prepend="" property="billId"> where 1 = 2 </isEmpty>
		</dynamic>
	</delete>
	<delete id="deleteBillInfos" parameterClass="java.util.Map">
		delete from VMS_BILL_INFO
		where Bill_ID in
		<iterate close=")" open="(" conjunction="," property="billId">
			'$billId[]$'
		</iterate>
	</delete>

	<delete id="deleteBillItemInfo" parameterClass="java.util.Map">
		delete from VMS_BILL_ITEM_INFO
		where 1=1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billId"> BILL_ID = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billItemId"> BILL_ITEM_ID =
				#billItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="transId"> TRANS_ID = #transId#
			</isNotEmpty>
		</dynamic>
	</delete>

	<insert id="saveTransBill" parameterClass="java.util.Map">
		insert into
		VMS_TRANS_BILL (TRANS_ID, BILL_ID, BILL_ITEM_ID, AMT_CNY,
		TAX_AMT_CNY,INCOME_CNY)
		values (#transId#, #billId#, #billItemId#,
		#amt#, #taxAmt#,#income#)
	</insert>

	<update id="updateTransBillStatus" parameterClass="java.util.Map">
		update VMS_TRANS_BILL set BILL_STATUS = #billStatus#
		where TRANS_ID =
		#transId# and BILL_ID = #billId#
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billItemId"> BILL_ITEM_ID =
				#billItemId#
			</isNotEmpty>
		</dynamic>
	</update>

	<select id="findTransBillCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_TRANS_BILL t
		where 1=1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="transId"> t.TRANS_ID = #transId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billId"> t.Bill_ID = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billItemId"> t.BILL_ITEM_ID =
				#billItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="searchCondition"> $searchCondition$
			</isNotEmpty>
		</dynamic>
	</select>

	<delete id="deleteTransBill" parameterClass="java.util.Map">
		delete from VMS_TRANS_BILL
		where 1=1
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="transId"> TRANS_ID = #transId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="billId"> Bill_ID = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="billItemId"> BILL_ITEM_ID =
				#billItemId#
			</isNotEmpty>
		</dynamic>
	</delete>

	<insert id="saveBill" parameterClass="java.util.Map">
		insert into
		VMS_BILL_INFO (
		BILL_ID,
		BILL_CODE,
		BILL_NO,
		BILL_DATE,
		CUSTOMER_ID,
		CUSTOMER_NAME,
		CUSTOMER_TAXNO,
		CUSTOMER_ADDRESSANDPHONE,
		CUSTOMER_BANKANDACCOUNT,
		AMT_SUM,
		TAX_AMT_SUM,
		SUM_AMT,
		REMARK,
		DRAWER,
		REVIEWER,
		PAYEE,
		NAME,
		TAXNO,
		ADDRESSANDPHONE,
		BANKANDACCOUNT,
		INSTCODE,
		CANCEL_INITIATOR,
		CANCEL_AUDITOR,
		TAX_DISK_NO,
		MACHINE_NO,
		NOTICE_NO,
		ORI_BILL_CODE,
		ORI_BILL_NO,
		DATASTATUS,
		DESCRIPTION,
		IS_HANDIWORK,
		ISSUE_TYPE,
		Fapiao_Type,
		APPLY_DATE,
		BALANCE,
		INSURE_ID,
		TTMPRCNO
		)
		values(
		#billInfo.billId#,
		#billInfo.billCode#,
		#billInfo.billNo#,
		#billInfo.billDate#,
		#billInfo.customerId#,
		#billInfo.customerName#,
		#billInfo.customerTaxno#,
		#billInfo.customerAddressandphone#,
		#billInfo.customerBankandaccount#,
		#billInfo.amtSum#,
		#billInfo.taxAmtSum#,
		#billInfo.sumAmt#,
		#billInfo.remark#,
		#billInfo.drawer#,
		#billInfo.reviewer#,
		#billInfo.payee#,
		#billInfo.name#,
		#billInfo.taxno#,
		#billInfo.addressandphone#,
		#billInfo.bankandaccount#,
		#billInfo.instCode#,
		#billInfo.cancelInitiator#,
		#billInfo.cancelAuditor#,
		#billInfo.cancelDate#,
		#billInfo.machineNo#,
		#billInfo.noticeNo#,
		#billInfo.oriBillCode#,
		#billInfo.oriBillNo#,
		#billInfo.dataStatus#,
		#billInfo.description#,
		#billInfo.isHandiwork#,
		#billInfo.issueType#,
		#billInfo.fapiaoType#,
		#billInfo.applyDate#,
		#billInfo.balance#,
		#billInfo.insureId#,
		#billInfo.ttmpRcno#
		)
	</insert>


	<update id="updateBill" parameterClass="java.util.Map">
		update VMS_BILL_INFO set
		DRAWER = #billInfo.drawer#,
		CANCEL_INITIATOR =
		#billInfo.cancelInitiator#,
		REMARK = #billInfo.remark#,
		PAYEE =
		#billInfo.payee#,
		OPERATESTATUS = DATASTATUS,
		DATASTATUS = #billInfo.dataStatus#,
		CANCEL_REASON =
		#billInfo.cancelReason#,
		FAPIAO_TYPE = #billInfo.fapiaoType#
		where
		BILL_ID =
		#billInfo.billId#
	</update>

	<!--  cheng 新增20180829  goodsId-->
	<insert id="saveBillItem" parameterClass="java.util.Map">
		insert
		into
		VMS_BILL_ITEM_INFO (
		BILL_ID,bill_item_id,
		goods_name,specandmodel,goods_unit,goods_no,goods_price,
		tax_flag,amt,tax_rate,tax_amt,tax_item,
		IS_MAINGOODS,ROW_NATURE,DIS_ITEM_ID,DISCOUNT_RATE,GOODS_ID)
		values(
		#billItemInfo.billId#,#billItemInfo.billItemId#,
		#billItemInfo.goodsName#,#billItemInfo.specandmodel#,#billItemInfo.goodsUnit#,#billItemInfo.goodsNo#,#billItemInfo.goodsPrice#,
		#billItemInfo.taxFlag#,#billItemInfo.amt#,#billItemInfo.taxRate#,#billItemInfo.taxAmt#,#billItemInfo.taxItem#,
		#billItemInfo.isMainGoods#,#billItemInfo.rowNature#,#billItemInfo.disItemId#,#billItemInfo.discountRate#,#billItemInfo.goodsId#)
	</insert>


	<select id="selBillAmtByBillId" parameterClass="java.util.Map"
		resultClass="billInfo">
		select sum(fo.amt) as amtSum,
		sum(fo.Tax_Amt) as taxAmtSum,
		sum(fo.amt) + sum(fo.Tax_Amt) as sumAmt
		from vms_bill_info id
		left join
		vms_bill_item_info fo
		on id.Bill_Id = fo.Bill_Id
		where id.Bill_Id
		=
		#billInfo.billId#
	</select>

	<update id="updatePreBillItemInfo" parameterClass="java.util.Map">
		UPDATE
		VMS_BILL_ITEM_INFO SET
		BILL_ID = #billItemInfo.billId#,
		GOODS_NAME =
		#billItemInfo.goodsName#,
		SPECANDMODEL = #billItemInfo.specandmodel#,
		GOODS_UNIT = #billItemInfo.goodsUnit#,
		GOODS_NO =
		#billItemInfo.goodsNo#,
		GOODS_PRICE = #billItemInfo.goodsPrice#,
		TAX_FLAG = #billItemInfo.taxFlag#,
		AMT = #billItemInfo.amt#,
		TAX_RATE =
		#billItemInfo.taxRate#,
		TAX_AMT = #billItemInfo.taxAmt#,
		TAX_ITEM =
		#billItemInfo.taxItem#,
		IS_MAINGOODS = #billItemInfo.isMainGoods#,
		ROW_NATURE = #billItemInfo.rowNature#,
		DIS_ITEM_ID =
		#billItemInfo.disItemId#,
		DISCOUNT_RATE = #billItemInfo.discountRate#
		WHERE BILL_ITEM_ID = #billItemInfo.billItemId#
	</update>

	<update id="updateBillItem" parameterClass="java.util.Map">
		update
		VMS_BILL_ITEM_INFO set
		bill_id = #billItemInfo.billId#,trans_id =
		#billItemInfo.transId#,trans_type
		= #billItemInfo.transType#,
		goods_name = #billItemInfo.goodsName#,specandmodel =
		#billItemInfo.specandmodel#,
		goods_unit =
		#billItemInfo.goodsUnit#,goods_no =
		#billItemInfo.goodsNo#,goods_price
		= #billItemInfo.goodsPrice#,
		tax_flag = #billItemInfo.taxFlag#,amt =
		#billItemInfo.amt#,tax_rate =
		#billItemInfo.taxRate#,tax_amt =
		#billItemInfo.taxAmt#,tax_item =
		#billItemInfo.taxItem#,
		IS_MAINGOODS =
		#billItemInfo.isMainGoods#,ROW_NATURE =
		#billItemInfo.rowNature#,DIS_ITEM_ID =
		#billItemInfo.disItemId#,DISCOUNT_RATE = #billItemInfo.discountRate#
		where bill_item_id = #billItemInfo.billItemId#
	</update>

	<select id="findBusiness" parameterClass="java.util.Map"
		resultClass="business">
		select
		t.ID as businessId,
		t.VERIFICATION_TYPE as businessCode,
		t.VERIFICATION_NAME as businessCName,
		t.TAX_RATE as hasTax
		from
		VMS_TRANS_VERIFICATION t
		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessId"> t.BUSINESS_ID =
				#business.businessId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCode"> t.BUSINESS_CODE =
				#business.businessCode#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.hasTax"> t.TAX_RATE =
				#business.hasTax#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCName"> t.BUSINESS_CNAME like
				'%$business.businessCName$%' </isNotEmpty>
		</dynamic>
	</select>

	<select id="findBusinessCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_BUSINESS_TB t
		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessId"> t.BUSINESS_ID =
				#business.businessId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCode"> t.BUSINESS_CODE =
				#business.businessCode#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.hasTax"> t.HAS_TAX =
				#business.hasTax#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCName"> t.BUSINESS_CNAME like
				'%$business.businessCName$%' </isNotEmpty>
		</dynamic>
	</select>
	<select id="findCountry" parameterClass="java.util.Map"
		resultClass="customer">
		select
		t.COUNTRY_KEY as customerNationality,
		t.COUNTRY_SNAME as countrySName
		from VMS_COUNTRY t
	</select>
	<delete id="deleteCustomer" parameterClass="java.util.Map">
		delete from vms_customer_tb
		where 1=1
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="transId"> customer_id =
				#customerId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="billId"> customer_code =
				#customerCode#
			</isNotEmpty>
		</dynamic>
	</delete>

	<select id="getTransIds" parameterClass="java.util.Map"
		resultClass="billInfo">
		select trans_id as transId from vms_trans_bill where
		bill_id = '$billId$'
	</select>

	<select id="findInitLogList" parameterClass="java.util.Map"
		resultClass="initRunningLog">
		select userId, initTime, runTime, instCode, dataDate, description,
		tableId
		from vms_init_log
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="runLog.userId">
				userId =
				#runLog.userId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="runLog.initTime">
				initTime =
				#runLog.initTime#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="runLog.instCode">
				instCode =
				#runLog.instCode#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="runLog.dataDate">
				dataDate =
				#runLog.dataDate#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="runLog.tableId">
				tableId =
				#runLog.tableId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="runLog.isRecent">
				initTime in (select
				max(initTime) from vms_init_log
				where instCode = #runLog.instCode#
				and dataDate = #runLog.dataDate#)
			</isNotEmpty>
		</dynamic>
		order by userId, runTime asc
	</select>

	<!-- 初始化XML标签 -->
	<select id="select_XmlLabel_ByType" parameterClass="java.util.Map"
		resultClass="xmlColumnInfo">
		select * from vms_column_info where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="billType">
				bill_type = #billType#
			</isNotEmpty>
			<!-- <isNotEmpty prepend="and" property="tableId"> table_id = #tableId# 
				</isNotEmpty> -->
		</dynamic>
		order by order1 asc
	</select>

	<!-- 初始化XML子节点标签 -->
	<select id="select_Xml_SubLabel_ByType" parameterClass="java.util.Map"
		resultClass="xmlColumnInfo">
		select * from vms_column_info where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="billType">
				bill_type = #billType#
			</isNotEmpty>

			<isNotEmpty prepend="and" property="subTableId">
				table_id = #subTableId#
			</isNotEmpty>
		</dynamic>
		and is_sub = '1' order by order1 asc
	</select>

	<!-- 初始化XML主表节点数据 -->
	<select id="select_XmlDatas_ByType" parameterClass="java.util.Map"
		resultClass="billInfo">
		select bill_id as billId,
		bill_code as billCode,
		bill_no as
		billNo,
		bill_date as billDate,
		customer_name as customerName,
		customer_taxno as customerTaxno,
		CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		remark as remark,
		reviewer as reviewer,
		payee as
		payee
		from $tableId$
		where bill_type = '1'
		and datastatus in ('3', '4')
	</select>

	<!-- czl -->
	<select id="findTaxpayerType" parameterClass="java.util.Map"
		resultClass="billInfo">
		select bill_id as billId,
		bill_code as billCode,
		bill_no as
		billNo,
		bill_date as billDate,
		customer_name as customerName,
		b.customer_taxno as customerTaxno,
		CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		remark as remark,
		reviewer as reviewer,
		payee as
		payee
		from $tableId$ b, VMS_CUSTOMER_INFO t
		where
		b.CUSTOMER_TAXNO=t.CUSTOMER_TAXNO and t.TAXPAYER_TYPE=#txpayerType#
		and b.datastatus in ('3', '4')
	</select>

	<!-- czl -->
	<select id="findTaxpayerType2" parameterClass="java.util.Map"
		resultClass="billInfo">
		select bill_id as billId,
		bill_code as billCode,
		bill_no as
		billNo,
		bill_date as billDate,
		customer_name as customerName,
		b.customer_taxno as customerTaxno,
		CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		remark as remark,
		reviewer as reviewer,
		payee as
		payee
		from $tableId$ b, VMS_CUSTOMER_INFO t
		where
		b.CUSTOMER_TAXNO=t.CUSTOMER_TAXNO and t.TAXPAYER_TYPE!=#txpayerType#
		and b.datastatus in ('3', '4')
	</select>

	<!-- 初始化XML子节点数据 -->
	<select id="select_Xml_SubDatas_ByType" parameterClass="java.util.Map"
		resultClass="billItemInfo">
		select GOODS_NAME as goodsName,
		SPECANDMODEL as
		specandmodel,
		GOODS_UNIT as goodsUnit,
		GOODS_PRICE as goodsPrice,
		GOODS_NO as goodsNo,
		amt as amt,
		TAX_RATE as taxRate,
		bill_id as billId
		from $subTableId$ where bill_Id = #billId#
	</select>

	<select id="findInitLogCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1) from vms_init_log
		where tableId =
		#runLog.tableId# and instCode = #runLog.instCode# and dataDate =
		#runLog.dataDate#
	</select>

	<insert id="saveInitLog" parameterClass="java.util.Map">
		insert into vms_init_log
		(userId, initTime, runTime, instCode, dataDate, description, tableId)
		values (#runLog.userId#, #runLog.initTime#, #runLog.runTime#,
		#runLog.instCode#, #runLog.dataDate#, #runLog.description#,
		#runLog.tableId#)
	</insert>

	<delete id="deleteInputTransTemp" parameterClass="java.util.Map">
		delete from
		VMS_INPUT_TRANS_DATA
	</delete>
	<insert id="importTransInvoice" parameterClass="java.util.Map">
		insert into
		VMS_INPUT_TRANS_DATA
		(BANK_CODE,
		REMARK,
		DEAL_NO,
		BILL_CODE,
		BILL_NO,
		AMT_CNY,
		TAX_AMT_CNY,
		INCOME_CNY,
		SURTAX1_AMT_CNY,
		SURTAX2_AMT_CNY,
		SURTAX3_AMT_CNY,
		SURTAX4_AMT_CNY,
		VENDOR_ID,
		TRANS_DATE)
		VALUES
		(#bankCode#,
		#remark#,
		#dealNo#,
		#billCode#,
		#billNo#,
		#amtCny#,
		#taxAmtCny#,
		#incomeCny#,
		#surtax1AmtCny#,
		#surtax2AmtCny#,
		#surtax3AmtCny#,
		#surtax4AmtCny#,
		#vendorId#,
		#transDate#
		)
	</insert>

	<update id="updateSelectedTrans" parameterClass="java.util.Map">
		update
		VMS_INPUT_TRANS_INFO
		SET BANK_CODE = '$bankCode$',
		REMARK = '$remark$',
		DEAL_NO = '$dealNo$',
		BILL_CODE = '$billCode$',
		BILL_NO = '$billNo$',
		AMT_CNY = '$amtCny$',
		TAX_AMT_CNY = '$taxAmtCny$',
		INCOME_CNY =
		'$incomeCny$',
		SURTAX1_AMT_CNY = '$surtax1AmtCny$',
		SURTAX2_AMT_CNY =
		'$urtax2AmtCny$',
		SURTAX3_AMT_CNY = '$surtax3AmtCny$',
		SURTAX4_AMT_CNY =
		'$surtax4AmtCny$',
		VENDOR_ID = '$vendorId$',
		TRANS_DATE = '$transDate$'
		VENDOR_ID = '$vendorId$'
		WHERE BILL_CODE = '$billCode$' and
		BILL_NO =
		'$billNo$'
	</update>

	<update id="updateFreeData" parameterClass="java.util.Map">
		update $tableId$ set $updateColumns$ where 
		<![CDATA[ $updateCondition$ ]]>
	</update>

	<select id="select_sys_param_vmss" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		select selected_value from u_base_vmss_param t where
		item_key =#ITEM_KEY#
	</select>

	<delete id="deleteSelectedTrans2" parameterClass="java.util.Map">
		delete from
		VMS_TRANS_INVOICE where TRANS_ID in ($ids$)
	</delete>
	<update id="setBillStatus" parameterClass="java.util.Map">
		update VMS_BILL_INFO
		set DATASTATUS = '99' where BILL_ID = '$billId$'
	</update>

	<!-- 根据发票类型 billId获取税控盘生成的billNo和billCode -->
	<select id="findBillInfoByIDFaPiaoType" parameterClass="java.util.Map"
		resultClass="billInfo">
		select
		bi.bill_id as billId,
		bi.bill_code as billCode,
		bi.bill_no as
		billNo,
		bi.fapiao_type as fapiaoType
		from vms_bill_info bi
		where
		bi.fapiao_type ='$fapiaoType$'
		and bi.bill_id in
		<iterate property='billId' conjunction="," open="(" close=")">#billId[]#
		</iterate>
		order by bi.bill_no asc
	</select>

	<!-- 纸质发票使用明细表 -->
	<typeAlias alias="paperInvoiceUseDetail"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceUseDetail" />
	<!-- 纸质发票库存分发表 -->
	<typeAlias alias="paperInvoiceDistribute"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceDistribute" />
	<!-- 纸质发票库存明细表 -->
	<typeAlias alias="paperInvoiceStockDetail"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceStockDetail" />
	<!-- 纸质发票领用退还履历表 -->
	<typeAlias alias="paperInvoiceRbHistory"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceRbHistory" />
	<!-- 纸质发票管理一览用情报 -->
	<typeAlias alias="paperInvoiceListInfo"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceListInfo" />
	<!-- 进项附加税管理一览用情报 -->
	<typeAlias alias="inSurtaxListInfo" type="com.cjit.vms.trans.model.InSurtaxListInfo" />
	<!-- 销项附加税管理一览用情报 -->
	<typeAlias alias="outSurtaxListInfo" type="com.cjit.vms.trans.model.OutSurtaxListInfo" />
	<!-- 税控盘基本信息管理 -->
	<typeAlias alias="taxDiskInfo" type="com.cjit.vms.trans.model.TaxDiskInfo" />
	<!-- 税控盘注册信息管理 -->
	<typeAlias alias="diskRegInfo" type="com.cjit.vms.trans.model.DiskRegInfo" />
	<!--注释问题  -->
	<!-- 进项税-抵扣预警 <typeAlias alias="inputInvoiceInfo" type="com.cjit.vms.input.model.InputInvoiceInfo" 
		/> -->
	<typeAlias alias="inputInvoiceInfo" type="com.cjit.vms.input.model.InputInvoiceInfo" />
	<!-- 附加税税种维护 列表画面初期化/检索用情报 -->
	<typeAlias alias="vmsSurtaxInfo" type="com.cjit.vms.trans.model.VmsSurtaxInfo" />
	<!-- 税目信息表 -->
	<typeAlias alias="vmsTaxInfo" type="com.cjit.vms.trans.model.VmsTaxInfo" />

	<!-- 纸质发票主体信息 -->
	<typeAlias alias="paperInvoiceStock" type="com.cjit.vms.trans.model.PaperInvoiceStock" />

	<insert id="savePaperInvoiceUseDetail" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="id">
			SELECT
			PAPER_INVOICE_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into vms_paper_invoice_use_detail (paper_invoice_id,
		paper_invoice_stock_id, paper_invoice_distribute_id, invoice_code,
		invoice_no, receive_status,
		invoice_status,invalid_reason,receive_inst_id,receive_user_id,change_time)
		values (#id#, #detail.paperInvoiceStockId#,
		#detail.paperInvoiceDistributeId#, #detail.invoiceCode#,
		#detail.invoiceNo#,
		#detail.receiveStatus#,#detail.invoiceStatus#,#detail.invalidReason#,#detail.receiveInstId#,#detail.receiveUserId#,#detail.changeTime#)
	</insert>

	<insert id="savePaperInvoiceStock" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="id">
			SELECT
			PAPER_INVOICE_STOCK_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into vms_paper_invoice_stock (paper_invoice_stock_id, inst_id,
		user_id, receive_invoice_time, max_money, invoice_type,
		distribute_flag, create_time,create_user_id,create_inst_id)
		values
		
		<!--oracle版本  -->
		<!-- (#id#, #stock.instId#, #stock.userId#,
		to_date(#stock.receiveInvoiceTime#,'yyyy-mm-dd hh24:mi:ss'),
		#stock.maxMoney#, #stock.invoiceType#,
		#stock.distributeFlag#,to_date(#stock.createTime#,'yyyy-mm-dd
		hh24:mi:ss'),#stock.createUserId#,#stock.createInstId#) -->
		
		<!--mysql版本  -->
		(#id#, #stock.instId#, #stock.userId#,
		str_to_date(#stock.receiveInvoiceTime#,'%Y-%m-%d %H:%i:%s'),
		#stock.maxMoney#, #stock.invoiceType#,
		#stock.distributeFlag#,str_to_date(#stock.createTime#,'%Y-%m-%d
		%H:%i:%s'),#stock.createUserId#,#stock.createInstId#)
	</insert>
	<update id="updatePaperInvoiceStork" parameterClass="java.util.Map">
		update
		vms_paper_invoice_stock set
		inst_id = #stock.instId#,
		user_id =
		#stock.userId#,
		receive_invoice_time =
		<!-- to_date(#stock.receiveInvoiceTime#,'yyyy-mm-dd hh24:mi:ss'), -->
		str_to_date(#stock.receiveInvoiceTime#,%Y-%m-%d %H:%i:%s'),
		max_money
		= #stock.maxMoney#,
		invoice_type = #stock.invoiceType#,
		create_user_id =
		#stock.createUserId#,
		create_inst_id = #stock.createInstId#
		where
		paper_invoice_stock_id = #stock.paperInvoiceStockId#
	</update>
	<delete id="deletePaperInvoiceStorkDetail" parameterClass="java.util.Map">
		delete from vms_paper_invoice_stock_detail
		where paper_invoice_stock_id
		= #stock.paperInvoiceStockId#
	</delete>
	<insert id="savePaperInvoiceStockDetail" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="id">
			SELECT
			PAPER_INVOICE_STOCK_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into vms_paper_invoice_stock_detail (paper_invoice_stock_id,
		invoice_code, invoice_begin_no, invoice_end_no, invoice_num,
		userd_num, has_distribute_num)
		values
		(#stockDetail.paperInvoiceStockId#, #stockDetail.invoiceCode#,
		#stockDetail.invoiceBeginNo#, #stockDetail.invoiceEndNo#,
		#stockDetail.invoiceNum#,
		#stockDetail.userdNum#,#stockDetail.hasDistributeNum#)
	</insert>
	<select id="countPaperInvoiceCode" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) as countNum from vms_paper_invoice_stock_detail t
		where invoice_code = #invoiceCode#
		<isNotEmpty prepend=" AND " property="stockId">
			t.paper_invoice_stock_id != #stockId#
		</isNotEmpty>
	</select>
	<select id="findPaperInvoiceStock" parameterClass="java.util.Map"
		resultClass="PaperInvoiceStock">
		select
		paper_invoice_stock_id as paperInvoiceStockId,
		inst_id as instId,
		user_id as userId,
		receive_invoice_time as
		receiveInvoiceTime,
		max_money as maxMoney,
		invoice_type as invoiceType,
		distribute_flag as distributeFlag
		from vms_paper_invoice_stock
		where
		paper_invoice_stock_id = #invoiceStockId#
	</select>
	<select id="findPaperInvoiceStockDetail" parameterClass="java.util.Map"
		resultClass="PaperInvoiceStockDetail">
		select
		paper_invoice_stock_id as paperInvoiceStockId,
		invoice_code as invoiceCode,
		invoice_begin_no as invoiceBeginNo,
		invoice_end_no as invoiceEndNo
		from vms_paper_invoice_stock_detail
		where paper_invoice_stock_id = #invoiceStockId#
	</select>


	<select id="findReceiveUserByInvoiceRange" parameterClass="java.util.Map"
		resultClass="paperInvoiceRbHistory">
	<![CDATA[
		select distinct receive_inst_id as receiveInstId ,receive_user_id as  receiveUserId from VMS_PAPER_INVOICE_RB_HISTORY
		where paper_invoice_rb_history_id
		 in (select PAPER_INVOICE_RB_HISTORY_ID from VMS_PAPER_INVOICE_RB_DETAIL where INVOICE_CODE=#invoice_code# and INVOICE_NO>= #invoice_begin_no# and INVOICE_NO<=#invoice_end_no#)
		]]>
	</select>
	<select id="findMayBackNumByInvoiceRange" parameterClass="java.util.Map"
		resultClass="long">
	<![CDATA[
		select count(invoice_no) from VMS_PAPER_INVOICE_RB_DETAIL where INVOICE_CODE=#invoice_code# and INVOICE_NO>= #invoice_begin_no# and INVOICE_NO<=#invoice_end_no#
		]]>
	</select>


	<!-- 纸质发票使用明细件数的取得 -->
	<select id="getPaperInvoiceUseDetailCnt" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_PAPER_INVOICE_USE_DETAIL a
		where
		a.INVOICE_CODE = #invoiceCode#
		and a.INVOICE_NO = #invoiceNo#
	</select>

	<!-- 空白作废发票信息的更新 -->
	<update id="updateInvalidPaperInvoiceUseDetail" parameterClass="java.util.Map">
		update VMS_PAPER_INVOICE_USE_DETAIL set INVOICE_STATUS = 2,
		INVALID_REASON = #invalidReason#, CHANGE_TIME = sysdate
		where
		INVOICE_CODE = #invoiceCode# and INVOICE_NO = #invoiceNo#
	</update>






	<delete id="deletePaperInvoiceRbDetail" parameterClass="java.util.Map">
	<![CDATA[ 
		delete from vms_paper_invoice_rb_detail 
		where invoice_code = #invoiceCode#
		and invoice_no>= #invoiceBeginNo#
		and invoice_no<= #invoiceEndNo#
		]]>
	</delete>
	<update id="updatePaperInvoiceUseDetailReceiveInfo"
		parameterClass="java.util.Map">
	<![CDATA[ 
		update   vms_paper_invoice_use_detail set
		receive_inst_id=#receiveInstId#,
		receive_user_id=#receiveUserId#
		where invoice_code = #invoiceCode#
		and invoice_no>= #invoiceBeginNo#
		and invoice_no<= #invoiceEndNo#
		]]>
	</update>

	<!-- vms_trans_info.trans_type关联的business_tb.business_cname -->
	<select id="findGoodsNameByTransType" parameterClass="java.util.Map"
		resultClass="String">
		select t.business_cname from vms_business_tb t where
		t.business_code=#transType#
	</select>

	<!-- 获取进项附加税begin -->
	<select id="findInSurtaxListInfo" parameterClass="java.util.Map"
		resultClass="inSurtaxListInfo">
		select
		UBI.TAXPERNUMBER as taxPerNumber,
		UBI.TAXPERNAME as taxPerName,
		VSI.SURTAX_TYPE as surtaxType,
		(SELECT T_CODE_DICTIONARY.CODE_NAME FROM
		T_CODE_DICTIONARY WHERE
		T_CODE_DICTIONARY.CODE_TYPE='SURTAX_AMT_TYPE'
		AND
		T_CODE_DICTIONARY.CODE_VALUE_STANDARD_NUM=VSI.SURTAX_TYPE) as
		surtaxName,
		<!-- TO_CHAR(VSI.SURTAX_RATE, '0.00') as surtaxRate, -->
		convert(VSI.SURTAX_RATE, char(50)) as surtaxRate,
		SUM(VITI.TAX_AMT_CNY) as taxAmtCny,
		(SUM(VITI.TAX_AMT_CNY) *
		VSI.SURTAX_RATE) as gatherSurtax,
		SUM(VITI.SURTAX1_AMT_CNY) as
		surtax1AmtCny,
		SUM(VITI.SURTAX2_AMT_CNY) as surtax2AmtCny,
		SUM(VITI.SURTAX3_AMT_CNY) as surtax3AmtCny,
		SUM(VITI.SURTAX4_AMT_CNY)
		as surtax4AmtCny,
		UBI.INST_NAME as instName
		FROM VMS_INPUT_TRANS_INFO
		VITI INNER JOIN U_BASE_INST UBI
		ON VITI.BANK_CODE=UBI.INST_ID
		<dynamic>
			<isNotEmpty prepend="and" property="taxpernumber">
				UBI.TAXPERNUMBER=#taxpernumber#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpername">
				UBI.TAXPERNAME like
				'%$taxpername$%'
			</isNotEmpty>
		</dynamic>
		INNER JOIN VMS_SURTAX_INFO VSI
		ON VSI.TAXPAYER_ID = UBI.TAXPERNUMBER
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxtype">
				VSI.SURTAX_TYPE=#surtaxtype#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxrate">
				VSI.SURTAX_RATE=#surtaxrate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<!-- <isNotEmpty prepend="and" property="applyperiod">
				to_char(to_date(trans_date,'yyyy-mm-dd'),'yyyymm') = #applyperiod#
			</isNotEmpty> -->
			<isNotEmpty prepend="and" property="applyperiod">
				date_format(str_to_date(trans_date,'%Y-%m-%d'),'%Y%m') = #applyperiod#
			</isNotEmpty>
		</dynamic>
		GROUP BY UBI.TAXPERNUMBER,
		UBI.TAXPERNAME,VSI.SURTAX_TYPE,VSI.SURTAX_NAME,VSI.SURTAX_RATE,UBI.INST_NAME
	</select>
	<select id="findInSurtaxListInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from(
		select
		UBI.TAXPERNUMBER as taxPerNumber,
		UBI.TAXPERNAME as taxPerName,
		VSI.SURTAX_TYPE as surtaxType,
		(SELECT
		T_CODE_DICTIONARY.CODE_NAME FROM T_CODE_DICTIONARY WHERE
		T_CODE_DICTIONARY.CODE_TYPE='SURTAX_AMT_TYPE' AND
		T_CODE_DICTIONARY.CODE_VALUE_STANDARD_NUM=VSI.SURTAX_TYPE) as
		surtaxName,
		VSI.SURTAX_RATE as surtaxRate,
		SUM(VITI.TAX_AMT_CNY) as
		taxAmtCny,
		(SUM(VITI.TAX_AMT_CNY) * VSI.SURTAX_RATE) as gatherSurtax,
		SUM(VITI.SURTAX1_AMT_CNY) as surtax1AmtCny,
		SUM(VITI.SURTAX2_AMT_CNY)
		as surtax2AmtCny,
		SUM(VITI.SURTAX3_AMT_CNY) as surtax3AmtCny,
		SUM(VITI.SURTAX4_AMT_CNY) as surtax4AmtCny,
		UBI.INST_NAME as instName
		FROM VMS_INPUT_TRANS_INFO VITI INNER JOIN U_BASE_INST UBI
		ON
		VITI.BANK_CODE=UBI.INST_ID
		<dynamic>
			<isNotEmpty prepend="and" property="taxpernumber">
				UBI.TAXPERNUMBER=#taxpernumber#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpername">
				UBI.TAXPERNAME like
				'%$taxpername$%'
			</isNotEmpty>
		</dynamic>
		INNER JOIN VMS_SURTAX_INFO VSI
		ON VSI.TAXPAYER_ID = UBI.TAXPERNUMBER
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxtype">
				VSI.SURTAX_TYPE=#surtaxtype#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxrate">
				VSI.SURTAX_RATE=#surtaxrate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
		    <!--oracle版本  -->
			<!-- <isNotEmpty prepend="and" property="applyperiod">
				to_char(to_date(trans_date,'yyyy-mm-dd'),'yyyymm') = #applyperiod#
			</isNotEmpty> -->
			
			<!--mysql版本  -->
			<isNotEmpty prepend="and" property="applyperiod">
				date_format(str_to_date(trans_date,'%Y-%m-%d'),'%Y%m') = #applyperiod#
			</isNotEmpty>
		</dynamic>
		GROUP BY UBI.TAXPERNUMBER,
		UBI.TAXPERNAME,VSI.SURTAX_TYPE,VSI.SURTAX_NAME,VSI.SURTAX_RATE,UBI.INST_NAME
		)
	</select>
	<!-- 获取进项附加税end -->
	<select id="getBillIdSequence" parameterClass="java.util.Map" resultClass="String">
		<!-- select lpad(vms_bill_id.nextval, 11, '0') from dual -->
		<!--lpad有问题的点  -->
		select lpad(nextval('vms_bill_id'), 11, '0')
	</select>
	<!-- 附加税税种维护 列表画面初期化/检索用情报检索 -->
	<select id="getListSurtaxTypeInfo" parameterClass="java.util.Map"
		resultClass="vmsSurtaxInfo">
		select distinct si.TAXPAYER_ID as taxpayerId,
		b.Inst_Name as
		taxperName,
		si.SURTAX_TYPE as surtaxType,
		si.SURTAX_NAME as surtaxName,
		<!-- to_char(si.SURTAX_RATE, '90.99') as surtaxRate, -->
		convert(si.SURTAX_RATE, char(50)) as surtaxRate,
		si.SURTAX_STR_DT as
		surtaxStrDt,
		si.SURTAX_END_DT as surtaxEndDt
		from vms_surtax_info si
		left join u_Base_Inst b
		on b.TAXPERNUMBER = si.Taxpayer_Id
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerId">
				si.TAXPAYER_ID in
				('$taxpayerId$')
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxperName">
				b.inst_name like
				'%$taxperName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxType">
				si.SURTAX_TYPE =
				#surtaxType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxRate">
				si.SURTAX_RATE =
				#surtaxRate#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="surtaxStrDt">
					<![CDATA[ to_date(si.SURTAX_STR_DT,'yyyy-mm-dd') >= to_date(#surtaxStrDt#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxEndDt">
					<![CDATA[ to_date(si.SURTAX_END_DT,'yyyy-mm-dd') <= to_date(#surtaxEndDt#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxStrDt">
					<![CDATA[ str_to_date(si.SURTAX_STR_DT,'%Y-%m-%d') >= str_to_date(#surtaxStrDt#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxEndDt">
					<![CDATA[ str_to_date(si.SURTAX_END_DT,'%Y-%m-%d') <= str_to_date(#surtaxEndDt#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		order by
		si.SURTAX_STR_DT
	</select>

	<!-- 附加税税种维护 列表画面初期化/检索用情报件数检索 -->
	<select id="getListSurtaxTypeInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select distinct Count(*)
		from vms_surtax_info si
		left join u_Base_Inst b
		on b.TAXPERNUMBER = si.Taxpayer_Id
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerId">
				si.TAXPAYER_ID in
				('$taxpayerId$')
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxperName">
				b.inst_name like
				'%$taxperName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxType">
				si.SURTAX_TYPE =
				#surtaxType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxRate">
				si.SURTAX_RATE =
				#surtaxRate#
			</isNotEmpty>
		</dynamic>
		
		<!--Oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="surtaxStrDt">
					<![CDATA[ to_date(si.SURTAX_STR_DT,'yyyy-mm-dd') >= to_date(#surtaxStrDt#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxEndDt">
					<![CDATA[ to_date(si.SURTAX_END_DT,'yyyy-mm-dd') <= to_date(#surtaxEndDt#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxStrDt">
					<![CDATA[ str_to_date(si.SURTAX_STR_DT,'%Y-%m-%d') >= str_to_date(#surtaxStrDt#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxEndDt">
					<![CDATA[ str_to_date(si.SURTAX_END_DT,'%Y-%m-%d') <= str_to_date(#surtaxEndDt#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
	</select>
	<!-- 附加税税率维护表情报检索 -->
	<select id="getVmsSurtaxInfo" parameterClass="java.util.Map"
		resultClass="vmsSurtaxInfo">
		select
		a.TAXPAYER_ID as taxpayerId,
		(select u.Inst_Name from
		u_Base_Inst u
		where u.Taxpernumber = a.TAXPAYER_ID
		and u.taxperNumber is
		not null ) as
		taxperName,
		a.SURTAX_TYPE as
		surtaxType,
		a.SURTAX_NAME as
		surtaxName,
		<!-- to_char(a.SURTAX_RATE,'FM90.99') as surtaxRate, -->
		convert(a.SURTAX_RATE,char(50)) as surtaxRate,
		a.SURTAX_STR_DT as
		surtaxStrDt,
		a.SURTAX_END_DT as surtaxEndDt
		from
		vms_surtax_info a
		where
		a.TAXPAYER_ID = #taxpayerId#
		and a.SURTAX_TYPE =
		#surtaxType#
	</select>
	<!-- 附加税税种维护-新增 -->
	<insert id="surtaxTypeAddInfo" parameterClass="java.util.Map">
		insert into
		vms_surtax_info (TAXPAYER_ID, SURTAX_TYPE, SURTAX_NAME,
		SURTAX_RATE,
		SURTAX_STR_DT, SURTAX_END_DT)
		values (#taxpayerId#, #surtaxType#,
		#surtaxName#, #surtaxRate#,
		#surtaxStrDt#, #surtaxEndDt#)
	</insert>
	<!-- 附加税税种维护-修改 -->
	<update id="surtaxTypeUpdInfo" parameterClass="java.util.Map">
		update
		vms_surtax_info set SURTAX_RATE = #surtaxRate#, SURTAX_STR_DT =
		#surtaxStrDt#, SURTAX_END_DT = #surtaxEndDt#
		where TAXPAYER_ID =
		#taxpayerId# and SURTAX_TYPE = #surtaxType#
	</update>
	<!-- 附加税税种维护 列表画面 删除 -->
	<delete id="delSurtaxTypeInfo" parameterClass="java.util.Map">
		delete from
		vms_surtax_info where TAXPAYER_ID = #taxpayerId# and SURTAX_TYPE =
		#surtaxType#
	</delete>

	<!-- 获取销项附加税begin -->
	<select id="findOutSurtaxListInfo" parameterClass="java.util.Map"
		resultClass="outSurtaxListInfo">
		select
		UBI.TAXPERNUMBER as taxPerNumber,
		UBI.TAXPERNAME as taxPerName,
		VSI.SURTAX_TYPE as surtaxType,
		(SELECT T_CODE_DICTIONARY.CODE_NAME FROM
		T_CODE_DICTIONARY WHERE
		T_CODE_DICTIONARY.CODE_TYPE='SURTAX_AMT_TYPE'
		AND
		T_CODE_DICTIONARY.CODE_VALUE_STANDARD_NUM=VSI.SURTAX_TYPE) as
		surtaxName,
		<!-- to_char(VSI.SURTAX_RATE,'90.99') as surtaxRate, -->
		convert(VSI.SURTAX_RATE,char(50)) as surtaxRate,
		SUM(VTI.TAX_AMT_CNY) as taxAmtCny,
		(SUM(VTI.TAX_AMT_CNY) *
		VSI.SURTAX_RATE) as gatherSurtax,
		SUM(VTI.SURTAX1_AMT_CNY) as
		surtax1AmtCny,
		SUM(VTI.SURTAX2_AMT_CNY) as surtax2AmtCny,
		SUM(VTI.SURTAX3_AMT_CNY) as surtax3AmtCny,
		SUM(VTI.SURTAX4_AMT_CNY) as
		surtax4AmtCny,
		UBI.INST_NAME as instName
		FROM VMS_TRANS_INFO VTI
		INNER
		JOIN U_BASE_INST UBI
		ON VTI.BANK_CODE=UBI.INST_ID
		<dynamic>
			<isNotEmpty prepend="and" property="taxPerNumber">
				UBI.TAXPERNUMBER=#taxPerNumber#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxPerName">
				UBI.TAXPERNAME like
				'%$taxPerName$%'
			</isNotEmpty>
		</dynamic>
		INNER JOIN VMS_SURTAX_INFO VSI
		ON VSI.TAXPAYER_ID = UBI.TAXPERNUMBER
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxType">
				VSI.SURTAX_TYPE=#surtaxType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxRate">
				VSI.SURTAX_RATE=#surtaxRate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="WHERE" property="applyPeriod">
				substr(trans_date,0,7) = #applyPeriod#
			</isNotEmpty>
		</dynamic>
		GROUP BY UBI.TAXPERNUMBER,
		UBI.TAXPERNAME,VSI.SURTAX_TYPE,VSI.SURTAX_NAME,VSI.SURTAX_RATE,UBI.INST_NAME
	</select>
	<select id="findOutSurtaxListInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from (
		select
		UBI.TAXPERNUMBER as taxPerNumber,
		UBI.TAXPERNAME as taxPerName,
		VSI.SURTAX_TYPE as surtaxType,
		(SELECT
		T_CODE_DICTIONARY.CODE_NAME FROM T_CODE_DICTIONARY WHERE
		T_CODE_DICTIONARY.CODE_TYPE='SURTAX_AMT_TYPE' AND
		T_CODE_DICTIONARY.CODE_VALUE_STANDARD_NUM=VSI.SURTAX_TYPE) as
		surtaxName,
		VSI.SURTAX_RATE as surtaxRate,
		SUM(VTI.TAX_AMT_CNY) as
		taxAmtCny,
		(SUM(VTI.TAX_AMT_CNY) * VSI.SURTAX_RATE) as gatherSurtax,
		SUM(VTI.SURTAX1_AMT_CNY) as surtax1AmtCny,
		SUM(VTI.SURTAX2_AMT_CNY) as
		surtax2AmtCny,
		SUM(VTI.SURTAX3_AMT_CNY) as surtax3AmtCny,
		SUM(VTI.SURTAX4_AMT_CNY) as surtax4AmtCny,
		UBI.INST_NAME as instName
		FROM VMS_TRANS_INFO VTI
		LEFT JOIN U_BASE_INST UBI
		ON
		VTI.BANK_CODE=UBI.INST_ID
		<dynamic>
			<isNotEmpty prepend="and" property="taxPerNumber">
				UBI.TAXPERNUMBER=#taxPerNumber#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxPerName">
				UBI.TAXPERNAME like
				'%$taxPerName$%'
			</isNotEmpty>
		</dynamic>
		LEFT JOIN VMS_SURTAX_INFO VSI
		ON VSI.TAXPAYER_ID = UBI.TAXPERNUMBER
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxType">
				VSI.SURTAX_TYPE=#surtaxType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="surtaxRate">
				VSI.SURTAX_RATE=#surtaxRate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="WHERE" property="applyPeriod">
				substr(trans_date,0,7) = #applyPeriod#
			</isNotEmpty>
		</dynamic>
		GROUP BY UBI.TAXPERNUMBER,
		UBI.TAXPERNAME,VSI.SURTAX_TYPE,VSI.SURTAX_NAME,VSI.SURTAX_RATE,UBI.INST_NAME
		)
	</select>
	<!-- 获取销项附加税end -->

	<!-- 税控盘基本信息管理begin -->
	<select id="findTaxDiskInfoList" parameterClass="java.util.Map"
		resultClass="taxDiskInfo">
		select distinct
		t.TAX_DISK_NO as taxDiskNo,
		t.BILL_MACHINE_NO as
		billMachineNo,
		t.TAX_DISK_VERSION as taxDiskVersion,
		t.TAX_DISK_DATE as
		taxDiskDate,
		t.TAXPAYER_NO as taxpayerNo,
		t.TAXPAYER_NAM as taxpayerNam,
		t.TAX_DISK_PSW as taxDiskPsw,
		t.TAX_CERT_PSW as taxCertPsw,
		t.TAX_BUREAU_NUM as taxBureauNum,
		t.TAX_BUREAU_NAM as taxBureauNam,
		t.DISK_BILL_TYPE as diskBillType,
		t.DISK_CUST_TYPE as diskCustType,
		t.RETAIN_INFO as
		retainInfo,
		t.ENABLE_DT as enableDt
		from
		VMS_TAX_DISK_INFO t
		left join u_Base_Inst b
		on b.Taxpernumber =
		t.Taxpayer_No
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Taxpayer_No in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				iafv.inst_id= #instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerNo">
				t.TAXPAYER_NO=#taxpayerNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxDiskNo">
				t.TAX_DISK_NO=#taxDiskNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxperName">
				t.TAXPAYER_NAM LIKE
				'%$taxperName$%'
			</isNotEmpty>
		</dynamic>
		<!-- Jason add 20151030 end -->
	</select>
	<select id="findTaxDiskInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select distinct count(*)
		from VMS_TAX_DISK_INFO t
		left join u_Base_Inst
		b
		on b.Taxpernumber = t.Taxpayer_No
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Taxpayer_No in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				iafv.inst_id= #instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerNo">
				t.TAXPAYER_NO=#taxpayerNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxDiskNo">
				t.TAX_DISK_NO=#taxDiskNo#
			</isNotEmpty>
		</dynamic>
		<!-- Jason add 20151030 start -->
		<dynamic>
			<isNotEmpty prepend="and" property="taxperName">
				t.TAXPAYER_NAM LIKE
				'%$taxperName$%'
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findTaxDiskInfoDetail" parameterClass="java.util.Map"
		resultClass="taxDiskInfo">
		select
		VTDI.TAX_DISK_NO as taxDiskNo,
		VTDI.BILL_MACHINE_NO
		as billMachineNo,
		VTDI.TAX_DISK_VERSION as taxDiskVersion,
		VTDI.TAX_DISK_DATE as taxDiskDate,
		VTDI.TAXPAYER_NO as taxpayerNo,
		VTDI.TAXPAYER_NAM as taxpayerNam,
		VTDI.TAX_DISK_PSW as taxDiskPsw,
		VTDI.TAX_CERT_PSW as taxCertPsw,
		VTDI.TAX_BUREAU_NUM as taxBureauNum,
		VTDI.TAX_BUREAU_NAM as taxBureauNam,
		VTDI.DISK_BILL_TYPE as
		diskBillType,
		VTDI.DISK_CUST_TYPE as diskCustType,
		VTDI.RETAIN_INFO as
		retainInfo,
		VTDI.ENABLE_DT as enableDt
		from VMS_TAX_DISK_INFO VTDI
		where
		VTDI.TAX_DISK_NO =
		#taxDiskNo# and VTDI.TAXPAYER_NO = #taxpayerNo#
	</select>
	<update id="updateTaxDiskInfo" parameterClass="java.util.Map">
		update
		VMS_TAX_DISK_INFO set
		BILL_MACHINE_NO = #info.billMachineNo#,
		TAX_DISK_VERSION = #info.taxDiskVersion#,
		TAX_DISK_DATE =
		#info.taxDiskDate#,
		TAXPAYER_NAM = #info.taxpayerNam#,
		TAX_BUREAU_NUM =
		#info.taxBureauNum#,
		TAX_BUREAU_NAM = #info.taxBureauNam#,
		DISK_BILL_TYPE = #info.diskBillType#,
		DISK_CUST_TYPE =
		#info.diskCustType#,
		RETAIN_INFO = #info.retainInfo#,
		ENABLE_DT =
		#info.enableDt#
		where TAX_DISK_NO = #info.taxDiskNo# and TAXPAYER_NO =
		#info.taxpayerNo#
	</update>
	<update id="updateTaxDiskInfoForPasswd" parameterClass="java.util.Map">
		update
		VMS_TAX_DISK_INFO set
		TAXPAYER_NAM = #info.taxpayerNam#,
		TAX_DISK_PSW =
		#info.taxDiskPsw#,
		TAX_CERT_PSW = #info.taxCertPsw#
		where TAX_DISK_NO =
		#info.taxDiskNo# and TAXPAYER_NO = #info.taxpayerNo#
	</update>
	<insert id="saveTaxDiskInfo" parameterClass="java.util.Map">
		insert into
		VMS_TAX_DISK_INFO (TAX_DISK_NO, BILL_MACHINE_NO, TAX_DISK_VERSION,
		TAX_DISK_DATE, TAXPAYER_NO, TAXPAYER_NAM, TAX_DISK_PSW, TAX_CERT_PSW,
		TAX_BUREAU_NUM, TAX_BUREAU_NAM, DISK_BILL_TYPE, DISK_CUST_TYPE,
		RETAIN_INFO, ENABLE_DT)
		values (#info.taxDiskNo#, #info.billMachineNo#,
		#info.taxDiskVersion#,
		#info.taxDiskDate#,
		#info.taxpayerNo#,#info.taxpayerNam#,#info.taxDiskPsw#,#info.taxCertPsw#,#info.taxBureauNum#,#info.taxBureauNam#,#info.diskBillType#,#info.diskCustType#,#info.retainInfo#,#info.enableDt#)
	</insert>
	<select id="countTaxDiskNo" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) as countNum from VMS_TAX_DISK_INFO t
		where
		TAX_DISK_NO = #taxDiskNo# and TAXPAYER_NO = #taxpayerNo#
	</select>
	<delete id="deleteTaxDiskInfo" parameterClass="java.util.Map">
		delete from
		VMS_TAX_DISK_INFO t where TAX_DISK_NO = #taxDiskNo# and TAXPAYER_NO =
		#taxpayerNo#
	</delete>
	<!-- 税控盘基本信息管理end -->
	<!-- 税控盘注册信息管理 begin -->
	<select id="findDiskRegInfoList" parameterClass="java.util.Map"
		resultClass="diskRegInfo">
		select
		UTDI.TAX_DISK_NO as taxDiskNo,
		UTDI.TAXPAYER_NO as taxpayerNo,
		case when
		<!-- length(VDRI.REGISTERED_INFO)>10 then substr(VDRI.REGISTERED_INFO, 
			0, 10)|| '***' else VDRI.REGISTERED_INFO -->

		length(VDRI.REGISTERED_INFO)>10 then
		concat(substring(VDRI.REGISTERED_INFO, 0,
		10), '***' )else
		VDRI.REGISTERED_INFO

		end as registeredInfo
		<!-- from VMS_DISK_REG_INFO VDRI,VMS_TAX_DISK_INFO UTDI -->
		from VMS_TAX_DISK_INFO UTDI left join VMS_DISK_REG_INFO VDRI on
		UTDI.TAX_DISK_NO = VDRI.TAX_DISK_NO AND UTDI.TAXPAYER_NO =
		VDRI.TAXPAYER_NO
		where
		<!-- VDRI.TAX_DISK_NO=UTDI.TAX_DISK_NO -->
		<!-- and -->
		UTDI.TAXPAYER_NO in (select TAXPERNUMBER from u_base_inst where
		1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				inst_id in
				<iterate property="auth_inst_ids" open="(" close=")"
					conjunction=",">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				inst_id= #instId#
			</isNotEmpty>
		</dynamic>
		)
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerNo">
				VDRI.TAXPAYER_NO=#taxpayerNo#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDiskRegInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		<!-- from VMS_DISK_REG_INFO VDRI,VMS_TAX_DISK_INFO UTDI -->
		from VMS_TAX_DISK_INFO UTDI left join VMS_DISK_REG_INFO VDRI on
		UTDI.TAX_DISK_NO = VDRI.TAX_DISK_NO AND UTDI.TAXPAYER_NO =
		VDRI.TAXPAYER_NO
		where
		<!-- VDRI.TAX_DISK_NO=UTDI.TAX_DISK_NO -->
		<!-- and -->
		UTDI.TAXPAYER_NO in (select TAXPERNUMBER from u_base_inst where
		1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				inst_id in
				<iterate property="auth_inst_ids" open="(" close=")"
					conjunction=",">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				inst_id= #instId#
			</isNotEmpty>
		</dynamic>
		)
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayerNo">
				VDRI.TAXPAYER_NO=#taxpayerNo#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findDiskRegInfoDetailCheck" parameterClass="java.util.Map"
		resultClass="diskRegInfo">
		select
		VDRI.TAX_DISK_NO as taxDiskNo,
		VDRI.TAXPAYER_NO as
		taxpayerNo,
		VDRI.REGISTERED_INFO as registeredInfo
		from
		VMS_DISK_REG_INFO VDRI
		where TAX_DISK_NO =
		#taxDiskNo# and TAXPAYER_NO =
		#taxpayerNo#
	</select>
	<select id="findDiskRegInfoDetail" parameterClass="java.util.Map"
		resultClass="diskRegInfo">
		select
		UTDI.TAX_DISK_NO as taxDiskNo,
		UTDI.TAXPAYER_NO as
		taxpayerNo,
		VDRI.REGISTERED_INFO as registeredInfo
		from
		VMS_TAX_DISK_INFO UTDI left join
		VMS_DISK_REG_INFO VDRI on
		UTDI.TAX_DISK_NO = VDRI.TAX_DISK_NO AND
		UTDI.TAXPAYER_NO =
		VDRI.TAXPAYER_NO
		where UTDI.TAX_DISK_NO =
		#taxDiskNo# and
		UTDI.TAXPAYER_NO = #taxpayerNo#
	</select>
	<update id="updateDiskRegInfo" parameterClass="java.util.Map">
		update
		VMS_DISK_REG_INFO set
		REGISTERED_INFO = #info.registeredInfo#
		where
		TAX_DISK_NO = #info.taxDiskNo# and TAXPAYER_NO = #info.taxpayerNo#
	</update>
	<insert id="saveDiskRegInfo" parameterClass="java.util.Map">
		insert into
		VMS_DISK_REG_INFO (TAX_DISK_NO, TAXPAYER_NO, REGISTERED_INFO)
		values
		(#info.taxDiskNo#, #info.taxpayerNo#, #info.registeredInfo#)
	</insert>
	<select id="countDiskRegInfo" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) as countNum from VMS_DISK_REG_INFO t
		where
		TAX_DISK_NO = #taxDiskNo# and TAXPAYER_NO = #taxpayerNo#
	</select>
	<delete id="deleteDiskRegInfo" parameterClass="java.util.Map">
		delete from
		VMS_DISK_REG_INFO t where TAX_DISK_NO = #taxDiskNo# and TAXPAYER_NO =
		#taxpayerNo#
	</delete>
	<!-- 税控盘注册信息管理 end -->

	<!-- 销项税勾稽列表 start -->
	<select id="findBillInfoCheckList" parameterClass="java.util.Map"
		resultClass="billInfo">
		select
		t.APPLY_DATE as applyDate,
		t.BILL_DATE as billDate,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_ID as customerId,
		t.CUSTOMER_TAXNO as customerTaxno,
		t.amt_sum as amtSum,
		t.tax_amt_sum as
		taxAmtSum,
		t.sum_amt as sumAmt,
		t.issue_type as issueType,
		t.fapiao_type
		as fapiaoType,
		t.datastatus as
		dataStatus,
		t.bill_id as billId,
		t.bill_code as billCode,
		t.bill_no as
		billNo,
		t.INSTCODE as instCode
		from
		vms_bill_info t
		where t.INSTCODE in
		(
		select inst_id from u_base_inst
		where inst_id in
		<iterate property="auth_inst_ids" conjunction="," open="("
			close=")">
			#auth_inst_ids[]#
		</iterate>

		)
		and t.amt_sum>=0 and t.IS_HANDIWORK='3'
		<dynamic>
			<isNotEmpty prepend="and" property="notInTrans"> t.BILL_ID not in
				(SELECT b.BILL_ID FROM vms_trans_bill b WHERE b.BILL_ID=t.BILL_ID)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inTrans"> t.BILL_ID in (SELECT
				b.BILL_ID FROM vms_trans_bill b WHERE b.BILL_ID=t.BILL_ID)
			</isNotEmpty>
		</dynamic>
		
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="startDate"> <![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#startDate#,'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="endDate"> <![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#endDate#,'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="startDate"> <![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#startDate#,'%Y-%m-%d %H:%i:%s') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="endDate"> <![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#endDate#,'%Y-%m-%d %H:%i:%s') ]]></isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="customerName">
				t.CUSTOMER_NAME like
				'%$customerName$%'</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="customerId">
				t.CUSTOMER_ID like
				'%$customerId$%'</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				t.fapiao_type=#fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="dataStatus">
				t.datastatus=#dataStatus#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findBillInfoCheckListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from vms_bill_info t
		where t.INSTCODE in
		(select inst_id
		from u_base_inst where inst_id in
		<iterate property="auth_inst_ids" conjunction="," open="("
			close=")">
			#auth_inst_ids[]#
		</iterate>

		) and t.amt_sum>=0
		and t.IS_HANDIWORK='3'
		<dynamic>
			<isNotEmpty prepend="and" property="notInTrans"> t.BILL_ID not in
				(SELECT b.BILL_ID FROM vms_trans_bill b WHERE b.BILL_ID=t.BILL_ID)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inTrans"> t.BILL_ID in (SELECT
				b.BILL_ID FROM vms_trans_bill b WHERE b.BILL_ID=t.BILL_ID)
			</isNotEmpty>
		</dynamic>
		
		<!--Oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyDate"> <![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#applyDate#,'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="startDate"> <![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#startDate#,'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="endDate"> <![CDATA[ to_date(t.APPLY_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#endDate#,'yyyy-mm-dd hh24:mi:ss') ]]></isNotEmpty>
		</dynamic> -->
		
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyDate"> <![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#applyDate#,'%Y-%m-%d %H:%i:%s') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="startDate"> <![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#startDate#,'%Y-%m-%d %H:%i:%s') ]]></isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="endDate"> <![CDATA[ str_to_date(t.APPLY_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#endDate#,'%Y-%m-%d %H:%i:%s') ]]></isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="customerName">
				t.CUSTOMER_NAME like
				'%$customerName$%'</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				t.fapiao_type=#fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="dataStatus">
				t.datastatus=#dataStatus#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findBillInfoDetail" parameterClass="java.util.Map"
		resultClass="billInfo">
		select
		t.APPLY_DATE as applyDate,
		t.BILL_DATE as billDate,
		t.fapiao_type as fapiaoType,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		t.CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		t.CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		t.amt_sum as amtSum,
		t.tax_amt_sum as taxAmtSum,
		t.sum_amt as sumAmt,
		t.bill_id as billId,
		t.bill_code as billCode,
		t.bill_no as billNo,
		t.INSTCODE as instCode,
		t.NAME as name,
		t.TAXNO as
		taxno,
		t.ADDRESSANDPHONE as addressandphone,
		t.BANKANDACCOUNT as
		bankandaccount,
		t.DRAWER as drawer,
		t.REVIEWER as reviewer,
		t.PAYEE as
		payee
		from vms_bill_info t
		where t.BILL_ID = #billId#
	</select>
	<select id="getBillItemInfoList" parameterClass="java.util.Map"
		resultClass="billItemInfo">
		select GOODS_NAME as goodsName,
		SPECANDMODEL as
		specandmodel,
		GOODS_UNIT as goodsUnit,
		GOODS_PRICE as goodsPrice,
		GOODS_NO as goodsNo,
		amt as amt,
		TAX_RATE as taxRate,
		bill_id as billId,
		TAX_AMT as taxAmt
		from Vms_Bill_Item_Info where bill_Id = #billId#
	</select>
	<select id="getTransInfoCheckYlist" parameterClass="java.util.Map"
		resultClass="transInfo">
		select c.TRANS_ID as transId,
		c.TRANS_DATE as transDate,
		d.CUSTOMER_ID as customerId,
		d.CUSTOMER_CNAME as customerName,
		d.CUSTOMER_TAXNO as customerTaxno,
		e.TRANS_TYPE_NAME as transTypeName,
		c.TRANS_TYPE as transType,
		c.AMT_CNY as amt,
		c.TAX_FLAG as taxFlag,
		c.TAX_RATE as taxRate,
		c.TAX_AMT_CNY as taxAmt,
		c.INCOME_CNY as income,
		b.BALANCE as balance,
		c.FAPIAO_TYPE as fapiaoType,
		c.DATASTATUS as
		dataStatus
		from VMS_BILL_INFO a
		left join vms_trans_bill b on a.BILL_ID
		= b.BILL_ID
		left join VMS_TRANS_INFO c on b.TRANS_ID = c.TRANS_ID
		left
		join vms_customer_info d on c.CUSTOMER_ID = d.CUSTOMER_ID
		left join
		VMS_TRANS_TYPE e on c.TRANS_TYPE = e.TRANS_TYPE_ID
		where b.TRANS_ID is
		not null and a.bill_Id = #billId#
	</select>
	<select id="getTransInfoCheckNlist" parameterClass="java.util.Map"
		resultClass="transInfo">
		select a2.TRANS_ID as transId,
		a2.TRANS_DATE as transDate,
		d.CUSTOMER_ID as customerId,
		d.CUSTOMER_CNAME as customerName,
		d.CUSTOMER_TAXNO as customerTaxno,
		e.TRANS_TYPE_NAME as transTypeName,
		a2.TRANS_TYPE as transType,
		a2.AMT_CNY as amt,
		a2.TAX_FLAG as taxFlag,
		a2.TAX_RATE as taxRate,
		a2.TAX_AMT_CNY as taxAmt,
		a2.INCOME_CNY as
		income,
		a2.BALANCE as balance,
		a2.FAPIAO_TYPE as fapiaoType,
		a2.DATASTATUS as dataStatus,
		a2.item_code as itemCode
		from
		<!-- -->
		(select distinct(trans_id) from
		vms_trans_info a left join
		vms_customer_info b on a.CUSTOMER_ACCOUNT =
		b.customer_account
		left join
		vms_bill_info c on b.CUSTOMER_TAXNO =
		c.CUSTOMER_TAXNO where
		a.datastatus = '1' and c.BILL_ID=#billId# ) a1

		left join
		vms_trans_info
		a2
		<!-- -->
		on a1.trans_id = a2.trans_id

		left join
		vms_customer_info d on
		a2.CUSTOMER_id = d.CUSTOMER_id
		left join
		VMS_TRANS_TYPE e on
		a2.TRANS_TYPE = e.TRANS_TYPE_ID
		where 1=1 and
		a2.BALANCE not in ('0')
		<dynamic>
			<isNotEmpty prepend="and" property="transIdNotIn"> a2.TRANS_ID not in
				($transIdNotIn$)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transBusId">
				a2.TRANS_BUS_ID=#transBusId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="customerId">
				a2.CUSTOMER_ID=#customerId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bankCode">
				a2.BANK_CODE=#bankCode#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="getTransInfoCheckNlistCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from (
		select a2.TRANS_ID as transId,
		a2.TRANS_DATE as
		transDate,
		d.CUSTOMER_ID as customerId,
		d.CUSTOMER_CNAME as
		customerName,
		d.CUSTOMER_TAXNO as customerTaxno,
		e.TRANS_TYPE_NAME as
		transTypeName,
		a2.TRANS_TYPE as transType,
		a2.AMT_CNY as amt,
		a2.TAX_FLAG as taxFlag,
		a2.TAX_RATE as taxRate,
		a2.TAX_AMT_CNY as
		taxAmt,
		a2.INCOME_CNY as
		income,
		a2.BALANCE as balance,
		a2.FAPIAO_TYPE as
		fapiaoType,
		a2.DATASTATUS as dataStatus,
		a2.item_code as itemCode
		from
		<!-- -->
		(select distinct(trans_id) from
		vms_trans_info a left join
		vms_customer_info b on a.CUSTOMER_ACCOUNT =
		b.customer_account
		left join
		vms_bill_info c on b.CUSTOMER_TAXNO =
		c.CUSTOMER_TAXNO where
		a.datastatus = '1' and c.BILL_ID=#billId# ) a1

		left join
		vms_trans_info
		a2
		
		on a1.trans_id = a2.trans_id

		left join
		vms_customer_info d on
		a2.CUSTOMER_id = d.CUSTOMER_id
		left join
		VMS_TRANS_TYPE e on
		a2.TRANS_TYPE = e.TRANS_TYPE_ID
		where 1=1 and
		a2.BALANCE not in ('0')
		<dynamic>
			<isNotEmpty prepend="and" property="transIdNotIn"> a2.TRANS_ID not in
				($transIdNotIn$)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transBusId">
				a2.TRANS_BUS_ID=#transBusId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="customerId">
				a2.CUSTOMER_ID=#customerId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bankCode">
				a2.BANK_CODE=#bankCode#
			</isNotEmpty>
		</dynamic>
		)
	</select>


	<insert id="saveBillInfoCheck" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="bill_item_id">
			SELECT
			TRANS_BILL_BILL_ITEM_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into VMS_TRANS_BILL (TRANS_ID, BILL_ID, BILL_ITEM_ID, AMT_CNY,
		TAX_AMT_CNY,INCOME_CNY,BALANCE)
		values (#transId#, #billId#,
		#bill_item_id#,
		#amt#, #taxAmt#,#income#,#balance#)
	</insert>
	<select id="findOdData" parameterClass="java.util.Map"
		resultClass="transInfo" remapResults="true">
		select
		TRANS_ID as transId,
		BILL_ID as billId,
		BALANCE as balance
		from
		VMS_TRANS_BILL
		where
		BILL_ID=#billId#
		and TRANS_ID=#transId#

	</select>
	<select id="findTransInfoDetail" parameterClass="java.util.Map"
		resultClass="transInfo" remapResults="true">
		select
		t.TRANS_ID as transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE as transType,
		t.CUSTOMER_ID as
		customerId,
		t.CUSTOMER_ACCOUNT as customerAccount,
		t.TAX_FLAG as
		taxFlag,
		t.AMT_CNY as amt,
		t.TAX_RATE as taxRate,
		t.TAX_AMT_CNY as
		taxAmt,
		t.IS_REVERSE as isReverse,
		t.BANK_CODE as bankCode,
		t.REMARK as
		remark,
		t.ORG_CURR_CODE as orgCurrCode,
		t.ORG_ACC_NO as orgAccNo,
		t.AMT_CCY as amtCcy,
		t.REVERSE_TRANS_ID as reverseTransId,
		t.INCOME_CNY
		as income,
		t.SHORT_AND_OVER as shortAndOver,
		t.BALANCE as balance,
		t.INSTCODE as instCode,
		t.DATASTATUS as dataStatus,
		t.ORG_Trans_Type as
		orgTransType,
		t.ORG_Trans_SUB_Type as orgTransSubType,
		t.REVERSE_TRANS_DATE as reverseTransDate,
		t.TRANS_BUS_ID as transBusId,
		t.Trans_Curr as transCurr,
		t.TAX_AMT_CCY as taxAmtCcy,
		t.INCOME_CCY as
		incomeCcy,
		t.Surtax1_AMT_CNY as surtax1,
		t.Surtax2_AMT_CNY as surtax2,
		t.Surtax3_AMT_CNY as surtax3,
		t.Surtax4_AMT_CNY as surtax4,
		t.Trans_FaPiao_Flag as transFapiaoFlag,
		t.FaPiao_Date as fapiaoDate,
		t.FaPiao_Type as fapiaoType,
		t.Trans_Flag as transFlag,
		t.VAT_Rate_Code
		as vatRateCode
		from VMS_Trans_Info t
		where t.TRANS_ID = #transId#
	</select>
	<update id="upadteBillInfoCheck" parameterClass="java.util.Map">
		update
		vms_trans_info
		set balance=balance-#balance#
		where
		TRANS_ID = #transId#
	</update>

	<update id="updateBillInfoCheckadd" parameterClass="java.util.Map">
		update
		vms_trans_info
		set balance=balance+#balance#
		where
		TRANS_ID = #transId#
	</update>
	<update id="updateBillInfoCheckadd1" parameterClass="java.util.Map">
		update
		vms_trans_info
		set balance=balance+#balance#
		where
		TRANS_ID = #transId#
	</update>
	<update id="updateTransInfoDataStatus" parameterClass="java.util.Map">
		update
		VMS_Trans_Info set
		DATASTATUS = #dataStatus#
		where
		TRANS_ID = #transId#
	</update>
	<update id="updateTransBill" parameterClass="java.util.Map">
		update
		vms_trans_bill
		set balance=balance-#balance#
		where
		TRANS_ID = #transId#
	</update>

	<delete id="deleteBillInfoCheck" parameterClass="java.util.Map">
		delete from
		Vms_Trans_Bill where TRANS_ID = #transId# and BILL_ID = #billId#
	</delete>
	<!-- 销项税勾稽列表 end -->
	<!-- czl EMS快递 开始 -->
	<sql id="emsInfo_fragment">
		where 1 = 1
		and t.bill_code is not null
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.cherNum">
				T.INSURE_ID like
				'%$billInfo.cherNum$%'
				OR
				T.REPNUM like '%$billInfo.cherNum$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.ttmpRcno">
				T.TTMPRCNO like
				'%$billInfo.ttmpRcno$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.feeTyp">
				T.FEETYP =
				#billInfo.feeTyp#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billFreq">
				T.BILLFREQ =
				#billInfo.billFreq#
			</isNotEmpty>
			
			<!--Oracle版本  -->
			<!-- <isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ to_date(T.BILL_DATE,'yyyy-mm-dd') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ to_date(T.BILL_DATE,'yyyy-mm-dd') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd')  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ to_date(T.HISSDTE,'yyyy-mm-dd') >= to_date(#billInfo.hissBeginDte#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ to_date(T.HISSDTE,'yyyy-mm-dd') <= to_date(#billInfo.hissEndDte#,'yyyy-mm-dd')  ]]>
			</isNotEmpty> -->
			
			<!--mysql版本  -->
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ str_to_date(T.BILL_DATE,'%Y-%m-%d') >= str_to_date(#billInfo.billBeginDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ str_to_date(T.BILL_DATE,'%Y-%m-%d') <= str_to_date(#billInfo.billEndDate#,'%Y-%m-%d')  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ str_to_date(T.HISSDTE,'%Y-%m-%d') >= str_to_date(#billInfo.hissBeginDte#,'%Y-%m-%d') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ str_to_date(T.HISSDTE,'%Y-%m-%d') <= str_to_date(#billInfo.hissEndDte#,'%Y-%m-%d')  ]]>
			</isNotEmpty>
			
			
			<isNotEmpty prepend="and" property="billInfo.dsouRce">
				T.DSOURCE =
				#billInfo.dsouRce#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.chanNel">
				T.CHANNEL =
				#billInfo.chanNel#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerTaxno">
				t.CUSTOMER_TAXNO like
				'%$billInfo.customerTaxno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.fapiaoType">
				t.FAPIAO_TYPE =
				#billInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.issueType">
				t.ISSUE_TYPE =
				#billInfo.issueType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.dataStatus">
				t.DATASTATUS =
				#billInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.isHandiwork">
				t.IS_HANDIWORK =
				#billInfo.isHandiwork#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billCode">
				t.BILL_CODE like
				'%$billInfo.billCode$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billNo">
				t.BILL_NO like
				'%$billInfo.billNo$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerName">
				t.CUSTOMER_NAME like
				'%$billInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ to_date(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ to_date(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ str_to_date(t.BILL_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#billInfo.billBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ str_to_date(t.BILL_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#billInfo.billEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchCondition">
				$searchCondition$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billIds">
				t.bill_id in
				<iterate property="billIds" open="(" close=")" conjunction=",">
					#billIds[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="issueStatuses">
				t.dataStatus in
				<iterate property="issueStatuses" open="(" close=")"
					conjunction=",">
					#issueStatuses[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.fedexExpress">
				e.FEDEX_EXPRESS like
				'%$billInfo.fedexExpress$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.emsStatus">
				e.EMS_STATUS =
				#billInfo.emsStatus#
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="findEmsInfo" parameterClass="java.util.Map"
		resultClass="emsInfo">
		SELECT
		BILL_DATE as billDate,
		BILL_CODE as billCode,
		BILL_NO
		as billNo,
		CUSTOMER_NAME as customerName,
		CUSTOMER_TAXNO as
		customerTaxno,
		CUSTOMER_LINKMAN as customerLinkman,
		ADDRESSEE as
		addressee,
		ADDRESSEE_PHONE as addresseePhone,
		ADDRESSEE_ADDRESS as
		addresseeAddress,
		ADDRESSEE_ADDRESSDETAIL as addresseeAddressdetail,
		ADDRESSEE_ZIPCODE as addresseeZipcode,
		FEDEX_EXPRESS as fedexExpress,
		EMS_NO as emsNo,
		EMS_STATUS as emsStatus,
		SENDER as sender
		FROM
		VMS_EXPRESS_INFO t where t.BILL_NO=#emsInfo.billNo#
	</select>

	<insert id="saveEms" parameterClass="java.util.Map">
		insert into
		VMS_EXPRESS_INFO
		(
		BILL_DATE,
		BILL_CODE,
		BILL_NO,
		CUSTOMER_NAME,
		CUSTOMER_TAXNO,
		CUSTOMER_LINKMAN,
		CUSTOMER_EMAIL,
		ADDRESSEE,
		ADDRESSEE_PHONE,
		ADDRESSEE_ADDRESS,
		ADDRESSEE_ADDRESSDETAIL,
		ADDRESSEE_ZIPCODE,
		FEDEX_EXPRESS,
		EMS_NO,
		EMS_STATUS,
		SENDER)
		values(
		#emsInfo.billDate#,
		#emsInfo.billCode#,
		#emsInfo.billNo#,
		#emsInfo.customerName#,
		#emsInfo.customerTaxno#,
		#emsInfo.customerLinkman#,
		#emsInfo.customerEMail#,
		#emsInfo.addressee#,
		#emsInfo.addresseePhone#,
		#emsInfo.addresseeAddress#,
		#emsInfo.addresseeAddressdetail#,
		#emsInfo.addresseeZipcode#,
		#emsInfo.fedexExpress#,
		#emsInfo.emsNo#,
		#emsInfo.emsStatus#,
		#emsInfo.sender#)
	</insert>

	<update id="updateEms" parameterClass="java.util.Map">
		update VMS_EXPRESS_INFO
		set
		BILL_DATE = #emsInfo.billDate#,
		BILL_CODE = #emsInfo.billCode#,
		BILL_NO = #emsInfo.billNo#,
		CUSTOMER_NAME = #emsInfo.customerName#,
		CUSTOMER_TAXNO = #emsInfo.customerTaxno#,
		CUSTOMER_LINKMAN =
		#emsInfo.customerLinkman#,
		CUSTOMER_EMAIL = #emsInfo.customerEMail#,
		ADDRESSEE = #emsInfo.addressee#,
		ADDRESSEE_PHONE =
		#emsInfo.addresseePhone#,
		ADDRESSEE_ADDRESS =
		#emsInfo.addresseeAddress#,
		ADDRESSEE_ADDRESSDETAIL =
		#emsInfo.addresseeAddressdetail#,
		ADDRESSEE_ZIPCODE =
		#emsInfo.addresseeZipcode#,
		FEDEX_EXPRESS = #emsInfo.fedexExpress#,
		EMS_NO = #emsInfo.emsNo#,
		EMS_STATUS = #emsInfo.emsStatus#,
		SENDER =
		#emsInfo.sender#
		where
		BILL_NO = #emsInfo.billNo#
	</update>

	<delete id="deleteEms" parameterClass="java.util.Map">
		delete from
		VMS_EXPRESS_INFO e where e.BILL_NO = #billNo#
	</delete>

	<update id="updateEmsStatus" parameterClass="java.util.Map">
		update
		VMS_EXPRESS_INFO set
		EMS_STATUS = #emsStatus#
		where
		BILL_NO = #billNo#
	</update>

	<select id="findBillInfoForEmsCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_BILL_INFO t
		left join u_base_user u1 on
		u1.user_id = t.drawer
		left join u_base_user u2 on u2.user_id =
		t.reviewer
		left join u_base_user u3 on u3.user_id = t.payee

		left join
		VMS_CUSTOMER_INFO c on c.CUSTOMER_TAXNO =t.CUSTOMER_TAXNO
		left join
		VMS_EXPRESS_INFO e on e.BILL_NO = t.BILL_NO
		<include refid="emsInfo_fragment" />
	</select>

	<select id="findBillInfoForEms" parameterClass="java.util.Map"
		resultClass="billInfo">
		select t.BILL_ID as billId,
		t.BILL_CODE as billCode,
		t.BILL_NO as
		billNo,
		t.BILL_DATE as billDate,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		t.CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		t.CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		t.AMT_SUM as amtSum,
		t.TAX_AMT_SUM as taxAmtSum,
		t.SUM_AMT as sumAmt,
		t.REMARK as remark,
		t.DRAWER as drawer,
		u1.user_cname as drawerName,
		t.REVIEWER as reviewer,
		u2.user_cname as
		reviewerName,
		t.PAYEE as payee,
		u3.user_cname as payeeName,
		t.NAME as
		name,
		t.TAXNO as taxno,
		t.ADDRESSANDPHONE as addressandphone,
		t.BANKANDACCOUNT as bankandaccount,
		t.INSTCODE as instCode,
		t.CANCEL_INITIATOR as cancelInitiator,
		t.CANCEL_AUDITOR as
		cancelAuditor,
		t.DESCRIPTION as description,
		t.DATASTATUS as dataStatus,
		t.IS_HANDIWORK as isHandiwork,
		t.INSURE_ID as cherNum,
		c.CUSTOMER_EMAIL
		as customerEmail,
		e.CUSTOMER_LINKMAN as customerLinkman,
		e.ADDRESSEE_ADDRESSDETAIL as
		addresseeAddressdetail,
		e.FEDEX_EXPRESS as
		fedexExpress,
		e.EMS_NO as
		emsNo,
		e.EMS_STATUS as emsStatus,
		e.SENDER as
		sender,
		c.CUSTOMER_EMAIL as
		customerEmail,
		c.link_name as addressee,
		c.link_phone as addresseePhone,
		c.link_address as addresseeAddress,
		c.customer_zip_code as
		addresseeZipcode,
		info.CHERNUM as cherNum,
		info.REPNUM as repNum,
		info.TTMPRCNO as ttmpRcno,
		info.FEETYP as feeTyp,
		info.BILLFREQ as billFreq,
		info.POLYEAR as polYear,
		info.HISSDTE as
		hissDte,
		info.DSOURCE as dsouRce,
		info.CHANNEL as chanNel,
		info.PREMTERM
		as premTerm
		from VMS_BILL_INFO t
		left join u_base_user u1 on u1.user_id
		= t.drawer
		left join u_base_user u2 on u2.user_id = t.reviewer
		left join
		u_base_user u3 on u3.user_id = t.payee
		left join VMS_CUSTOMER_INFO c on
		c.CUSTOMER_TAXNO =t.CUSTOMER_TAXNO
		left join VMS_EXPRESS_INFO e on
		e.BILL_NO = t.BILL_NO
		left join VMS_TRANS_INFO info on info.CHERNUM =
		t.insure_id
		<include refid="emsInfo_fragment" />
	</select>

	<select id="findEmsInfoForExport" parameterClass="java.util.Map"
		resultClass="billInfo">
		select BILL_ID as billId,
		t.BILL_CODE as billCode,
		t.BILL_NO as billNo,
		t.BILL_DATE as billDate,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		t.CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		t.CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		REMARK as remark,
		DRAWER as drawer,
		u1.user_cname as
		drawerName,
		REVIEWER as reviewer,
		u2.user_cname as reviewerName,
		PAYEE as
		payee,
		NAME as name,
		TAXNO as taxno,
		ADDRESSANDPHONE as addressandphone,
		BANKANDACCOUNT as bankandaccount,
		INSTCODE as instCode,
		CANCEL_INITIATOR as cancelInitiator,
		CANCEL_AUDITOR as cancelAuditor,
		t.DESCRIPTION as description,
		DATASTATUS as dataStatus,
		IS_HANDIWORK as
		isHandiwork,
		c.CUSTOMER_EMAIL as customerEmail,
		e.CUSTOMER_LINKMAN as
		customerLinkman,
		e.ADDRESSEE as addressee,
		e.ADDRESSEE_PHONE as
		addresseePhone,
		e.ADDRESSEE_ADDRESS as addresseeAddress,
		e.ADDRESSEE_ADDRESSDETAIL as addresseeAddressdetail,
		e.ADDRESSEE_ZIPCODE as addresseeZipcode,
		e.FEDEX_EXPRESS as
		fedexExpress,
		e.EMS_NO as emsNo,
		e.EMS_STATUS as emsStatus,
		e.SENDER as
		sender
		from VMS_BILL_INFO t
		left join u_base_user u1 on u1.user_id =
		t.drawer
		left join u_base_user u2 on u2.user_id = t.reviewer
		left join
		VMS_CUSTOMER_INFO c on c.CUSTOMER_TAXNO= t.CUSTOMER_TAXNO
		left join
		VMS_EXPRESS_INFO e on e.BILL_NO = t.BILL_NO
		<include refid="billInfo_fragment" />
	</select>

	<select id="findz" parameterClass="java.util.Map" resultClass="long">
		select count(1)
		from VMS_BILL_INFO b, VMS_CUSTOMER_INFO t
		where
		b.CUSTOMER_TAXNO=t.CUSTOMER_TAXNO and t.TAXPAYER_TYPE='G'
	</select>

	<!-- czl -->
	<select id="findp" parameterClass="java.util.Map" resultClass="long">
		select count(1)
		from VMS_BILL_INFO b, VMS_CUSTOMER_INFO t
		where
		b.CUSTOMER_TAXNO=t.CUSTOMER_TAXNO and t.TAXPAYER_TYPE!='G'
	</select>
	<!-- czl EMS快递 结束 -->

	<!-- czl 发票补打开始 -->
	<sql id="billSupperInfoQuery_fragment">
	
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.transBeginDate"> 
				<![CDATA[ Trunc(to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss')) >= to_date(#billCancelInfo.transBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.transEndDate"> 
				<![CDATA[ Trunc(to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss')) <= to_date(#billCancelInfo.transEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billBeginDate"> 
				<![CDATA[ Trunc(to_date(b.BILL_DATE,'yyyy-mm-dd hh24:mi:ss')) >= to_date(#billCancelInfo.billBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billEndDate"> 
				<![CDATA[ Trunc(to_date(b.BILL_DATE,'yyyy-mm-dd hh24:mi:ss')) <= to_date(#billCancelInfo.billEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.transBeginDate"> 
				<![CDATA[ cast((str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s'))as signed) >= str_to_date(#billCancelInfo.transBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.transEndDate"> 
				<![CDATA[ cast((str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s'))as signed) <= str_to_date(#billCancelInfo.transEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billBeginDate"> 
				<![CDATA[ cast((str_to_date(b.BILL_DATE,'%Y-%m-%d %H:%i:%s'))as signed) >= str_to_date(#billCancelInfo.billBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billEndDate"> 
				<![CDATA[ cast((str_to_date(b.BILL_DATE,'%y-%m-%d %h:%i:%s'))as signed) <= str_to_date(#billCancelInfo.billEndDate#,'%y-%m-%d %h:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billCode">
				b.BILL_CODE like
				'%$billCancelInfo.billCode$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billNo">
				b.BILL_NO like
				'%$billCancelInfo.billNo$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.customerName">
				b.CUSTOMER_NAME like
				'%$billCancelInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.customerId">
				b.CUSTOMER_ID like
				'%$billCancelInfo.customerId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.customerTaxno">
				b.CUSTOMER_TAXNO like
				'%$billCancelInfo.customerTaxno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.goodsName">
				bi.GOODS_NAME like
				'%$billCancelInfo.goodsName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.fapiaoType">
				b.FAPIAO_TYPE =
				#billCancelInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.dataStatus">
				b.DATASTATUS =
				#billCancelInfo.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.isHandiwork">
				b.IS_HANDIWORK =
				#billCancelInfo.isHandiwork#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.issueType">
				b.ISSUE_TYPE =
				#billCancelInfo.issueType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.INSTCODE in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="billCancelInfo.instCode">
				instCode =
				#transInfo.instCode#
			</isNotEmpty>
		</dynamic>
	</sql>

	<select id="findBillSupplementPrintInfoListCount"
		parameterClass="java.util.Map" resultClass="long">
		select count(*) from VMS_BILL_INFO b
		left join u_base_user u1 on
		u1.user_id = b.drawer
		left join u_base_user u2 on u2.user_id =
		b.reviewer
		left join ( select bill_id, max(TRANS_ID) as TRANS_ID from
		VMS_TRANS_BILL
		tb group by tb.bill_id) tb on tb.BILL_ID= b.BILL_ID
		left
		join VMS_TRANS_INFO t on t.TRANS_ID = tb.TRANS_ID
		where b.DATASTATUS IN
		(#dataStatus#)
		<include refid="billSupperInfoQuery_fragment" />
	</select>

	<select id="findBillSupplementPrintInfoList" parameterClass="java.util.Map"
		resultClass="billCancelInfo">
		SELECT
		b.BILL_ID as billId,
		t.TRANS_DATE as transDate,
		t.TRANS_ID as
		transId,
		b.BILL_DATE as billDate,
		b.BILL_CODE as billCode,
		b.BILL_NO as
		billNo,
		b.CUSTOMER_NAME as customerName,
		b.CUSTOMER_ID as customerId,
		b.CUSTOMER_TAXNO as
		customerTaxno,
		b.AMT_SUM as amtSum,
		b.TAX_AMT_SUM as
		taxAmtSum,
		b.SUM_AMT as sumAmt,
		b.FAPIAO_TYPE as fapiaoType,
		b.DATASTATUS as
		dataStatus,
		b.IS_HANDIWORK as isHandiwork,
		b.ISSUE_TYPE
		as issueType,
		b.DRAWER as drawer,
		u1.user_cname as drawerName,
		b.REVIEWER as reviewer,
		u2.user_cname as reviewerName,
		b.PRINT_COUNT as
		printCount,
		b.DSOURCE as dSource
		FROM
		VMS_BILL_INFO
		b
		left join u_base_user
		u1 on u1.user_id =
		b.drawer
		left join
		u_base_user
		u2 on u2.user_id =
		b.reviewer
		left join (
		select bill_id, max(TRANS_ID)
		as TRANS_ID from
		VMS_TRANS_BILL
		tb group by
		tb.bill_id) tb on
		tb.BILL_ID= b.BILL_ID
		left
		join VMS_TRANS_INFO t on
		t.TRANS_ID =
		tb.TRANS_ID
		where b.DATASTATUS
		IN
		('$dataStatus$')
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billCode">
				b.BILL_CODE =
				#billCancelInfo.billCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.billNo">
				b.BILL_NO =
				#billCancelInfo.billNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billCancelInfo.dSource">
				b.DSOURCE =
				#billCancelInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<include refid="billSupperInfoQuery_fragment" />
	</select>

	<!-- 发票补打信息记录添加 -->
	<insert id="saveBillPrintHistory" parameterClass="java.util.Map">
		insert into
		VMS_BILL_PRINT_HISTORY (
		BILL_ID,
		PRINT_TIME,
		PRINTER,
		FLAG)
		values(
		#billPrintHistoryInfo.billID#,
		#billPrintHistoryInfo.printTime#,
		#billPrintHistoryInfo.printer#
		#billPrintHistoryInfo.flag#)
	</insert>

	<!-- 发票补打信息记录查看 -->
	<select id="findBillPrintHistoryByID" parameterClass="java.util.Map"
		resultClass="billPrintHistoryInfo" remapResults="true">
		select
		BILL_ID as
		billID,
		PRINT_TIME as printTime,
		PRINTER as printer,
		FLAG as flag
		from
		vms_bill_print_history t
		where BILL_ID = #billID#
	</select>

	<select id="findBillPrintHistoryList" parameterClass="java.util.Map"
		resultClass="billPrintHistoryInfo">
		select
		BILL_ID as billID,
		PRINT_TIME as printTime,
		PRINTER as
		printer,
		CASE FLAG WHEN 'Y' THEN '成功'
		WHEN 'N' THEN '失败'
		END as flag
		from
		vms_bill_print_history
		where BILL_ID = #billID#
	</select>

	<!-- czl 发票补打结束 -->

	<!-- czl 交易认定开始 -->
	<sql id="business_fragment">
		where 1 = 1 and bt.IS_USE = 1
		<dynamic>
			<isNotEmpty prepend="and" property="business.businessCode">
				bt.BUSINESS_CODE like
				'%$business.businessCode$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="business.businessCName">
				bt.BUSINESS_CNAME like
				'%$business.businessCName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="business.taxRate">
				bt.TAX_RATE =
				#business.taxRate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="business.hasTax">
				bt.HAS_TAX =
				#business.hasTax#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="business.autoPrint">
				bt.AUTO_PRINT =
				#business.autoPrint#
			</isNotEmpty>
		</dynamic>
		order by bt.BUSINESS_CODE
	</sql>

	<select id="findBusinessListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BUSINESS_TB bt
		<include refid="business_fragment" />
	</select>

	<select id="findBusinessList" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as
		businessParentName,
		bt.BUSINESS_CNAME as businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE as
		discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD
		as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from
		VMS_BUSINESS_TB bt
		<include refid="business_fragment" />
	</select>

	<select id="findRootInstsByInstId" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		where bt.BUSINESS_CODE like '%$instId$%' and
		bt.IS_USE = 1
		order by
		bt.BUSINESS_LAYER,bt.ORDER_NUM,bt.BUSINESS_PARENTCODE
		desc,bt.BUSINESS_CODE
	</select>

	<select id="findRootInsts" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		where 1 = 1
		and exists (select 1 from
		VMS_BUSINESS_TB vb where vb.BUSINESS_CODE =
		bt.BUSINESS_CODE and
		bt.BUSINESS_PARENTCODE is null and bt.IS_USE = 1)
		order by
		bt.BUSINESS_LAYER,bt.BUSINESS_PARENTCODE desc
	</select>

	<select id="findAllInstByParentInst" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		WHERE bt.BUSINESS_PARENTCODE = #parentId# and
		bt.IS_USE = 1
	</select>

	<select id="findBusinessCode" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		WHERE bt.BUSINESS_CODE =
		#business.businessCode#
	</select>

	<insert id="saveInst" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="businessId">
			SELECT
			BUSINESS_TB_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into VMS_BUSINESS_TB (
		BUSINESS_ID,
		BUSINESS_CODE,
		BUSINESS_PARENTCODE,
		BUSINESS_PARENTNAME,
		BUSINESS_CNAME,
		BUSINESS_LAYER,
		ORDER_NUM,
		TAX_RATE,
		HAS_TAX,
		DISCOUNT_RATE,
		AUTO_PRINT,
		IS_USE,
		IS_HEAD,
		BUSINESS_PATH,
		SQL)
		values(
		#businessId#,
		#business.businessCode#,
		#business.businessParentCode#,
		#business.businessParentName#,
		#business.businessCName#,
		#business.businessLayer#,
		#business.orderNum#,
		#business.taxRate#,
		#business.hasTax#,
		#business.discountRate#,
		#business.autoPrint#,
		#business.isUse#,
		#business.isHead#,
		#business.businessPath#,
		#business.sql#)
	</insert>

	<select id="getBusinessListByCode" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		WHERE bt.BUSINESS_CODE = #businessCode#
	</select>

	<update id="updatePathAndLayer" parameterClass="java.util.Map">
		update
		VMS_BUSINESS_TB bt set
		bt.BUSINESS_PATH = #businessPath#,
		bt.BUSINESS_LAYER = #businessLayer#,
		bt.IS_HEAD = #isHead#
		where
		bt.BUSINESS_CODE = #business.businessCode#
	</update>

	<update id="updatePath" parameterClass="java.util.Map">
		update VMS_BUSINESS_TB bt
		set
		bt.BUSINESS_PATH = '\$business.businessCode$\',
		bt.BUSINESS_LAYER =
		1,
		bt.IS_HEAD = #isHead#
		where
		bt.BUSINESS_CODE = #business.businessCode#
	</update>

	<update id="updatePathOne" parameterClass="java.util.Map">
		update VMS_BUSINESS_TB
		bt set
		bt.BUSINESS_PATH = '\$business.businessCode$\',
		bt.BUSINESS_LAYER = 1,
		bt.IS_HEAD = #isHead#
		where
		bt.BUSINESS_CODE =
		#business.businessCode#
	</update>

	<update id="updateBusiness" parameterClass="java.util.Map">
		update
		VMS_BUSINESS_TB bt set
		bt.BUSINESS_ID = #business.businessId#,
		bt.BUSINESS_CODE = #business.businessCode#,
		bt.BUSINESS_PARENTCODE =
		#business.businessParentCode#,
		bt.BUSINESS_PARENTNAME =
		#business.businessParentName#,
		bt.BUSINESS_CNAME =
		#business.businessCName#,
		bt.BUSINESS_LAYER = #business.businessLayer#,
		bt.ORDER_NUM = #business.orderNum#,
		bt.TAX_RATE = #business.taxRate#,
		bt.HAS_TAX = #business.hasTax#,
		bt.DISCOUNT_RATE =
		#business.discountRate#,
		bt.AUTO_PRINT = #business.autoPrint#,
		bt.IS_USE = #business.isUse#,
		bt.IS_HEAD = #business.isHead#,
		bt.BUSINESS_PATH = #business.businessPath#,
		bt.SQL = #business.sql#
		where
		bt.BUSINESS_ID = #business.businessId#
	</update>

	<update id="updateBusinessIsUse" parameterClass="java.util.Map">
		delete
		VMS_BUSINESS_TB bt
		where
		bt.BUSINESS_PATH like
		'%\$business.businessCode$\%'
	</update>

	<select id="findUserColComments" parameterClass="java.util.Map"
		resultClass="userColComments">
		SELECT u.comments,u.column_Name FROM USER_COL_COMMENTS u
		where u.table_Name='VMS_TRANS_INFO'
	</select>

	<select id="checkSQL" parameterClass="java.util.Map">
		select TRANS_TYPE from
		VMS_TRANS_INFO where 1=1 $sql$
	</select>

	<select id="findBusiAndBusiSupCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BUSINESS_TB bt where 1 = 1 and
		bt.IS_USE = 1
		and exists (select 1 from VMS_BUSINESS_TB a where
		a.BUSINESS_CODE=#business.businessCode# and
		substr(bt.BUSINESS_PATH,1,length(a.BUSINESS_PATH))=a.BUSINESS_PATH)
		and exists (select 1 from VMS_BUSINESS_TB a where
		a.BUSINESS_CODE=#business.businessCode# and
		(substr(bt.BUSINESS_PATH,1,length(a.BUSINESS_PATH))=a.BUSINESS_PATH or
		a.IS_HEAD='true'))
		order by bt.ORDER_NUM,bt.BUSINESS_CODE
	</select>

	<select id="findBusiAndBusiSup" parameterClass="java.util.Map"
		resultClass="business">
		select
		bt.BUSINESS_ID as businessId,
		bt.BUSINESS_CODE as
		businessCode,
		bt.BUSINESS_PARENTCODE as businessParentCode,
		bt.BUSINESS_PARENTNAME as businessParentName,
		bt.BUSINESS_CNAME as
		businessCName,
		bt.BUSINESS_LAYER as businessLayer,
		bt.ORDER_NUM as
		orderNum,
		bt.TAX_RATE as taxRate,
		bt.HAS_TAX as hasTax,
		bt.DISCOUNT_RATE
		as discountRate,
		bt.AUTO_PRINT as autoPrint,
		bt.IS_USE as isUse,
		bt.IS_HEAD as isHead,
		bt.BUSINESS_PATH as businessPath,
		bt.SQL as sql
		from VMS_BUSINESS_TB bt
		where 1 = 1 and bt.IS_USE = 1
		and exists (select
		1 from VMS_BUSINESS_TB a
		where a.BUSINESS_CODE=#business.businessCode#
		and
		<!-- substr(bt.BUSINESS_PATH,1,length(a.BUSINESS_PATH))=a.BUSINESS_PATH) -->
		substring(bt.BUSINESS_PATH,1,length(a.BUSINESS_PATH))=a.BUSINESS_PATH)
		and exists (select 1 from VMS_BUSINESS_TB a where
		a.BUSINESS_CODE=#business.businessCode# and
		(substr(bt.BUSINESS_PATH,1,length(a.BUSINESS_PATH))=a.BUSINESS_PATH or
		a.IS_HEAD='true'))
		order by bt.ORDER_NUM,bt.BUSINESS_CODE
	</select>
	<!-- czl 交易认定结束 -->

	<!-- 检索 -->

	<select id="findInvoiceInSurtaxListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_INPUT_INVOICE_INFO
		where DATASTATUS = '15'
		and
		INSTCODE in
		<iterate property="auth_inst_ids" conjunction="," open="("
			close=")">
			#auth_inst_ids[]#
		</iterate>
		<dynamic>
			<isNotEmpty prepend="and" property="datastatus">
				DATASTATUS =
				#datastatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				INSTCODE = #inst_id#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bill_no">
				BILL_NO = #bill_no#
			</isNotEmpty>
		</dynamic>
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="bill_date">
					<![CDATA[to_date(BILL_DATE,'yyyy-mm-dd')>= to_date(#bill_date#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="bill_date">
					<![CDATA[str_to_date(BILL_DATE,'%Y-%m-%d')>= str_to_date(#bill_date#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="vendor_name">
				VENDOR_NAME like
				'%$vendor_name$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bill_code">
				BILL_CODE = #bill_code#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiao_type">
				fapiao_type =
				#fapiao_type#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="vat_out_amt">
					<![CDATA[ vat_out_amt <= #vat_out_amt# ]]>
			</isNotEmpty>
		</dynamic>
	</select>

	<!-- 税目管理 列表画面初期化/检索用情报检索 -->
	<select id="getListTaxItemInfo" parameterClass="java.util.Map"
		resultClass="vmsTaxInfo">
		select distinct info.TAX_ID as taxId,
		info.TAXNO as taxno,
		info.FAPIAO_TYPE as fapiaoType,
		<!-- to_char(info.TAX_RATE, 'FM90.99') as -->
		convert(info.TAX_RATE, char(50)) as
		taxRate
		from VMS_TAX_INFO info
		left join u_Base_Inst b
		on b.Taxpernumber
		= info.Taxno
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxno">
				<!-- info.TAXNO $taxno$ -->
				<!--已改  -->
				info.TAXNO=#taxno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				info.FAPIAO_TYPE =
				#fapiaoType#

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxId">
				info.TAX_ID like
				#taxId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxRate">
				info.TAX_RATE =
				#taxRate#
			</isNotEmpty>
		</dynamic>
		order by
		info.TAX_ID
	</select>

	<select id="findTaxItemInfoRepeatList" parameterClass="java.util.Map"
		resultClass="vmsTaxInfo">
		select tx.TAX_ID as taxId,tx.TAXNO as taxno,
		tx.FAPIAO_TYPE as
		fapiaoType,
		tx.TAX_RATE as taxRate from VMS_TAX_INFO tx
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxId">
				tx.TAX_ID=#taxId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxno">
				tx.TAXNO=#taxno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				tx.FAPIAO_TYPE=#fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxRate">
				tx.TAX_RATE=#taxRate#
			</isNotEmpty>
		</dynamic>

	</select>

	<select id="getListTaxItemInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select distinct count(*)
		from VMS_TAX_INFO info
		left join u_Base_Inst b
		on b.Taxpernumber = info.Taxno
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxno">
				info.TAXNO $taxno$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				info.FAPIAO_TYPE like
				'%$fapiaoType$%'

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxId">
				info.TAX_ID $taxId$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxRate">
				info.TAX_RATE =
				#taxRate#
			</isNotEmpty>
		</dynamic>
	</select>
	<update id="updTaxItemInfo" parameterClass="java.util.Map">
		UPDATE VMS_TAX_INFO
		SET
		TAX_RATE = #taxRate#
		WHERE
		TAX_ID = #taxId#
		AND TAXNO = #taxno#
		AND
		FAPIAO_TYPE = #fapiaoType#
	</update>
	<insert id="saveTaxItemInfo" parameterClass="java.util.Map">
		insert into
		VMS_TAX_INFO (
		TAXNO,
		FAPIAO_TYPE,
		TAX_ID,
		TAX_RATE
		)
		values(
		#taxno#,
		#fapiaoType#,
		#taxId#,
		#taxRate#
		)
	</insert>
	
	<!--oracle版本  -->
	<!-- <delete id="delTaxItemInfo" parameterClass="java.util.Map">
		delete from
		VMS_TAX_INFO t where t.TAX_ID = #taxId#
	</delete> -->
	
	<!--mysql版本  -->
	<delete id="delTaxItemInfo" parameterClass="java.util.Map">
		delete from
		VMS_TAX_INFO  where TAX_ID = #taxId#
	</delete>
	
	

	<!-- 徐海洋开始 -->
	<sql id="applyInfo_fragment">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				t.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billBeginDate">
			<![CDATA[to_date(substr(t.bill_date,1,10),'yyyy/mm/dd') >= to_date(#applyInfo.billBeginDate#,'yyyy/mm/dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billEndDate">
			<![CDATA[to_date(substr(t.bill_date,1,10),'yyyy/mm/dd') <= to_date(#applyInfo.billEndDate#,'yyyy/mm/dd')  ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billBeginDate">
			<![CDATA[str_to_date(substring(t.bill_date,1,10),'%Y/%m/%d') >= str_to_date(#applyInfo.billBeginDate#,'%Y/%m/%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billEndDate">
			<![CDATA[str_to_date(substring(t.bill_date,1,10),'%Y/%m/%d') <= str_to_date(#applyInfo.billEndDate#,'%Y/%m/%d')  ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billApplyBeginDate"> 
				<![CDATA[ t.apply_date >= #applyInfo.billApplyBeginDate# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billApplyEndDate"> 
				<![CDATA[ t.apply_date <= #applyInfo.billApplyEndDate#]]>
			</isNotEmpty>
		</dynamic>
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.transBeginDate"> 
				<![CDATA[ Trunc(to_date(t2.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss')) >= Trunc(to_date(#applyInfo.transBeginDate#,'yyyy-mm-dd hh24:mi:ss')) ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.transEndDate"> 
				<![CDATA[ Trunc(to_date(t2.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss')) <= Trunc(to_date(#applyInfo.transEndDate#,'yyyy-mm-dd hh24:mi:ss')) ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.transBeginDate"> 
				<![CDATA[ cast((str_to_date(t2.TRANS_DATE,'%y-%m-%d %h:%i:%s'))as signed) >= cast((str_to_date(#applyInfo.transBeginDate#,'%y-%m-%d %h:%i:%s'))as signed) ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.transEndDate"> 
				<![CDATA[ cast((str_to_date(t2.TRANS_DATE,'%Y-%m-%d %H:%i:%s'))as signed) <= cast((str_to_date(#applyInfo.transEndDate#,'%Y-%m-%d %H:%i:%s'))as signed) ]]>
			</isNotEmpty>
		</dynamic> 
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.customerName">
				t.CUSTOMER_NAME like
				'%$applyInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.customerId">
				t.CUSTOMER_ID like
				'%$applyInfo.customerId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.goodsName">
				bi.GOODS_NAME like
				'%$applyInfo.goodsName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billCode">
				t.BILL_CODE like
				'%$applyInfo.billCode$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billNo">
				t.BILL_NO like
				'%$applyInfo.billNo$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.fapiaoType">
				t.FAPIAO_TYPE=#applyInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billId">
				t.BILL_ID=#applyInfo.billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.issueType">
				t.ISSUE_TYPE=#applyInfo.issueType#
			</isNotEmpty>
		</dynamic>
		<isNotEmpty prepend="and" property="searchCondition">
			$searchCondition$
		</isNotEmpty>
	</sql>

	<!--
         cheng 新增 customerID   
         2018/08/23
     -->
	<select id="findBillInfo1" parameterClass="java.util.Map"
		resultClass="billInfo">
		select BILL_ID as billId,
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BILL_DATE as billDate,
		APPLY_DATE as applyDate,
		CUSTOMER_NAME as
		customerName,
		CUSTOMER_ID AS
		customerId,
		CUSTOMER_TAXNO as customerTaxno,
		CUSTOMER_ADDRESSANDPHONE
		as customerAddressandphone,
		CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		REMARK as remark,
		DRAWER as drawer,
		REVIEWER as
		reviewer,
		PAYEE as payee,
		NAME as name,
		TAXNO as taxno,
		ADDRESSANDPHONE as
		addressandphone,
		BANKANDACCOUNT as bankandaccount,
		INSTCODE as instCode,
		CANCEL_INITIATOR as cancelInitiator,
		CANCEL_AUDITOR as cancelAuditor,
		t.DESCRIPTION as description,
		DATASTATUS as dataStatus,
		IS_HANDIWORK as
		isHandiwork,
		FAPIAO_TYPE as fapiaoType,
		ISSUE_TYPE as issueType,
		TAX_DISK_NO as taxDiskNo,
		MACHINE_NO as machineNo,
		NOTICE_NO as
		noticeNo,
		BALANCE as balance,
		OPERATESTATUS as operateStatus,
		CANCEL_REASON as cancelReason,
		ori_bill_code as oriBillCode,
		ori_bill_no as oriBillNo,
		INSURE_ID as cherNum
		from
		VMS_BILL_INFO t

		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>

			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findRedBillInfo" parameterClass="java.util.Map"
		resultClass="billInfo">
		SELECT
		B.BILL_ID AS billId,
		B.BILL_CODE AS billCode,
		B.BILL_NO AS billNo,
		B.BILL_DATE AS billDate,
		B.APPLY_DATE AS applyDate,
		B.CUSTOMER_NAME AS
		customerName,
		B.CUSTOMER_TAXNO AS customerTaxno,
		B.CUSTOMER_ADDRESSANDPHONE AS customerAddressandphone,
		B.CUSTOMER_BANKANDACCOUNT AS customerBankandaccount,
		B.AMT_SUM AS
		amtSum,
		B.TAX_AMT_SUM AS taxAmtSum,
		B.SUM_AMT AS sumAmt,
		B.REMARK AS
		remark,
		B.DRAWER AS drawer,
		B.REVIEWER AS reviewer,
		B.PAYEE AS payee,
		B.NAME AS name,
		B.TAXNO AS taxno,
		B.ADDRESSANDPHONE AS addressandphone,
		B.BANKANDACCOUNT AS bankandaccount,
		B.INSTCODE AS instCode,
		B.CANCEL_INITIATOR AS cancelInitiator,
		B.CANCEL_AUDITOR AS
		cancelAuditor,
		B.DESCRIPTION AS description,
		B.DATASTATUS AS dataStatus,
		B.IS_HANDIWORK AS isHandiwork,
		B.FAPIAO_TYPE AS fapiaoType,
		B.ISSUE_TYPE AS issueType,
		B.TAX_DISK_NO AS taxDiskNo,
		B.MACHINE_NO AS
		machineNo,
		B.NOTICE_NO AS noticeNo,
		B.BALANCE AS balance,
		B.OPERATESTATUS AS operateStatus,
		B.CANCEL_REASON AS cancelReason,
		B.ori_bill_code AS oriBillCode,
		B.ori_bill_no AS oriBillNo
		FROM
		VMS_BILL_INFO A LEFT JOIN VMS_BILL_INFO B ON
		A.BILL_CODE=B.ORI_BILL_CODE AND A.BILL_NO=B.ORI_BILL_NO
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="billInfo.billId">
				A.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
	</select>

	<update id="updateBill1" parameterClass="java.util.Map">
		update VMS_BILL_INFO set
		BILL_CODE = #billInfo.billCode#,
		BILL_NO = #billInfo.billNo#,
		BILL_DATE
		= #billInfo.billDate#,
		CUSTOMER_NAME = #billInfo.customerName#,
		CUSTOMER_TAXNO = #billInfo.customerTaxno#,
		AMT_SUM = #billInfo.amtSum#,
		TAX_AMT_SUM = #billInfo.taxAmtSum#,
		SUM_AMT = #billInfo.sumAmt#,
		NAME =
		#billInfo.name#,
		TAXNO = #billInfo.taxno#,
		ADDRESSANDPHONE =
		#billInfo.addressandphone#,
		BANKANDACCOUNT = #billInfo.bankandaccount#,
		INSTCODE = #billInfo.instCode#,
		CANCEL_INITIATOR =
		#billInfo.cancelInitiator#,
		CANCEL_AUDITOR = #billInfo.cancelAuditor#,
		ORI_BILL_CODE = #billInfo.oriBillCode#,
		ORI_BILL_NO =
		#billInfo.oriBillNo#,
		DATASTATUS = #billInfo.dataStatus#,
		OPERATESTATUS
		= #billInfo.operateStatus#,
		BALANCE = #billInfo.balance#,
		CANCEL_REASON
		= #billInfo.cancelReason#,
		NOTICE_NO = #billInfo.noticeNo#
		where
		BILL_ID
		= #billInfo.billId#
	</update>
	<update id="updateRedBill" parameterClass="java.util.Map">
		update vms_bill_info
		biN
		set DATASTATUS = #billInfo.dataStatus#
		where exists
		(
		select 1
		from
		(select * from vms_bill_info bii) biO
		where biN.ORI_BILL_CODE = biO.BILL_CODE
		and
		biN.ORI_BILL_NO = biO.BILL_NO
		and biO.bill_id = #billInfo.billId#
		)
	</update>
	<!-- 红冲交易页面 -->
	<select id="findSpecialRedReceipt" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select
		t.BILL_ID as billId,
		t2.TRANS_ID as transId,
		t2.TRANS_DATE as
		transDate,
		t.BILL_DATE as billDate,
		t.BILL_CODE as billCode,
		t.BILL_NO as
		billNo,
		t.ORI_BILL_CODE as oriBillCode,
		t.ORI_BILL_NO as oriBillNo,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		bi.GOODS_NAME as goodsName,
		BI.SPECANDMODEL as specandmodel,
		BI.GOODS_UNIT as goodsUnit,
		BI.GOODS_NO as goodsNo,
		BI.GOODS_PRICE as
		goodsPrice,
		BI.TAX_RATE as taxRate,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as sumAmt,
		DISCOUNT_RATE as discountRate,
		NAME as
		name,
		TAXNO as taxno,
		t.FAPIAO_TYPE as fapiaoType,
		t.DATASTATUS as
		datastatus,
		CUSTOMER_ACCOUNT as customerAccount,
		TRANS_TYPE as
		transType,
		BANK_CODE as bankCode,
		CUSTOMER_ID as customerId,
		TRANS_FLAG
		as transFlag,
		IS_REVERSE as isReverse

		from VMS_BILL_INFO t
		inner join
		VMS_BILL_ITEM_INFO bi on bi.bill_id = t.bill_id
		inner join
		VMS_TRANS_BILL tb on t.bill_id = tb.bill_id and tb.bill_item_id
		=
		bi.bill_item_id
		inner join VMS_TRANS_INFO t2 on t2.trans_id =
		tb.trans_id
		left join VMS_Disk_Mon_info s
		on t.TAX_DISK_NO =
		s.Tax_disk_No
		<include refid="applyInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		<!--oracle版本  -->
		<!-- and (
		( t.DATASTATUS = '12'
		or ( Trunc(TO_DATE(
		s.NEW_REPORT_DATE_S,'yyyy-mm-dd hh24:mi:ss')) >
		Trunc(TO_DATE(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss'))
		and (
		Trunc(TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')) between
		Trunc(SYSDATE, 'MONTH') and Trunc(LAST_DAY(SYSDATE)))
		and t.DATASTATUS
		in ('5','8','9','10','11','12')
		)
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) not between
		Trunc(SYSDATE, 'MONTH') and
		Trunc(LAST_DAY(SYSDATE))))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) between (
		Trunc(SYSDATE, 'MONTH')-180 ) and
		Trunc(SYSDATE, 'MONTH')
		)
		)
		)
		and
		t2.datastatus = '99' -->
		
		<!--mysql版本trunc可能有问题的地方  -->
		and (
		( t.DATASTATUS = '12' 
		or ( cast((STR_TO_DATE(
		s.NEW_REPORT_DATE_S,'%Y-%m-%d %H:%i:%s')) AS date) >
		CAST((STR_TO_DATE(t.BILL_DATE,'%Y-%m-%d %H:%i:%s')) AS date)
		and (
		CAST((STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')) AS DATE) between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) AND LAST_DAY(SYSDATE()))
		and t.DATASTATUS
		in ('5','8','9','10','11','12')
		)
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( CAST((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s')) AS DATE) not between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and
		LAST_DAY(SYSDATE())))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		CAST((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s')) AS DATE) between 
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())-179 DAY) and
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY)
		)
		)
		)
		and
		t2.datastatus = '99'
		
	</select>
	<!-- 红冲交易页面件数件数 -->
	<select id="findSpecialRedReceiptCount" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select
		count(*)
		from VMS_BILL_INFO t
		inner join VMS_BILL_ITEM_INFO bi on
		bi.bill_id = t.bill_id
		inner join VMS_TRANS_BILL tb on t.bill_id =
		tb.bill_id
		and tb.bill_item_id = bi.bill_item_id
		inner join
		VMS_TRANS_INFO t2 on t2.trans_id = tb.trans_id
		left join
		VMS_Disk_Mon_info s
		on t.TAX_DISK_NO = s.Tax_disk_No
		<include refid="applyInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		<!--mysql版本可能有问题的地方  -->
		</dynamic>
		and (
		( t.DATASTATUS = '12'
		or ( cast((STR_TO_DATE(
		s.NEW_REPORT_DATE_S,'%Y-%m-%d %H:%i:%s'))as date) >
		cast((STR_TO_DATE(t.BILL_DATE,'%Y-%m-%d %H:%i:%s'))as date)
		and (
		cast((STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s'))as date) between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and LAST_DAY(SYSDATE()))
		and t.DATASTATUS
		in ('5','8','9','10','11','12'))
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as date) not between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and
		LAST_DAY(SYSDATE())))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as date) between 
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())-179 DAY) and
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY)
		)
		)
		)
		and
		t2.datastatus = '99'
	</select>

	<select id="findRedReceiptList" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select
		t.BILL_ID as billId,
		t2.TRANS_ID as transId,
		t2.TRANS_DATE as
		transDate,
		t.BILL_DATE as billDate,
		t.BILL_CODE as billCode,
		t.BILL_NO as
		billNo,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as
		customerTaxno,
		bi.GOODS_NAME as goodsName,
		BI.SPECANDMODEL as
		specandmodel,
		BI.GOODS_UNIT as goodsUnit,
		BI.GOODS_NO as goodsNo,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		DISCOUNT_RATE as discountRate,
		t.FAPIAO_TYPE as fapiaoType,
		t2.DATASTATUS as datastatus

		from VMS_BILL_INFO t
		inner join
		VMS_BILL_ITEM_INFO bi on bi.bill_id = t.bill_id
		inner join
		VMS_TRANS_BILL tb on t.bill_id = tb.bill_id
		inner join VMS_TRANS_INFO
		t2 on t2.trans_id = tb.trans_id
		<include refid="applyInfo_fragment" />
		and t2.datastatus = '99'
	</select>

	<select id="findRedReceiptListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BILL_INFO t
		left join VMS_BILL_ITEM_INFO bi on
		bi.bill_id = t.bill_id
		left join VMS_TRANS_BILL tb on t.bill_id =
		tb.bill_id
		left join VMS_TRANS_INFO t2 on t2.trans_id = tb.trans_id
		<include refid="applyInfo_fragment" />
		
		<!--oracle版本  -->
		<!-- and ((EXTRACT(MONTH FROM SYSDATE) - EXTRACT(MONTH FROM
		TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')))>0 or
		(EXTRACT(year FROM
		SYSDATE) - EXTRACT(year FROM TO_DATE(BILL_DATE, 'yyyy-mm-dd
		hh24:mi:ss')))>0 )
		and t2.datastatus = '99' -->
		
		<!--mysql版本  -->
		and ((EXTRACT(MONTH FROM SYSDATE()) - EXTRACT(MONTH FROM
		STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')))>0 or
		(EXTRACT(year FROM
		SYSDATE()) - EXTRACT(year FROM STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')))>0 )
		and t2.datastatus = '99'
		
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>

	<!-- copy -->

	<!-- 红冲申请列表 -->
	<select id="findRedReceipt" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select
		t.BILL_ID as billId,
		t.BILL_DATE as billDate,
		t.BILL_CODE as
		billCode,
		t.BILL_NO as billNo,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_ID as customerId,
		t.CUSTOMER_TAXNO as customerTaxno,
		AMT_SUM
		as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as sumAmt,
		t.FAPIAO_TYPE as
		fapiaoType,
		t.APPLY_DATE
		as applyDate ,
		t.DRAWER as drawer,
		t.TAX_DISK_NO
		as taxDiskNo,
		t.MACHINE_NO as machineNo,
		t.IS_HANDIWORK as isHandwork,
		t.ISSUE_TYPE as
		issueType,
		t.DATASTATUS as datastatus,
		<!-- metlife begin -->
		t.INSURE_ID as insureId,
		t.REPNUM as repnum,
		t.TTMPRCNO as ttmprcno,
		t.FEETYP as feeTyp,
		t.BILLFREQ as billFreq,
		t.hissdte as hissdte,
		t.DSOURCE as dSource,
		t.CHANNEL as channel
		<!-- metlife end -->
		from VMS_BILL_INFO
		t
		left join
		VMS_Disk_Mon_info s
		on t.TAX_DISK_NO =
		s.Tax_disk_No
		<include refid="applyInfo_fragment" />
		<!-- metlife begin -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.fapiaoType">
				t.FAPIAO_TYPE =
				#applyInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.insureId">
				t.INSURE_ID =
				#applyInfo.insureId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.repnum">
				t.REPNUM =
				#applyInfo.repnum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.ttmprcno">
				t.TTMPRCNO =
				#applyInfo.ttmprcno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.feeTyp">
				t.FEETYP =
				#applyInfo.feeTyp#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billFreq">
				t.BILLFREQ =
				#applyInfo.billFreq#
			</isNotEmpty>
		</dynamic>
		
		<!--Oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
		  	<![CDATA[substr(t.HISSDTE,0,10)>=substr(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
		<![CDATA[substr(t.HISSDTE,0,10)<=substr(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--Mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
		  	<![CDATA[substring(t.HISSDTE,0,10)>=substring(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
		<![CDATA[substring(t.HISSDTE,0,10)<=substring(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE =
				#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.channel">
				t.CHANNEL =
				#applyInfo.channel#
			</isNotEmpty>
		</dynamic>
		<!-- metlife end -->
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE
				=#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<!-- and t.BALANCE > 0 -->
		<!--oracle版本  -->
		<!-- and (
		( t.DATASTATUS = '12'
		or ( Trunc(TO_DATE(
		s.NEW_REPORT_DATE_S,'yyyy-mm-dd hh24:mi:ss')) >
		Trunc(TO_DATE(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss'))
		and (
		Trunc(TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')) between
		Trunc(SYSDATE, 'MONTH') and Trunc(LAST_DAY(SYSDATE)))
		and t.DATASTATUS
		in ('5','8','9','10','11','12'))
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) not between
		Trunc(SYSDATE, 'MONTH') and
		Trunc(LAST_DAY(SYSDATE))))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) between (
		Trunc(SYSDATE, 'MONTH')-180 ) and
		Trunc(SYSDATE, 'MONTH')
		)
		)
		)
		order by
		t.BILL_CODE asc,
		t.bill_no asc ,
		t.bill_date desc -->

		<!--Mysql版本  -->
		and (
		( t.DATASTATUS = '12'
		or ( cast((STR_TO_DATE(
		s.NEW_REPORT_DATE_S,'%Y-%m-%d %H:%i:%s'))as date) >
		cast((STR_TO_DATE(t.BILL_DATE,'%Y-%m-%d %H:%i:%s'))as date)
		and (
		cast((STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s'))as date) between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and LAST_DAY(SYSDATE()))
		and t.DATASTATUS
		in ('5','8','9','10','11','12'))
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as date) not between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and
		LAST_DAY(SYSDATE())))
		)
		and (
		t.FAPIAO_TYPE = 1
		or  t.FAPIAO_TYPE = 0
		or (1 = 1 and (
		cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as signed) between 
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())-179 DAY) and
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY)
		)
		)
		)
		order by
		t.BILL_CODE asc,
		t.bill_no asc ,
		t.bill_date desc
		
		

	</select>
	<!-- 红冲申请列表件数 -->
	<select id="findRedReceiptCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from (
		select
		t.BILL_ID as billId,
		t.BILL_DATE as
		billDate,
		t.BILL_CODE as
		billCode,
		t.BILL_NO as billNo,
		t.CUSTOMER_NAME as
		customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as sumAmt,
		t.FAPIAO_TYPE as fapiaoType,
		t.APPLY_DATE
		as applyDate ,
		t.DRAWER as drawer,
		t.TAX_DISK_NO as
		taxDiskNo,
		t.MACHINE_NO as machineNo,
		t.IS_HANDIWORK as isHandwork,
		t.ISSUE_TYPE as
		issueType,
		t.DATASTATUS as datastatus
		from VMS_BILL_INFO
		t
		left join VMS_Disk_Mon_info s
		on t.TAX_DISK_NO = s.Tax_disk_No
		<include refid="applyInfo_fragment" />
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		<!-- and t.BALANCE > 0 -->
		
		<!--oracle版本  -->
		<!-- and (
		( t.DATASTATUS = '12'
		or ( Trunc(TO_DATE(
		s.NEW_REPORT_DATE_S,'yyyy-mm-dd hh24:mi:ss')) >
		Trunc(TO_DATE(t.BILL_DATE,'yyyy-mm-dd hh24:mi:ss'))
		and (
		Trunc(TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')) between
		Trunc(SYSDATE, 'MONTH') and Trunc(LAST_DAY(SYSDATE)))
		and t.DATASTATUS
		in ('5','8','9','10','11','12'))
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) not between
		Trunc(SYSDATE, 'MONTH') and
		Trunc(LAST_DAY(SYSDATE))))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		Trunc(TO_DATE(BILL_DATE,
		'yyyy-mm-dd hh24:mi:ss')) between (
		Trunc(SYSDATE, 'MONTH')-180 ) and
		Trunc(SYSDATE, 'MONTH')
		)
		)
		)
		) -->
		
		
		<!--mysql版本  -->
		and (
		( t.DATASTATUS = '12'
		or ( cast((STR_TO_DATE(
		s.NEW_REPORT_DATE_S,'%Y-%m-%d %H:%i:%s'))as date) >
		cast((STR_TO_DATE(t.BILL_DATE,'%Y-%m-%d %H:%i:%s'))as date)
		and (
		cast((STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s'))as date) between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and LAST_DAY(SYSDATE()))
		and t.DATASTATUS
		in ('5','8','9','10','11','12'))
		) or
		( t.DATASTATUS in
		('5','8','9','10','11','12','19','99')
		and ( cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as date) not between
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY) and
		LAST_DAY(SYSDATE())))
		)
		and (
		t.FAPIAO_TYPE = 1
		or ( t.FAPIAO_TYPE =
		0
		and (
		cast((STR_TO_DATE(BILL_DATE,
		'%Y-%m-%d %H:%i:%s'))as date) between 
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())-179 DAY) and
		DATE_ADD(CURDATE(),INTERVAL -DAY(CURDATE())+1 DAY)
		)
		)
		)
		)fff
		
		
		
	</select>

	<select id="findRedReceipt1Count" parameterClass="java.util.Map"
		resultClass="long">
		
		<!--Oracle版本  -->
		<!-- select count(*) from VMS_BILL_INFO t
		<include refid="billInfo_fragment" />
		and ((sysdate between
		last_day(TO_DATE(BILL_DATE, 'yyyy-mm-dd
		hh24:mi:ss')) + 1 and
		TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss') +
		180) or
		t.DATASTATUS = '12') -->
		
		<!--Mysql版本时间经典  -->
		select count(*) from VMS_BILL_INFO t
		<include refid="billInfo_fragment" />
		and 
		((sysdate() between
		STR_TO_DATE(CONCAT((DATE_ADD(LAST_DAY(STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')),INTERVAL 1 DAY)),STR_TO_DATE(DATE_FORMAT(BILL_DATE, '%H:%i:%s'),'%H:%i:%s')),'%Y-%m-%d %H:%i:%s')
        and
		STR_TO_DATE(DATE_ADD(STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s'),INTERVAL 180 DAY),'%Y-%m-%d %H:%i:%s')) or
		t.DATASTATUS = '12')
		
		
		

		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>

	<!-- copy -->
	<select id="findSpecialTicketById" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.SpecialTicket">
		select
		BILL_NO as billNo,
		BILL_CODE as billCode,
		VAT_TYPE as fapiaoType,
		BUY_SELL_IND as buySellInd,
		LEVEL1_OPTION as level1Option,
		LEVEL2_OPTION as level2Option
		from VMS_HC_APPLY_INFO t
		where 1=1
		<!-- <isNotEmpty prepend="and" property="searchCondition"> $searchCondition$ 
			</isNotEmpty> -->
		<isNotEmpty prepend="and" property="BILL_NO">
			t.BILL_NO=#BILL_NO#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="BILL_CODE">
			t.BILL_CODE=#BILL_CODE#
		</isNotEmpty>
	</select>

	<update id="updateSpecialTicket" parameterClass="java.util.Map">
		update
		VMS_HC_APPLY_INFO set

		VAT_TYPE = #specialTicket.fapiaoType#,
		BUY_SELL_IND = #specialTicket.buySellInd#,
		LEVEL1_OPTION =
		#specialTicket.level1Option#,
		LEVEL2_OPTION =
		#specialTicket.level2Option#
		where BILL_NO = #specialTicket.billNo#
		and
		BILL_CODE = #specialTicket.billCode#
	</update>
	<!-- 红冲审核list -->
	<select id="findRedReceiptApproveCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_BILL_INFO t
		<include refid="applyInfo_fragment" />
		and t.DATASTATUS = '16'
	</select>

	<!-- copy -->

	<!-- <select id="findRedReceiptApprove" parameterClass="java.util.Map" resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo"> 
		select * from ( select rownum as rowindex, a.BILL_ID as reverseBillId, a.BILL_ID 
		as billId, a.BILL_CODE as billCode, a.BILL_NO as billNo, a.BILL_DATE as billDate, 
		a.CUSTOMER_NAME as customerName, a.AMT_SUM as amtSum, a.TAX_AMT_SUM as taxAmtSum, 
		a.SUM_AMT as sumAmt, a.FAPIAO_TYPE as fapiaoType, a.DATASTATUS as dataStatus, 
		a.HISSDTE as hissDte, a.DSOURCE as dSource, a.INSURE_ID as insureId, a.TTMPRCNO 
		as ttmprcno , a.SUM_AMT as reverseSumAmt from vms_bill_info a where 1=1 <dynamic> 
		<isNotEmpty prepend="and" property="applyInfo.ttmprcno"> a.TTMPRCNO=#applyInfo.ttmprcno# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.insureId"> 
		a.INSURE_ID=#applyInfo.insureId# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.billBeginDate"> <![CDATA[ to_date(a.BILL_DATE,'yyyy-mm-dd') 
		>= to_date(#applyInfo.billBeginDate#,'yyyy-mm-dd') ]]> </isNotEmpty> </dynamic> 
		<dynamic> <isNotEmpty prepend="and" property="applyInfo.billEndDate"> <![CDATA[ 
		to_date(a.BILL_DATE,'yyyy-mm-dd')<= to_date(#applyInfo.billEndDate#,'yyyy-mm-dd') 
		]]> </isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.billCode"> 
		a.BILL_CODE=#applyInfo.billCode# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.billNo"> a.BILL_NO=#applyInfo.billNo# </isNotEmpty> 
		</dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.customerName"> 
		a.CUSTOMER_NAME like '%$applyInfo.customerName$%' </isNotEmpty> </dynamic> 
		<dynamic> <isNotEmpty prepend="and" property="applyInfo.fapiaoType"> a.FAPIAO_TYPE 
		=#applyInfo.fapiaoType# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" 
		property="applyInfo.dSource"> a.DSOURCE =#applyInfo.dSource# </isNotEmpty> 
		</dynamic> <dynamic> <isNotEmpty prepend="and" property="endIndex"> <![CDATA[ 
		rownum <= #endIndex#]]> </isNotEmpty> and a.DATASTATUS = '16' order by billcode 
		asc, billno asc ) d where 1=1 <isNotEmpty prepend="and" property="startIndex"> 
		<![CDATA[ rowIndex > #startIndex# ]]> </isNotEmpty> </dynamic> </select> -->


	<!--Mysql版本 -->
	<select id="findRedReceiptApprove" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select * from (
		select
		(@rowNum:=@rowNum+1) as rowindex,
		a.BILL_ID as reverseBillId,
		a.BILL_ID as billId,
		a.BILL_CODE as billCode,
		a.BILL_NO as billNo,
		a.BILL_DATE as billDate,
		a.CUSTOMER_NAME as customerName,
		a.AMT_SUM as amtSum,
		a.TAX_AMT_SUM as taxAmtSum,
		a.SUM_AMT as sumAmt,
		a.FAPIAO_TYPE as fapiaoType,
		a.DATASTATUS as dataStatus,
		a.HISSDTE as hissDte,
		a.DSOURCE as dSource,
		a.INSURE_ID as insureId,
		a.TTMPRCNO as ttmprcno ,
		a.SUM_AMT as reverseSumAmt
		from vms_bill_info a
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.ttmprcno">
				a.TTMPRCNO=#applyInfo.ttmprcno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.insureId">
				a.INSURE_ID=#applyInfo.insureId#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billBeginDate">
				<![CDATA[ to_date(a.BILL_DATE,'yyyy-mm-dd') >= to_date(#applyInfo.billBeginDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billEndDate">
				<![CDATA[ to_date(a.BILL_DATE,'yyyy-mm-dd')<= to_date(#applyInfo.billEndDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billBeginDate">
				<![CDATA[ str_to_date(a.BILL_DATE,'%Y-%m-%d') >= str_to_date(#applyInfo.billBeginDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billEndDate">
				<![CDATA[ str_to_date(a.BILL_DATE,'%Y-%m-%d')<= str_to_date(#applyInfo.billEndDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billCode">
				a.BILL_CODE=#applyInfo.billCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billNo">
				a.BILL_NO=#applyInfo.billNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.customerName">
				a.CUSTOMER_NAME like '%$applyInfo.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.fapiaoType">
				a.FAPIAO_TYPE =#applyInfo.fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				a.DSOURCE =#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<dynamic>
		
			
			 <isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty> 
		
			
			
			
			and a.DATASTATUS = '16'
			order by
			billcode asc,
			billno asc
			) d where 1=1
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</select>




	<select id="findRedReceiptApprove1" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select
		t.BILL_ID as billId,

		t.BILL_DATE as billDate,
		t.BILL_CODE as
		billCode,
		t.BILL_NO as billNo,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as customerTaxno,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as sumAmt,
		t.FAPIAO_TYPE as fapiaoType,
		t.DATASTATUS
		as datastatus,
		t.ori_bill_code as oriBillCode,
		t.ori_bill_no as
		oriBillNo
		from VMS_BILL_INFO t
		<!-- <include refid="applyInfo_fragment" /> <dynamic> <isNotEmpty prepend="" 
			property="billInfo.orderBy"> $billInfo.orderBy$ </isNotEmpty> </dynamic> -->
		where
		t.DATASTATUS = '21'
	</select>

	<select id="findRedReceiptApprove1Count" parameterClass="java.util.Map"
		resultClass="long">
		
		<!--oracle版本  -->
		<!-- select count(*) from VMS_BILL_INFO t
		left join VMS_TRANS_BILL tb on
		t.bill_id = tb.bill_id
		left join VMS_TRANS_INFO t2 on t2.trans_id =
		tb.trans_id
		<include refid="billInfo_fragment" />
		and ((EXTRACT(MONTH FROM SYSDATE) - EXTRACT(MONTH FROM
		TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')))>0 or
		(EXTRACT(year FROM
		SYSDATE) - EXTRACT(year FROM TO_DATE(BILL_DATE, 'yyyy-mm-dd
		hh24:mi:ss')))>0 )
		and t.DATASTATUS = '16' -->
		
		<!--mysql版本  -->
		select count(*) from VMS_BILL_INFO t
		left join VMS_TRANS_BILL tb on
		t.bill_id = tb.bill_id
		left join VMS_TRANS_INFO t2 on t2.trans_id =
		tb.trans_id
		<include refid="billInfo_fragment" />
		and ((EXTRACT(MONTH FROM SYSDATE()) - EXTRACT(MONTH FROM
		STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')))>0 or
		(EXTRACT(year FROM
		SYSDATE()) - EXTRACT(year FROM STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')))>0 )
		and t.DATASTATUS = '16'
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- copy -->


	<delete id="deleteApplyInfo" parameterClass="java.util.Map">
		delete from VMS_HC_APPLY_INFO 
		<dynamic prepend=" where ">
			<isNotEmpty prepend="and" property="billNo">
				bill_No = #billNo#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billCode">
				bill_code =
				#billCode#
			</isNotEmpty>
		</dynamic>
	</delete>

	<!-- 红冲listOracle版本 -->
	<!-- <select id="redReceiptListCount" parameterClass="java.util.Map" resultClass="long"> 
		select count(1) from ( select rownum as rowindex, t.BILL_ID as billId, t.BILL_DATE 
		as billDate, t.BILL_CODE as billCode, t.BILL_NO as billNo, t.CUSTOMER_NAME 
		as customerName, t.CUSTOMER_TAXNO as ustomerTaxno, AMT_SUM as amtSum, TAX_AMT_SUM 
		as taxAmtSum, SUM_AMT as sumAmt, t.FAPIAO_TYPE as fapiaoType, t.DATASTATUS 
		as datastatus, t.apply_date as applyDate, metlife begin t.INSURE_ID as insureId, 
		t.REPNUM as repnum, t.TTMPRCNO as ttmprcno, t.FEETYP as feeTyp, t.BILLFREQ 
		as billFreq, to_char(to_date(t.HISSDTE),'yyyy-mm-dd') as hissDte, t.HISSDTE 
		as hissDte, t.DSOURCE as dSource, t.CHANNEL as channel metlife end from VMS_BILL_INFO 
		t <include refid="applyInfo_fragment" /> metlife begin <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.insureId"> t.INSURE_ID = #applyInfo.insureId# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.repnum"> 
		t.REPNUM = #applyInfo.repnum# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.ttmprcno"> t.TTMPRCNO = #applyInfo.ttmprcno# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.feeTyp"> 
		t.FEETYP = #applyInfo.feeTyp# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.billFreq"> t.BILLFREQ = #applyInfo.billFreq# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.hissDteBegin"> 
		<![CDATA[substr(t.HISSDTE,0,10)>=substr(#applyInfo.hissDteBegin#,0,10)]]> 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
		<![CDATA[substr(t.HISSDTE,0,10)<=substr(#applyInfo.hissDteEnd#,0,10)]]> </isNotEmpty> 
		</dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.dSource"> 
		t.DSOURCE = #applyInfo.dSource# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.channel"> t.CHANNEL = #applyInfo.channel# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.dSource"> 
		t.DSOURCE = #applyInfo.dSource# </isNotEmpty> </dynamic> metlife end <dynamic> 
		<isNotEmpty prepend="" property="billInfo.orderBy"> $billInfo.orderBy$ </isNotEmpty> 
		</dynamic> and t.DATASTATUS = '17' order by billCode asc, billNo asc ) </select> -->

	<!-- 红冲listMysql版本 -->
	<select id="redReceiptListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1)
		from (

		select
		(@rowNum:=@rowNum+1) as rowindex,
		t.BILL_ID as billId,
		t.BILL_DATE as
		billDate,
		t.BILL_CODE as
		billCode,
		t.BILL_NO as billNo,
		t.CUSTOMER_NAME as
		customerName,
		t.CUSTOMER_TAXNO as ustomerTaxno,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as sumAmt,
		t.FAPIAO_TYPE as fapiaoType,
		t.DATASTATUS
		as datastatus,
		t.apply_date as applyDate,
		<!-- metlife begin -->
		t.INSURE_ID as insureId,
		t.REPNUM as repnum,
		t.TTMPRCNO as ttmprcno,
		t.FEETYP as feeTyp,
		t.BILLFREQ as billFreq,
		<!-- to_char(to_date(t.HISSDTE),'yyyy-mm-dd') as hissDte, -->
		t.HISSDTE as hissDte,
		t.DSOURCE as dSource,
		t.CHANNEL as channel
		<!-- metlife end -->
		from
		VMS_BILL_INFO t

		<include refid="applyInfo_fragment" />
		<!-- metlife begin -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.insureId">
				t.INSURE_ID =
				#applyInfo.insureId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.repnum">
				t.REPNUM =
				#applyInfo.repnum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.ttmprcno">
				t.TTMPRCNO =
				#applyInfo.ttmprcno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.feeTyp">
				t.FEETYP =
				#applyInfo.feeTyp#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billFreq">
				t.BILLFREQ =
				#applyInfo.billFreq#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
			<![CDATA[substr(t.HISSDTE,0,10)>=substr(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
			<![CDATA[substr(t.HISSDTE,0,10)<=substr(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本-->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
			<![CDATA[substring(t.HISSDTE,0,10)>=substring(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
			<![CDATA[substring(t.HISSDTE,0,10)<=substring(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE =
				#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.channel">
				t.CHANNEL =
				#applyInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE =
				#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<!-- metlife end -->
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		and t.DATASTATUS = '17'
		order by
		billCode asc,
		billNo asc

		)fff
	</select>






	<!-- copy -->
	<select id="findRedBillByOriBillId" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.BillInfo">
		SELECT
		bi.BILL_ID as billId,
		bi.BILL_CODE as billCode,
		bi.BILL_NO as billNo,
		bi.BILL_DATE as billDate,
		bi.CUSTOMER_NAME as
		customerName,
		bi.CUSTOMER_TAXNO as customerTaxNo,
		bi.CUSTOMER_ADDRESSANDPHONE as customerAddressAndPhone,
		bi.CUSTOMER_BANKANDACCOUNT as customerBankAndAccount,
		bi.AMT_SUM as
		amtSum,
		bi.TAX_AMT_SUM as taxAmtSum,
		bi.SUM_AMT as sumAmt,
		bi.REMARK as
		remark,
		bi.DRAWER as drawer,
		bi.REVIEWER as reviewer,
		bi.PAYEE as payee,
		bi.NAME as name,
		bi.TAXNO as taxNo,
		bi.ADDRESSANDPHONE as
		addressAndPhone,
		bi.BANKANDACCOUNT as bankAndAccount,
		bi.INSTCODE as
		instcode,
		bi.CANCEL_INITIATOR as cancelInitiator,
		bi.CANCEL_AUDITOR as
		cancelAuditor,
		bi.TAX_DISK_NO as taxDiskNo,
		bi.MACHINE_NO as machineNo,
		bi.NOTICE_NO as noticeNo,
		bi.ORI_BILL_CODE as oriBillCode,
		bi.ORI_BILL_NO as oriBillNo,
		bi.DATASTATUS as dataStatus,
		bi.DESCRIPTION as description,
		bi.IS_HANDIWORK as isHandiwork,
		bi.ISSUE_TYPE as issueType,
		bi.FAPIAO_TYPE as fapiaoType,
		bi.OPERATESTATUS as operateStatus,
		bi.APPLY_DATE as applyDate,
		bi.BALANCE as balance
		from VMS_BILL_INFO bi
		where exists
		(
		select 1
		from
		VMS_BILL_INFO b
		where bi.ORI_BILL_CODE = b.bill_code
		and bi.ori_bill_no
		= b.bill_no
		and b.bill_id = #billId#
		)
	</select>

	<!--Oracle版本 -->
	<!-- <select id="redReceiptList" parameterClass="java.util.Map" resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo"> 
		select * from ( select rownum as rowindex, t.BILL_ID as billId, t.BILL_DATE 
		as billDate, t.BILL_CODE as billCode, t.BILL_NO as billNo, t.CUSTOMER_NAME 
		as customerName, t.CUSTOMER_TAXNO as ustomerTaxno, AMT_SUM as amtSum, TAX_AMT_SUM 
		as taxAmtSum, SUM_AMT as sumAmt, t.FAPIAO_TYPE as fapiaoType, t.DATASTATUS 
		as datastatus, t.apply_date as applyDate, metlife begin t.INSURE_ID as insureId, 
		t.REPNUM as repnum, t.TTMPRCNO as ttmprcno, t.FEETYP as feeTyp, t.BILLFREQ 
		as billFreq, to_char(to_date(t.HISSDTE),'yyyy-mm-dd') as hissDte, t.HISSDTE 
		as hissDte, t.DSOURCE as dSource, t.CHANNEL as channel metlife end from VMS_BILL_INFO 
		t <include refid="applyInfo_fragment" /> metlife begin <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.insureId"> t.INSURE_ID = #applyInfo.insureId# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.repnum"> 
		t.REPNUM = #applyInfo.repnum# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.ttmprcno"> t.TTMPRCNO = #applyInfo.ttmprcno# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.feeTyp"> 
		t.FEETYP = #applyInfo.feeTyp# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.billFreq"> t.BILLFREQ = #applyInfo.billFreq# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.hissDteBegin"> 
		<![CDATA[substr(t.HISSDTE,0,10)>=substr(#applyInfo.hissDteBegin#,0,10)]]> 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
		<![CDATA[substr(t.HISSDTE,0,10)<=substr(#applyInfo.hissDteEnd#,0,10)]]> </isNotEmpty> 
		</dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.dSource"> 
		t.DSOURCE = #applyInfo.dSource# </isNotEmpty> </dynamic> <dynamic> <isNotEmpty 
		prepend="and" property="applyInfo.channel"> t.CHANNEL = #applyInfo.channel# 
		</isNotEmpty> </dynamic> <dynamic> <isNotEmpty prepend="and" property="applyInfo.dSource"> 
		t.DSOURCE = #applyInfo.dSource# </isNotEmpty> </dynamic> metlife end <dynamic> 
		<isNotEmpty prepend="" property="billInfo.orderBy"> $billInfo.orderBy$ </isNotEmpty> 
		</dynamic> <dynamic> <isNotEmpty prepend="and" property="endIndex"> <![CDATA[ 
		rownum <= #endIndex#]]> </isNotEmpty> </dynamic> and t.DATASTATUS = '17' 
		order by billCode asc, billNo asc ) d where 1=1 <dynamic> <isNotEmpty prepend="and" 
		property="startIndex"> <![CDATA[ rowIndex > #startIndex# ]]> </isNotEmpty> 
		</dynamic> </select> -->


	<!--Mysql版本 -->
	<select id="redReceiptList" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptApplyInfo">
		select * from (
		select
		(@rowNum:=@rowNum+1) as rowindex,
		t.BILL_ID as
		billId,
		t.BILL_DATE as billDate,
		t.BILL_CODE as
		billCode,
		t.BILL_NO as
		billNo,
		t.CUSTOMER_NAME as customerName,
		t.CUSTOMER_TAXNO as
		ustomerTaxno,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as
		taxAmtSum,
		SUM_AMT as
		sumAmt,
		t.FAPIAO_TYPE as fapiaoType,
		t.DATASTATUS
		as datastatus,
		t.apply_date as applyDate,
		<!-- metlife begin -->
		t.INSURE_ID as insureId,
		t.REPNUM as repnum,
		t.TTMPRCNO as ttmprcno,
		t.FEETYP as feeTyp,
		t.BILLFREQ as billFreq,
		<!-- to_char(to_date(t.HISSDTE),'yyyy-mm-dd') as hissDte, -->
		t.HISSDTE as hissDte,
		t.DSOURCE as dSource,
		t.CHANNEL as channel
		<!-- metlife end -->
		from
		VMS_BILL_INFO t

		<include refid="applyInfo_fragment" />
		<!-- metlife begin -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.insureId">
				t.INSURE_ID =
				#applyInfo.insureId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.repnum">
				t.REPNUM =
				#applyInfo.repnum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.ttmprcno">
				t.TTMPRCNO =
				#applyInfo.ttmprcno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.feeTyp">
				t.FEETYP =
				#applyInfo.feeTyp#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.billFreq">
				t.BILLFREQ =
				#applyInfo.billFreq#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
			<![CDATA[substr(t.HISSDTE,0,10)>=substr(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
			<![CDATA[substr(t.HISSDTE,0,10)<=substr(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteBegin">
			<![CDATA[substring(t.HISSDTE,0,10)>=substring(#applyInfo.hissDteBegin#,0,10)]]>

			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.hissDteEnd"> 
			<![CDATA[substring(t.HISSDTE,0,10)<=substring(#applyInfo.hissDteEnd#,0,10)]]>
			</isNotEmpty>
		</dynamic>
		
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE =
				#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.channel">
				t.CHANNEL =
				#applyInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="applyInfo.dSource">
				t.DSOURCE =
				#applyInfo.dSource#
			</isNotEmpty>
		</dynamic>
		<!-- metlife end -->
		<dynamic>
			<isNotEmpty prepend="" property="billInfo.orderBy">
				$billInfo.orderBy$
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
	    <dynamic>
			<isNotEmpty prepend="and" property="endIndex"> 
				<![CDATA[ rownum <= #endIndex#]]>
			</isNotEmpty>
		</dynamic>
		
		
		and t.DATASTATUS = '17'
		order by
		billCode asc,
		billNo asc
		) d where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ rowIndex > #startIndex#  ]]>
			</isNotEmpty>
		</dynamic>
	</select>







	<select id="redReceiptList1Count" parameterClass="java.util.Map"
		resultClass="long">
		
		
		<!--oracle版本  -->
		<!-- select count(*) from VMS_BILL_INFO t
		left join VMS_TRANS_BILL tb on
		t.bill_id = tb.bill_id
		left join VMS_TRANS_INFO t2 on t2.trans_id =
		tb.trans_id
		<include refid="billInfo_fragment" />
		and ((EXTRACT(MONTH FROM SYSDATE) - EXTRACT(MONTH FROM
		TO_DATE(BILL_DATE, 'yyyy-mm-dd hh24:mi:ss')))>0 or
		(EXTRACT(year FROM
		SYSDATE) - EXTRACT(year FROM TO_DATE(BILL_DATE, 'yyyy-mm-dd
		hh24:mi:ss')))>0 )
		and t.DATASTATUS = '17' -->
		
		<!--mysql版本  -->
		select count(*) from VMS_BILL_INFO t
		left join VMS_TRANS_BILL tb on
		t.bill_id = tb.bill_id
		left join VMS_TRANS_INFO t2 on t2.trans_id =
		tb.trans_id
		<include refid="billInfo_fragment" />
		and ((EXTRACT(MONTH FROM SYSDATE()) - EXTRACT(MONTH FROM
		STR_TO_DATE(BILL_DATE, '%Y-%m-%d %H:%i:%s')))>0 or
		(EXTRACT(year FROM
		SYSDATE()) - EXTRACT(year FROM STR_TO_DATE(BILL_DATE, '%Y-%m-%d
		%H:%i:%s')))>0 )
		and t.DATASTATUS = '17'
		
		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.billId">
				t.bill_Id =
				#billInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- copy -->


	<!-- 红冲交易 -->
	<select id="redReceiptTransList" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.RedReceiptTransInfo">
		select
		t.BILL_ID as billId,
		t.BILL_ITEM_ID as billItemId,
		t.AMT_CNY as
		amtCny,
		t.TAX_AMT_CNY as taxAmtCny,
		t.INCOME_CNY as incomeCny,
		bii.TAX_RATE as taxRate,
		ti.TRANS_ID as transId,
		ti.TRANS_DATE as
		transDate,
		ti.TAX_RATE as taxRate,
		ti.FAPIAO_TYPE as fapiaoType,
		ti.DATASTATUS as datastatus,
		ti.CUSTOMER_ACCOUNT as customerAccount,
		ti.TRANS_TYPE as transType,
		ti.INSTCODE as bankCode,
		ti.CUSTOMER_ID as
		customerId,
		ti.TRANS_FLAG as transFlag,
		ti.IS_REVERSE as isReverse,
		ti.BALANCE as balance,
		bi.CUSTOMER_NAME as customerName,
		bi.CUSTOMER_TAXNO as customerTaxno,
		bi.AMT_SUM as amtSum,
		bi.TAX_AMT_SUM as taxAmtSum,
		bi.SUM_AMT as sumAmt,
		bi.IS_HANDIWORK as
		isHandiwork,
		tr.TRANS_ID as reverseTransId,
		tr.AMT_CNY as reverseAmtCny,
		tr.TAX_AMT_CNY as reverseTaxAmtCny,
		tr.INCOME_CNY as reverseIncomeCny
		from VMS_TRANS_BILL t
		inner join VMS_TRANS_INFO ti on
		t.TRANS_ID =
		ti.TRANS_ID
		left join VMS_TRANS_INFO tr
		on tr.reverse_trans_id =
		ti.trans_id
		and tr.is_reverse ='Y'
		inner join VMS_BILL_ITEM_INFO bii on
		t.BILL_ID
		=
		bii.BILL_ID
		and t.BILL_ITEM_ID = bii.BILL_ITEM_ID
		inner join
		VMS_BILL_INFO bi on
		bi.BILL_ID = bii.BILL_ID
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="billId">
				t.bill_Id = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="oriBillCode">
				bi.ORI_BILL_CODE =
				#oriBillCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="oriBillNo">
				bi.ORI_BILL_NO =
				#oriBillNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transId">
				t.TRANS_ID in
				($transId$)
			</isNotEmpty>
		</dynamic>
		order by
		t.bill_item_id
	</select>

	<select id="redReceiptTransListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_TRANS_BILL t
		inner JOIN VMS_TRANS_INFO ti on
		t.TRANS_ID = TI.TRANS_ID
		inner join
		VMS_BILL_INFO bi on BI.bill_id =
		t.bill_id
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="billId">
				t.bill_Id = #billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transId">
				t.TRANS_ID in
				($transId$)
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findBillItemInfo1" parameterClass="java.util.Map"
		resultClass="billItemInfo">
		select
		bi.BILL_ID as billId,
		bi.BILL_ITEM_ID as billItemId,
		bi.GOODS_NAME as goodsName,
		bi.SPECANDMODEL as specandmodel,
		bi.GOODS_UNIT as goodsUnit,
		bi.GOODS_NO as goodsNo,
		bi.GOODS_PRICE as
		goodsPrice,
		bi.TAX_FLAG as taxFlag,
		bi.AMT as amt,
		bi.TAX_RATE as
		taxRate,
		bi.TAX_AMT as taxAmt,
		bi.TAX_ITEM as taxItem,
		bi.IS_MAINGOODS as
		isMainGoods,
		bi.ROW_NATURE as rowNature,
		case
		when bi.DIS_ITEM_ID is null
		then bi.bill_item_id
		else bi.DIS_ITEM_ID
		end as disItemId,
		bi.DISCOUNT_RATE as discountRate
		from VMS_BILL_ITEM_INFO bi
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.billId">
				bi.BILL_ID =
				#billItem.billId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.billItemId">
				bi.BILL_ITEM_ID =
				#billItem.billItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.disItemId">
				bi.DIS_ITEM_ID =
				#billItem.disItemId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="billItem.rowNature">
				bi.ROW_NATURE =
				#billItem.rowNature#
			</isNotEmpty>
		</dynamic>
		order by disItemId, billItemId
	</select>


	<insert id="saveSpecialTicket" parameterClass="java.util.Map">
		insert into
		VMS_HC_APPLY_INFO (
		BILL_NO,
		BILL_CODE,
		VAT_TYPE,
		BUY_SELL_IND,
		LEVEL1_OPTION,
		LEVEL2_OPTION
		)
		values(
		#specialTicket.billNo#,
		#specialTicket.billCode#,
		#specialTicket.fapiaoType#,
		#specialTicket.buySellInd#,
		#specialTicket.level1Option#,
		#specialTicket.level2Option#
		)
	</insert>

	<select id="findIncomeById" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		select income_CNY as income from VMS_TRANS_BILL t where 1=1

		<dynamic>
			<isNotEmpty prepend="and" property="transId">
				t.TRANS_ID = #transId#
			</isNotEmpty>
		</dynamic>

	</select>


	<!-- 徐海洋结束 -->

	<!-- YS开始 -->
	<!-- 进入冲账交易列表页或点击冲账按钮查询 -->
	<sql id="transInfo_fragment1">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transId">
				t.trans_Id =
				#transInfoYS.transId#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transBeginDate"> 
				<![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#transInfoYS.transBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transEndDate"> 
				<![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#transInfoYS.transEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transBeginDate"> 
				<![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#transInfoYS.transBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transEndDate"> 
				<![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#transInfoYS.transEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.customerName">
				c.customer_cname like
				'%$transInfoYS.customerName$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.customerId">
				c.customer_id like
				'%$transInfoYS.customerId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.customerAccount">
				t.CUSTOMER_ACCOUNT like
				'%$transInfoYS.customerAccount$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.businessCname">
				b.TRANS_TYPE_NAME like
				'%$transInfoYS.businessCname$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.taxFlag">
				t.TAX_FLAG =
				#transInfoYS.taxFlag#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transType">
				t.trans_type =
				#transInfoYS.transType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.dataStatus">
				t.DATASTATUS =
				#transInfoYS.dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.reverseTransId">
				t.REVERSE_TRANS_ID =
				#transInfoYS.reverseTransId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.billId">
				exists (select 1 from
				vms_trans_bill tb where tb.trans_id = t.trans_id and tb.bill_id =
				#transInfoYS.billId#)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.taxpayerType">
				c.TAXPAYER_TYPE =
				#transInfoYS.taxpayerType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.amtMin"> 
				<![CDATA[ AMT_CNY >= #transInfoYS.amtMin# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.amtMax"> 
				<![CDATA[ AMT_CNY <= #transInfoYS.amtMax# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.balanceMin"> 
				<![CDATA[ balance >= #transInfoYS.balanceMin# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.balanceMax"> 
				<![CDATA[ balance <= #transInfoYS.balanceMax# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.isReverse">
				<isEqual property="transInfoYS.isReverse" compareValue="Y">
					t.is_reverse = 'Y'
				</isEqual>
				<isEqual property="transInfoYS.isReverse" compareValue="N">
					t.is_reverse = 'N'
				</isEqual>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchCondition">
				$searchCondition$
			</isNotEmpty>
		</dynamic>
	</sql>

	<!-- 进入冲账界面 -->
	<sql id="transInfo_chongzhang">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transId">
				t.trans_Id =
				#transInfoYS.transId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transBusId">
				t.TRANS_BUS_ID =
				#transInfoYS.transBusId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.customerName">
				UPPER(c.customer_cname) LIKE UPPER('%$transInfoYS.customerName$%')
			</isNotEmpty>
		</dynamic>
		
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transBeginDate"> 
				<![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#transInfoYS.transBeginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transEndDate"> 
				<![CDATA[ to_date(t.TRANS_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#transInfoYS.transEndDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transBeginDate"> 
				<![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#transInfoYS.transBeginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transEndDate"> 
				<![CDATA[ str_to_date(t.TRANS_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#transInfoYS.transEndDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.amtMin"> 
				<![CDATA[ AMT_CNY >= #transInfoYS.amtMin# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.amtMax"> 
				<![CDATA[ AMT_CNY <= #transInfoYS.amtMax# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.transDate">
				t.TRANS_DATE =
				#transInfoYS.transDate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.taxpayerType">
				c.TAXPAYER_TYPE =
				#transInfoYS.taxpayerType#
			</isNotEmpty>
		</dynamic>
		<!-- <dynamic> <isNotEmpty prepend="and" property="transInfoYS.transType"> 
			t.TRANS_TYPE = #transInfoYS.transType# </isNotEmpty> </dynamic> -->
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.businessCname">
				b.TRANS_TYPE_NAME like
				'%$transInfoYS.businessCname$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.customerId">
				t.CUSTOMER_ID =
				#transInfoYS.customerId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.reverseTransId">
				t.REVERSE_TRANS_ID =
				#transInfoYS.reverseTransId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfoYS.isReverse">
				<isEqual property="transInfoYS.isReverse" compareValue="Y">
					t.is_reverse = 'Y'
				</isEqual>
				<isEqual property="transInfoYS.isReverse" compareValue="N">
					t.is_reverse = 'N'
				</isEqual>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="searchCondition">
				$searchCondition$
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="selectTransToTrans" parameterClass="java.util.Map"
		resultClass="transInfoYS" remapResults="true">
		select
		t.TRANS_ID as transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE as
		transType,
		t.TRANS_BUS_ID as transBusId,
		t.CUSTOMER_ID as customerId,
		t.CUSTOMER_ACCOUNT as customerAccount,
		c.customer_cname as
		customerName,
		c.customer_taxno as customerTaxno,
		c.customer_address as
		customerAddress,
		c.customer_phone as customerTel,
		c.taxpayer_type as
		taxpayerType,
		t.TAX_FLAG as taxFlag,
		t.FAPIAO_TYPE as fapiaoType,
		t.AMT_CNY as amtCny,
		t.TAX_AMT_CNY as taxAmtCny,
		t.TAX_RATE as taxRate,
		t.IS_REVERSE as isReverse,
		t.BANK_CODE as bankCode,
		t.REMARK as remark,
		t.ORG_CURR_CODE as orgCurrCode,
		t.ORG_ACC_NO as orgAccNo,
		t.AMT_CCY as
		amtCcy,
		t.REVERSE_TRANS_ID as reverseTransId,
		t.INCOME_CNY as incomeCny,
		t.SHORT_AND_OVER as shortAndOver,
		t.BALANCE as balance,
		t.DATASTATUS as
		dataStatus,
		u.USER_CNAME as drawerName,
		b.TRANS_TYPE_NAME as
		businessCName
		<dynamic>
			<isNotEmpty prepend="" property="searchColums">
				$searchColums$
			</isNotEmpty>
		</dynamic>
		from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on t.CUSTOMER_ID =
		c.customer_id
		left join VMS_TRANS_TYPE b on
		t.TRANS_TYPE =
		b.TRANS_TYPE_ID
		left join u_base_user u on t.CUSTOMER_ID = u.user_id
		<dynamic>
			<isNotEmpty prepend="" property="searchTables">
				$searchTables$
			</isNotEmpty>
		</dynamic>
		<include refid="transInfo_chongzhang" />
	</select>

	<select id="selectTransInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on
		t.CUSTOMER_ID = c.customer_id
		left join VMS_TRANS_TYPE b on
		t.TRANS_TYPE = b.TRANS_TYPE_ID
		left join u_base_user u on t.CUSTOMER_ID
		= u.user_id

		<dynamic>
			<isNotEmpty prepend="" property="searchTables">
				$searchTables$
			</isNotEmpty>
		</dynamic>
		<include refid="transInfo_fragment1" />
	</select>

	<select id="selectTransInfo" parameterClass="java.util.Map"
		resultClass="transInfoYS" remapResults="true">
		select
		t.TRANS_ID as transId,
		t.TRANS_DATE as transDate,
		t.TRANS_TYPE as
		transType,
		t.TRANS_BUS_ID as transBusId,
		t.CUSTOMER_ID as customerId,
		t.CUSTOMER_ACCOUNT as customerAccount,
		c.customer_cname as
		customerName,
		c.customer_taxno as customerTaxno,
		c.customer_address as
		customerAddress,
		c.customer_phone as customerTel,
		c.taxpayer_type as
		taxpayerType,
		t.TAX_FLAG as taxFlag,
		t.FAPIAO_TYPE as fapiaoType,
		t.AMT_CNY as amtCny,
		t.TAX_AMT_CNY as taxAmtCny,
		t.TAX_RATE as taxRate,
		t.IS_REVERSE as isReverse,
		t.BANK_CODE as bankCode,
		t.REMARK as remark,
		t.ORG_CURR_CODE as orgCurrCode,
		t.ORG_ACC_NO as orgAccNo,
		t.AMT_CCY as
		amtCcy,
		t.REVERSE_TRANS_ID as reverseTransId,
		t.INCOME_CNY as incomeCny,
		t.SHORT_AND_OVER as shortAndOver,
		t.BALANCE as balance,
		t.DATASTATUS as
		dataStatus,
		t.VAT_RATE_CODE as vatRateCode,
		t.TRANS_FAPIAO_FLAG as
		transFapiaoFlag,
		u.USER_CNAME as drawerName,
		b.TRANS_TYPE_NAME as
		businessCName

		<dynamic>
			<isNotEmpty prepend="" property="searchColums">
				$searchColums$
			</isNotEmpty>
		</dynamic>
		from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on t.CUSTOMER_ID =
		c.customer_id
		left join VMS_TRANS_TYPE b on
		t.TRANS_TYPE =
		b.TRANS_TYPE_ID
		left join u_base_user u on t.CUSTOMER_ID = u.user_id
		<dynamic>
			<isNotEmpty prepend="" property="searchTables">
				$searchTables$
			</isNotEmpty>
		</dynamic>
		<include refid="transInfo_fragment1" />
	</select>


	<update id="updateTransInfoYS" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set
		TRANS_DATE = #transInfo.transDate#,
		TRANS_TYPE =
		#transInfo.transType#,
		CUSTOMER_ACCOUNT = #transInfo.customerAccount#,
		TAX_FLAG = #transInfo.taxFlag#,
		TAX_RATE = #transInfo.taxRate#,
		IS_REVERSE = #transInfo.isReverse#,
		BANK_CODE = #transInfo.bankCode#,
		REMARK = #transInfo.remark#,
		ORG_CURR_CODE = #transInfo.orgCurrCode#,
		ORG_ACC_NO = #transInfo.orgAccNo#,
		AMT_CCY = #transInfo.amtCcy#,
		REVERSE_TRANS_ID = #transInfo.reverseTransId#,
		SHORT_AND_OVER =
		#transInfo.shortAndOver#,
		BALANCE = #transInfo.balance#,
		DATASTATUS =
		#transInfo.dataStatus#
		where TRANS_ID = #transInfo.transId#
	</update>
	<!--YS冲账交易结束 -->

	<!-- 进入发票编辑列表页oracle版本 -->
	<!-- <select id="selectBillInfoList" parameterClass="java.util.Map" resultClass="billInfo"> 
		SELECT * FROM (SELECT ROWNUM AS rowIndex,N.* FROM ( select vbt.apply_date 
		as applyDate, vbt.customer_name as customerName, vbt.customer_taxno as customerTaxNo, 
		vbt.customer_id as customerId, vbt.bill_code as billCode, vbt.bill_no as 
		billNo, vbt.amt_sum as amtSum, vbt.tax_amt_sum as taxAmtSum, vbt.sum_amt 
		as sumAmt, vbt.is_handiwork as isHandiwork, vbt.issue_type as issueType, 
		vbt.fapiao_type as faPiaoType, vbt.datastatus as dataStatus, vbt.bill_id 
		as billId, vbt.instcode as instCode, vbt.INSURE_ID as insureId, vbt.INSURE_ID 
		as cherNum, vbt.REPNUM as repNum, vbt.TTMPRCNO as ttmpRcno, vbt.FEETYP as 
		feeTyp, vbt.BILLFREQ as billFreq, vbt.HISSDTE as hissDte, vbt.DSOURCE as 
		dsouRce, vbt.CHANNEL as chanNel, vbt.BILL_DATE as billDate, vbt.payee from 
		(select vbt.*,rownum as rowindex from VMS_BILL_INFO vbt where vbt.is_handiwork 
		in ('2') <include refid="billInfoList_fragment" /> <dynamic> <isNotEmpty 
		prepend="and" property="billInfo.customerName"> vbt.customer_name like '%$billInfo.customerName$%' 
		</isNotEmpty> <isNotEmpty prepend="and" property="billInfo.fapiaoType"> vbt.faPiao_Type 
		= #billInfo.fapiaoType# </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.issueType"> 
		vbt.issue_type = #billInfo.issueType# </isNotEmpty> <isNotEmpty prepend="and" 
		property="billInfo.cherNum"> vbt.INSURE_ID like '%$billInfo.cherNum$%' or 
		vbt.REPNUM like '%$billInfo.cherNum$%' </isNotEmpty> <isNotEmpty prepend="and" 
		property="billInfo.ttmpRcno"> vbt.TTMPRCNO like '%$billInfo.ttmpRcno$%' </isNotEmpty> 
		<isNotEmpty prepend="and" property="billInfo.feeTyp"> vbt.FEETYP = #billInfo.feeTyp# 
		</isNotEmpty> <isNotEmpty prepend="and" property="billInfo.billFreq"> vbt.BILLFREQ 
		= #billInfo.billFreq# </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.billBeginDate"> 
		<![CDATA[ to_date(vbt.BILL_DATE,'yyyy-mm-dd') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd') 
		]]> </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.billEndDate"> 
		<![CDATA[ to_date(vbt.BILL_DATE,'yyyy-mm-dd') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd') 
		]]> </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.hissBeginDte"> 
		<![CDATA[ to_date(vbt.HISSDTE,'yyyy-mm-dd') >= to_date(#billInfo.hissBeginDte#,'yyyy-mm-dd') 
		]]> </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.hissEndDte"> 
		<![CDATA[ to_date(vbt.HISSDTE,'yyyy-mm-dd') <= to_date(#billInfo.hissEndDte#,'yyyy-mm-dd') 
		]]> </isNotEmpty> <isNotEmpty prepend="and" property="billInfo.dsouRce"> 
		vbt.DSOURCE = #billInfo.dsouRce# </isNotEmpty> <isNotEmpty prepend="and" 
		property="billInfo.chanNel"> vbt.CHANNEL = #billInfo.chanNel# </isNotEmpty> 
		</dynamic> ) vbt order by vbt.apply_date desc <isNotEmpty prepend="and" property="endIndex"> 
		<![CDATA[ ROWNUM <= #endIndex#]]> </isNotEmpty> ) N ) T WHERE 1=1 <isNotEmpty 
		prepend="and" property="startIndex"> <![CDATA[ T.rowIndex > #startIndex# 
		]]> </isNotEmpty> </select> -->

	<!--进入发票编辑列表页 Mysql版本 -->
	<select id="selectBillInfoList" parameterClass="java.util.Map"
		resultClass="billInfo">
		SELECT * FROM
		(SELECT (@rowNum:=@rowNum+1) AS rowIndex,N.* FROM (

		select vbt.apply_date as applyDate,
		vbt.customer_name as customerName,
		vbt.customer_taxno as customerTaxNo,
		vbt.customer_id as customerId,
		vbt.bill_code as billCode,
		vbt.bill_no as billNo,
		vbt.amt_sum as amtSum,
		vbt.tax_amt_sum as
		taxAmtSum,
		vbt.sum_amt as sumAmt,
		vbt.is_handiwork as
		isHandiwork,
		vbt.issue_type as issueType,
		vbt.fapiao_type as faPiaoType,
		vbt.datastatus as dataStatus,
		vbt.bill_id as billId,
		vbt.instcode as
		instCode,
		vbt.INSURE_ID as insureId,
		vbt.INSURE_ID as cherNum,
		vbt.REPNUM as repNum,
		vbt.TTMPRCNO as ttmpRcno,
		vbt.FEETYP as feeTyp,
		vbt.BILLFREQ as billFreq,
		vbt.HISSDTE as hissDte,
		vbt.DSOURCE as
		dsouRce,
		vbt.CHANNEL as chanNel,
		vbt.BILL_DATE as billDate,
		vbt.payee
		from
		(select
		vbt.* from VMS_BILL_INFO
		vbt
		where
		vbt.is_handiwork
		in ('2')
		<include refid="billInfoList_fragment" />

		<dynamic>
			<isNotEmpty prepend="and" property="billInfo.customerName">
				vbt.customer_name like
				'%$billInfo.customerName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.fapiaoType">
				vbt.faPiao_Type =
				#billInfo.fapiaoType#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.issueType">
				vbt.issue_type =
				#billInfo.issueType#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.cherNum">
				<!-- vbt.INSURE_ID like
				'%$billInfo.cherNum$%' --><!-- 2018-04-04更改 -->
				vbt.INSURE_ID = #billInfo.cherNum#
				or
				vbt.REPNUM like '%$billInfo.cherNum$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.ttmpRcno">
				<!-- vbt.TTMPRCNO like
				'%$billInfo.ttmpRcno$%' --><!-- 2018-04-04更改 -->
				vbt.TTMPRCNO = #billInfo.ttmpRcno#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.feeTyp">
				vbt.FEETYP =
				#billInfo.feeTyp#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billFreq">
				vbt.BILLFREQ =
				#billInfo.billFreq#
			</isNotEmpty>
			
			<!--oracle版本  -->
			<!-- <isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ to_date(vbt.BILL_DATE,'yyyy-mm-dd') >= to_date(#billInfo.billBeginDate#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ to_date(vbt.BILL_DATE,'yyyy-mm-dd') <= to_date(#billInfo.billEndDate#,'yyyy-mm-dd')  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ to_date(vbt.HISSDTE,'yyyy-mm-dd') >= to_date(#billInfo.hissBeginDte#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ to_date(vbt.HISSDTE,'yyyy-mm-dd') <= to_date(#billInfo.hissEndDte#,'yyyy-mm-dd')  ]]>
			</isNotEmpty> -->
			
			<!--mysql版本  -->
			<isNotEmpty prepend="and" property="billInfo.billBeginDate">
				<![CDATA[ str_to_date(vbt.BILL_DATE,'%Y-%m-%d') >= str_to_date(#billInfo.billBeginDate#,'%Y-%m-%d') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.billEndDate">
				<![CDATA[ str_to_date(vbt.BILL_DATE,'%Y-%m-%d') <= str_to_date(#billInfo.billEndDate#,'%Y-%m-%d')  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissBeginDte">
				<![CDATA[ str_to_date(vbt.HISSDTE,'%Y-%m-%d') >= str_to_date(#billInfo.hissBeginDte#,'%Y-%m-%d') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.hissEndDte">
				<![CDATA[ str_to_date(vbt.HISSDTE,'%Y-%m-%d') <= str_to_date(#billInfo.hissEndDte#,'%Y-%m-%d')  ]]>
			</isNotEmpty>
			
			
			
			<isNotEmpty prepend="and" property="billInfo.dsouRce">
				vbt.DSOURCE =
				#billInfo.dsouRce#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billInfo.chanNel">
				vbt.CHANNEL =
				#billInfo.chanNel#
			</isNotEmpty>
		</dynamic>
		)
		vbt
		order by vbt.apply_date desc
		<isNotEmpty prepend="and" property="endIndex"> 

				<![CDATA[ ROWNUM <= #endIndex#]]>
		</isNotEmpty>
		) N
		) T WHERE 1=1
		<isNotEmpty prepend="and" property="startIndex"> 
				<![CDATA[ T.rowIndex > #startIndex#  ]]>
		</isNotEmpty>
	</select>

	<!--Oracle版本 -->
	<!-- <select id="selectBillInfoListCount" parameterClass="java.util.Map" 
		resultClass="long"> select count(*) from (select vbt.*,rownum as rowindex 
		from VMS_BILL_INFO vbt ) vbt where vbt.is_handiwork in('2','3') <include 
		refid="billInfoList_fragment" /> </select> -->


	<!--Mysql版本 -->
	<select id="selectBillInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from
		(select vbt.*,(@rowNum:=@rowNum+1) as rowindex from
		VMS_BILL_INFO
		vbt
		) vbt
		where vbt.is_handiwork in ('2') <!-- ('2','3') -->
		<include refid="billInfoList_fragment" />
	</select>




	<!-- YS 发票编辑-新增 开始 -->
	<sql id="customer_fragment">
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="customer.customerID">
				vci.CUSTOMER_ID =
				#customer.customerID#
			</isNotEmpty>
		</dynamic>
	</sql>

	<!-- YS 发票编辑-新增 结束 -->

	<!-- 根据BILLID从BILLINFO表中查询 -->
	<select id="findBillById" parameterClass="java.util.Map"
		resultClass="billInfo" remapResults="true">
		select
		ci.Customer_Id as
		customerId,
		vbi.BILL_ID as billId,
		vbi.BILL_CODE as billCode,
		vbi.BILL_NO as billNo,
		vbi.CUSTOMER_NAME as customerName,
		vbi.CUSTOMER_TAXNO as customerTaxno,
		vbi.CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		vbi.CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		vbi.SUM_AMT as sumAmt,
		vbi.AMT_SUM as amtSum,
		vbi.TAX_AMT_SUM as taxAmtSum,
		vbi.DSOURCE as dsouRce,
		vbi.INSTCODE as
		instCode,
		vbi.NAME as name,
		vbi.TAXNO as taxno,
		vbi.ADDRESSANDPHONE as
		addressandphone,
		vbi.BANKANDACCOUNT as bankandaccount,
		vbi.REMARK as
		remark,
		vbi.PAYEE as
		payee,
		vbi.REVIEWER as
		reviewer,
		vbi.DATASTATUS as
		dataStatus,
		vbi.FAPIAO_TYPE as fapiaoType,
		vbi.DRAWER as drawer,
		vbi.APPLY_DATE as
		applyDate,
		vbi.CANCEL_REASON as
		cancelReason
		from
		VMS_BILL_INFO vbi
		left
		join VMS_CUSTOMER_INFO ci
		on
		vbi.customer_id =
		ci.customer_id
		where vbi.BILL_ID = #billId#
	</select>

	<select id="findBillByIds" parameterClass="java.util.Map"
		resultClass="billInfo" remapResults="true">
		select
		ci.Customer_Id as
		customerId,
		vbi.BILL_ID as billId,
		vbi.BILL_CODE
		as billCode,
		vbi.BILL_NO as billNo,
		vbi.CUSTOMER_NAME as customerName,
		vbi.CUSTOMER_TAXNO as customerTaxno,
		vbi.CUSTOMER_ADDRESSANDPHONE as
		customerAddressandphone,
		vbi.CUSTOMER_BANKANDACCOUNT as
		customerBankandaccount,
		vbi.SUM_AMT as sumAmt,
		vbi.AMT_SUM as amtSum,
		vbi.TAX_AMT_SUM as taxAmtSum,
		vbi.DSOURCE as dsouRce,
		vbi.INSTCODE as
		instCode,
		vbi.NAME as name,
		vbi.TAXNO as taxno,
		vbi.ADDRESSANDPHONE as
		addressandphone,
		vbi.BANKANDACCOUNT as bankandaccount,
		vbi.REMARK as
		remark,
		vbi.PAYEE as
		payee,
		vbi.REVIEWER as
		reviewer,
		vbi.DATASTATUS as
		dataStatus,
		vbi.FAPIAO_TYPE as fapiaoType,
		vbi.DRAWER as drawer,
		vbi.APPLY_DATE as
		applyDate,
		vbi.CANCEL_REASON as
		cancelReason
		from
		VMS_BILL_INFO vbi
		left
		join VMS_CUSTOMER_INFO ci
		on
		vbi.customer_id =
		ci.customer_id
		where vbi.BILL_ID in
		<iterate property="billId" conjunction="," open="(" close=")">
			#billId[]#
		</iterate>
	</select>

	<update id="UpdateRemarkAndPayee" parameterClass="java.util.Map">
		update
		VMS_BILL_INFO set
		REMARK = #remark#,
		PAYEE = #payee#
		where BILL_ID =
		#billId#
	</update>
	<!--YS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~结束 -->

	<!--销项综合查询明细 -->
	
<!--oracle版本  -->
<!-- 	<select id="findtransInfo1" parameterClass="java.util.Map"
		resultClass="billInfo">

		select
		b.SUM_AMT as sumAmt,
		b.AMT_SUM as amtSum,
		b.TAX_AMT_SUM as
		taxAmtSum,
		b.NAME as name,
		b.TAXNO as taxno,
		(select t1.inst_name from
		u_base_inst t1
		where t1.inst_id=t.BANK_CODE)
		as bankName,
		t.REMARK as
		remark,
		b.ADDRESSANDPHONE as addressandphone,
		b.BANKANDACCOUNT as
		bankandaccount,
		b.PAYEE as payee,
		b.REVIEWER as reviewer,
		b.DRAWER as
		drawer,
		c.CUSTOMER_CNAME as customerName,
		c.CUSTOMER_TAXNO as
		customerTaxno,
		c.CUSTOMER_ADDRESS as customerAddress,
		c.CUSTOMER_PHONE
		as customerTel,
		c.customer_account as customerAccount,
		b.bill_id as
		billId

		from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on
		(t.CUSTOMER_ID =c.CUSTOMER_ID)
		full join VMS_TRANS_BILL tb on
		tb.trans_id = t.trans_id
		left join vms_bill_info b on tb.bill_id =
		b.bill_id
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transId">
				t.TRANS_ID=#transInfo.transId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billId">
				b.bill_id=#transInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select> -->
	
<!--mysql版本  -->	
	<select id="findtransInfo1" parameterClass="java.util.Map"
		resultClass="billInfo">

		select
		b.SUM_AMT as sumAmt,
		b.AMT_SUM as amtSum,
		b.TAX_AMT_SUM as
		taxAmtSum,
		b.NAME as name,
		b.TAXNO as taxno,
		(select t1.inst_name from
		u_base_inst t1
		where t1.inst_id=t.BANK_CODE)
		as bankName,
		t.REMARK as
		remark,
		b.ADDRESSANDPHONE as addressandphone,
		b.BANKANDACCOUNT as
		bankandaccount,
		b.PAYEE as payee,
		b.REVIEWER as reviewer,
		b.DRAWER as
		drawer,
		c.CUSTOMER_CNAME as customerName,
		c.CUSTOMER_TAXNO as
		customerTaxno,
		c.CUSTOMER_ADDRESS as customerAddress,
		c.CUSTOMER_PHONE
		as customerTel,
		c.customer_account as customerAccount,
		b.bill_id as
		billId

		from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on
		(t.CUSTOMER_ID =c.CUSTOMER_ID)
		left join VMS_TRANS_BILL tb on
		tb.trans_id = t.trans_id
		left join vms_bill_info b on tb.bill_id =
		b.bill_id
		where 1=1
		
		union
		
select
		b.SUM_AMT as sumAmt,
		b.AMT_SUM as amtSum,
		b.TAX_AMT_SUM as
		taxAmtSum,
		b.NAME as name,
		b.TAXNO as taxno,
		(select t1.inst_name from
		u_base_inst t1
		where t1.inst_id=t.BANK_CODE)
		as bankName,
		t.REMARK as
		remark,
		b.ADDRESSANDPHONE as addressandphone,
		b.BANKANDACCOUNT as
		bankandaccount,
		b.PAYEE as payee,
		b.REVIEWER as reviewer,
		b.DRAWER as
		drawer,
		c.CUSTOMER_CNAME as customerName,
		c.CUSTOMER_TAXNO as
		customerTaxno,
		c.CUSTOMER_ADDRESS as customerAddress,
		c.CUSTOMER_PHONE
		as customerTel,
		c.customer_account as customerAccount,
		b.bill_id as
		billId

		from VMS_TRANS_INFO t
		left join VMS_CUSTOMER_INFO c on
		(t.CUSTOMER_ID =c.CUSTOMER_ID)
		left join VMS_TRANS_BILL tb on
		tb.trans_id = t.trans_id
		left join vms_bill_info b on tb.bill_id =
		b.bill_id
		where 1=1
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.transId">
				t.TRANS_ID=#transInfo.transId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billId">
				b.bill_id=#transInfo.billId#
			</isNotEmpty>
		</dynamic>
	</select>



	<select id="findGoods" parameterClass="java.util.Map"
		resultClass="goods">
		select
		GOODS_NAME as goodsName,
		GOODS_ID as goodsNo,
		MODEL as model,
		unit
		as unit,
		tax_rate as taxRate
		<!-- TAX_NO as taxNo -->
		from
		v_goods_info t
		where
		GOODS_id is not null
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="goods.taxNo">
				t.TAX_NO = #goods.taxNo#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="goods.taxNo">
				t.TRANS_TYPE_ID =
				#goods.transType#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="goods.transType">
				exists (select 1 from
				vms_goods_trans s
				where s.TRANS_TYPE_ID = #goods.transType#
				and
				t.GOODS_ID = s.GOODS_ID and
				t.TAX_NO = s.TAX_NO)
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findGoodsList" parameterClass="java.util.Map"
		resultClass="goods">
		<!-- select DISTINCT GOODS_NAME||' - '||TAX_RATE AS goodsFullName, -->
		select DISTINCT concat(GOODS_NAME,' - ',TAX_RATE) AS goodsFullName,
		GOODS_NAME as goodsName,
		GOODS_ID as goodsNo,
		MODEL as model,
		unit as
		unit,
		tax_rate as taxRate
		from v_goods_info t
		where GOODS_id is not null
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="goods.taxNo">
				t.TAX_NO = #goods.taxNo#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findGoodsByTaxNo" parameterClass="java.util.Map"
		resultClass="goods">


	</select>

	<!-- 商品信息 列表画面初期化/检索用情报检索 -->
	<select id="getListGoodsInfo" parameterClass="java.util.Map"
		resultClass="goods">
		select
		a.TAX_NO as taxNo,
		a.GOODS_NO as goodsNo,
		a.GOODS_NAME as
		goodsName

		from
		vms_goods_info a
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				a.TAX_NO $taxNo$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				a.GOODS_NO $goodsNo$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsName">
				a.GOODS_NAME
				$goodsName$
			</isNotEmpty>
		</dynamic>
		order by
		a.GOODS_NO,
		a.GOODS_NAME
	</select>
	<select id="getListGoodsInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from
		vms_goods_info a
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				a.TAX_NO $taxNo$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				a.GOODS_NO $goodsNo$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsName">
				a.GOODS_NAME
				$goodsName$
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="getGoodsInfoPK" parameterClass="java.util.Map"
		resultClass="goods">
		select
		a.TAX_NO as taxNo,
		a.GOODS_NO as goodsNo,
		a.GOODS_NAME as
		goodsName
		from
		vms_goods_info a
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				a.TAX_NO = #taxNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				a.GOODS_NO = #goodsNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsName">
				a.GOODS_NAME =
				#goodsName#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="getGoodsItemInfoPK" parameterClass="java.util.Map"
		resultClass="goods">
		select
		a.GOODS_NO as goodsNo,
		a.TRANS_TYPE as transType
		from
		VMS_GOODS_ITEM_INFO a
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				a.GOODS_NO = #goodsNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transType">
				a.TRANS_TYPE =
				#transType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				a.TAX_NO = #taxNo#
			</isNotEmpty>
		</dynamic>
	</select>
	<insert id="saveGoodsInfo" parameterClass="java.util.Map">
		insert into
		VMS_GOODS_INFO (
		TAX_NO,
		GOODS_NO,
		GOODS_NAME
		)
		values(
		#taxNo#,
		#goodsNo#,
		#goodsName#
		)
	</insert>
	<insert id="saveGoodsItemInfo" parameterClass="java.util.Map">
		insert into
		VMS_GOODS_ITEM_INFO (
		GOODS_NO,
		TRANS_TYPE,
		TAX_NO
		)
		values(
		#goodsNo#,
		#transType#,
		#taxNo#
		)
	</insert>



	<delete id="delGoodsInfo" parameterClass="java.util.Map">
		delete from VMS_GOODS_INFO
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				TAX_NO = #taxNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				GOODS_NO = #goodsNo#
			</isNotEmpty>
		</dynamic>
	</delete>
	<delete id="delGoodsItemInfo" parameterClass="java.util.Map">
		delete from VMS_GOODS_ITEM_INFO
		where
		1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="goodsNo">
				GOODS_NO = #goodsNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transType">
				TRANS_TYPE =
				#transType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				TAX_NO = #taxNo#
			</isNotEmpty>
		</dynamic>
	</delete>

	<!-- 纳税人名称的取得 -->
	<select id="getAjaxTaxperNameList" parameterClass="java.util.Map"
		resultClass="organization">
		select u.inst_name as taxperName,
		u.Taxpernumber as taxperNumber
		from
		u_Base_Inst u
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxperNumber">
				u.taxpernumber
				$taxperNumber$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxperName">
				u.inst_name
				$taxperName$
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="id">
				u.INST_ID $id$
			</isNotEmpty>
		</dynamic>
		and taxpernumber is not null
		order by taxpernumber
	</select>
	
<!-- 	保存红色单号 -->
	<update id="saveRedNotic"
		parameterClass="java.util.Map">
		update VMS_BILL_INFO set
		NOTICE_NO=#noticNo#
		where BILL_CODE=#billCode#
		and BILL_NO=#billNo#
	</update>

	<!-- jobell 参数管理：进项税转出比例/金额管理 begin -->
	<select id="findParamInSurtaxListInfo" parameterClass="java.util.Map"
		resultClass="paramInSurtaxListInfo">
		SELECT
		B.DATA_DT as dataDt,
		A.Inst_name as instName,
		A.Inst_id as instId,
		A.TAXPERNUMBER as
		taxpayerId,
		<!--Oracle版本 -->
		<!-- NVL(A.TAXPERNAME,' ') as taxpayerName, B.TAXFREE_INCOME as taxfreeIncome, 
			B.ASSESSABLE_INCOME as assessableIncome, B.VAT_OUT_PROPORTION as vatOutProportion, 
			NVL(B.VAT_OUT_AMT,0) as vatOutAmt, -->
		<!--Mysql版本 -->
		ifnull(A.TAXPERNAME,' ') as taxpayerName,
		B.TAXFREE_INCOME as
		taxfreeIncome,
		B.ASSESSABLE_INCOME as
		assessableIncome,
		B.VAT_OUT_PROPORTION as vatOutProportion,
		ifnull(B.VAT_OUT_AMT,0) as
		vatOutAmt,

		B.PROPORTION_FLG as proportionFlg,
		(select code_name from
		T_CODE_DICTIONARY where
		code_type='PROPORTION_FLG'
		and
		CODE_VALUE_STANDARD_NUM=B.PROPORTION_FLG) as proportionFlgName
		FROM
		U_BASE_INST A
		INNER JOIN
		VMS_OUTPUT_OUT_INFO B
		ON
		A.TAXPERNUMBER =
		B.TAXPAYER_ID
		WHERE 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				A.INST_ID IN
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<!-- <isNotEmpty prepend="and" property="data_dt">
				to_char(to_date(B.DATA_DT,'yyyy-mm-dd'),'yyyymm') = #data_dt#
			</isNotEmpty> -->
			
			<isNotEmpty prepend="and" property="data_dt">
				date_format(str_to_date(B.DATA_DT,'%Y-%m-%d'),'%Y%m') = #data_dt#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				A.INST_ID = #inst_id#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_id">
				A.TAXPERNUMBER LIKE
				'%$taxpayer_id$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_name">
				A.TAXPERNAME LIKE
				'%$taxpayer_name$%'
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findParamInSurtaxListInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		SELECT
		count(*)
		FROM U_BASE_INST A
		INNER JOIN
		VMS_OUTPUT_OUT_INFO B
		ON
		A.TAXPERNUMBER = B.TAXPAYER_ID
		WHERE 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				A.INST_ID IN
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
		
			<!-- <isNotEmpty prepend="and" property="data_dt">
				to_char(to_date(B.DATA_DT,'yyyy-mm-dd'),'yyyymm') = #data_dt#
			</isNotEmpty> -->
			
			<isNotEmpty prepend="and" property="data_dt">
				date_format(str_to_date(B.DATA_DT,'%Y-%m-%d'),'%Y%m') = #data_dt#
			</isNotEmpty>
			
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				A.INST_ID = #inst_id#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_id">
				A.TAXPERNUMBER LIKE
				'%$taxpayer_id$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_name">
				A.TAXPERNAME LIKE
				'%$taxpayer_name$%'
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findParamInSurtaxItemInfo" parameterClass="java.util.Map"
		resultClass="paramInSurtaxListInfo">
		SELECT
		B.DATA_DT as dataDt,
		A.Inst_name as instName,
		A.TAXPERNUMBER as taxpayerId,
		A.TAXPERNAME as taxpayerName,
		B.TAXFREE_INCOME as taxfreeIncome,
		B.ASSESSABLE_INCOME as
		assessableIncome,
		B.VAT_OUT_PROPORTION as vatOutProportion,
		B.VAT_OUT_AMT as vatOutAmt,
		B.PROPORTION_FLG as proportionFlg,
		(select
		code_name from T_CODE_DICTIONARY where code_type='PROPORTION_FLG'
		and
		CODE_VALUE_STANDARD_NUM=B.PROPORTION_FLG) as proportionFlgName
		FROM
		U_BASE_INST A
		INNER JOIN
		VMS_OUTPUT_OUT_INFO B
		ON A.TAXPERNUMBER =
		B.TAXPAYER_ID
		where B.TAXPAYER_ID=#inst_id#
	</select>
	<update id="updateParamInSurtaxInfoVatOutProportion"
		parameterClass="java.util.Map">
		update VMS_OUTPUT_OUT_INFO set
		VAT_OUT_PROPORTION=#vat_out_proportion#
		where taxpayer_id=#taxpayer_id#
	</update>
	<!-- jobell 参数管理：进项税转出比例/金额管理 end -->

	<!-- jobell 参数配置_税控盘监控信息管理 begin -->
	<select id="findTaxDiskMonitorListInfo" parameterClass="java.util.Map"
		resultClass="taxDiskMonitorInfo">
		select
		vdmi.TAX_DISK_NO as taxDiskNo,
		vdmi.FAPIAO_TYPE as fapiaoType,
		vdmi.BILL_END_DATE_S as
		billEndDateS,
		vdmi.DATA_REP_STR_DATE_S as
		dataRepStrDateS,
		vdmi.DATA_REP_END_DATE_S as dataRepEndDateS,
		vdmi.BILL_LIMIT_AMT_S as billLimitAmtS,
		vdmi.BILL_LIMIT_AMT_P_S as
		billLimitAmtPS,
		vdmi.BILL_LIMIT_AMT_N_S as
		billLimitAmtNS,
		vdmi.N_BILL_FLG_S as nBillFlgS,
		vdmi.N_BIL_DAY_S as
		nBilDayS,
		vdmi.NEW_REPORT_DATE_S as newReportDateS,
		vdmi.RESIDUAL_CAPACITY_S as
		residualCapacityS,
		vdmi.UPLOAD_DEADLINE_S as uploadDeadlineS,
		vdmi.LIMIT_FUNCTION_S as limitFunctionS,
		vdmi.OFF_LINE_DAY_S as
		offLineDayS,
		vdmi.OFF_LINE_BILL_S as
		offLineBillS,
		vdmi.OFF_LINE_AMT_P_S
		as offLineAmtPS,
		vdmi.OFF_LINE_AMT_N_S as offLineAmtNS,
		vdmi.OFF_LINE_OTS_S as
		offLineOtsS
		from VMS_disk_Mon_info vdmi
		,VMS_Tax_disk_info utdi
		where
		vdmi.TAX_DISK_NO=utdi.TAX_DISK_NO
		and
		utdi.TAXPAYER_NO in (select
		TAXPERNUMBER from u_base_inst where
		1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				inst_id in
				<iterate open="(" close=")" conjunction="," property="auth_inst_ids">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>

		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				inst_id= #inst_id#
			</isNotEmpty>
		</dynamic>
		)
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_no">
				utdi.TAXPAYER_NO=#taxpayer_no#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findTaxDiskMonitorListInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_disk_Mon_info vdmi ,VMS_Tax_disk_info utdi
		where vdmi.TAX_DISK_NO=utdi.TAX_DISK_NO
		and utdi.TAXPAYER_NO in (select
		TAXPERNUMBER from u_base_inst where
		1=1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				inst_id in
				<iterate open="(" close=")" conjunction="," property="auth_inst_ids">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				inst_id= #inst_id#
			</isNotEmpty>
		</dynamic>
		)
		<dynamic>
			<isNotEmpty prepend="and" property="taxpayer_no">
				utdi.TAXPAYER_NO=#taxpayer_no#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!--oracle版本  -->
	<!-- <insert id="saveVmsDiskMonInfo" parameterClass="java.util.Map">
		insert into
		VMS_DISK_MON_INFO (TAX_DISK_NO, FAPIAO_TYPE,
		BILL_END_DATE_S,
		DATA_REP_STR_DATE_S,
		DATA_REP_END_DATE_S,BILL_LIMIT_AMT_S,
		BILL_LIMIT_AMT_P_S,BILL_LIMIT_AMT_N_S,N_BILL_FLG_S,N_BIL_DAY_S,NEW_REPORT_DATE_S,RESIDUAL_CAPACITY_S,UPLOAD_DEADLINE_S,LIMIT_FUNCTION_S,
		OFF_LINE_DAY_S,OFF_LINE_BILL_S,OFF_LINE_AMT_P_S,OFF_LINE_AMT_N_S,OFF_LINE_OTS_S)
		values (#info.taxDiskNo#, #info.fapiaoType#,
		to_char(to_date(#info.billEndDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		to_char(to_date(#info.dataRepStrDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		to_char(to_date(#info.dataRepEndDateS#,'yyyy-mm-dd'),'yyyymmdd'),#info.billLimitAmtS#,#info.billLimitAmtPS#,#info.billLimitAmtNS#,#info.nBillFlgS#,#info.nBilDayS#,to_char(to_date(#info.newReportDateS#,'yyyy-mm-dd'),'yyyymmdd'),#info.residualCapacityS#,to_char(to_date(#info.uploadDeadlineS#,'yyyy-mm-dd'),'yyyymmdd'),#info.limitFunctionS#,#info.offLineDayS#,#info.offLineBillS#,#info.offLineAmtPS#,#info.offLineAmtNS#,#info.offLineOtsS#)
	</insert> -->
	
	<!--mysql版本  -->
	<insert id="saveVmsDiskMonInfo" parameterClass="java.util.Map">
		insert into
		VMS_DISK_MON_INFO (TAX_DISK_NO, FAPIAO_TYPE,
		BILL_END_DATE_S,
		DATA_REP_STR_DATE_S,
		DATA_REP_END_DATE_S,BILL_LIMIT_AMT_S,
		BILL_LIMIT_AMT_P_S,BILL_LIMIT_AMT_N_S,N_BILL_FLG_S,N_BIL_DAY_S,NEW_REPORT_DATE_S,RESIDUAL_CAPACITY_S,UPLOAD_DEADLINE_S,LIMIT_FUNCTION_S,
		OFF_LINE_DAY_S,OFF_LINE_BILL_S,OFF_LINE_AMT_P_S,OFF_LINE_AMT_N_S,OFF_LINE_OTS_S)
		values (#info.taxDiskNo#, #info.fapiaoType#,
		date_format(str_to_date(#info.billEndDateS#,'%Y-%m-%d'),'%Y%m%d'),
		date_format(str_to_date(#info.dataRepStrDateS#,'%Y-%m-%d'),'%Y%m%d'),
		date_format(str_to_date(#info.dataRepEndDateS#,''%Y-%m-%d'),'%Y%m%d'),#info.billLimitAmtS#,#info.billLimitAmtPS#,#info.billLimitAmtNS#,#info.nBillFlgS#,#info.nBilDayS#,
		date_format(str_to_date(#info.newReportDateS#,'%Y-%m-%d'),'%Y%m%d'),#info.residualCapacityS#,
		date_format(str_to_date(#info.uploadDeadlineS#,'%Y-%m-%d'),'%Y%m%d'),#info.limitFunctionS#,#info.offLineDayS#,#info.offLineBillS#,#info.offLineAmtPS#,#info.offLineAmtNS#,#info.offLineOtsS#)
	</insert>
	
	
	<!--oracle版本  -->
	<!-- <update id="updateVmsDiskMonInfo" parameterClass="java.util.Map">
		update
		VMS_DISK_MON_INFO set
		BILL_END_DATE_S =
		to_char(to_date(#info.billEndDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		DATA_REP_STR_DATE_S =
		to_char(to_date(#info.dataRepStrDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		DATA_REP_END_DATE_S =
		to_char(to_date(#info.dataRepEndDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		BILL_LIMIT_AMT_S = #info.billLimitAmtS#,
		BILL_LIMIT_AMT_P_S =
		#info.billLimitAmtPS#,
		BILL_LIMIT_AMT_N_S = #info.billLimitAmtNS#,
		N_BILL_FLG_S = #info.nBillFlgS#,
		N_BIL_DAY_S = #info.nBilDayS#,
		NEW_REPORT_DATE_S =
		to_char(to_date(#info.newReportDateS#,'yyyy-mm-dd'),'yyyymmdd'),
		RESIDUAL_CAPACITY_S = #info.residualCapacityS#,
		UPLOAD_DEADLINE_S =
		#info.uploadDeadlineS#,
		LIMIT_FUNCTION_S = #info.limitFunctionS#,
		OFF_LINE_DAY_S =
		#info.offLineDayS#,
		OFF_LINE_BILL_S =
		#info.offLineBillS#,
		OFF_LINE_AMT_P_S = #info.offLineAmtPS#,
		OFF_LINE_AMT_N_S =
		#info.offLineAmtNS#,
		OFF_LINE_OTS_S =
		#info.offLineOtsS#
		where
		TAX_DISK_NO = #info.taxDiskNo#
		and FAPIAO_TYPE =
		#info.fapiaoType#
	</update> -->
	
	<!--mysql版本  -->
	<update id="updateVmsDiskMonInfo" parameterClass="java.util.Map">
		update
		VMS_DISK_MON_INFO set
		BILL_END_DATE_S =
		date_format(str_to_date(#info.billEndDateS#,'%Y-%m-%d'),'%Y%m%d'),
		DATA_REP_STR_DATE_S =
		date_format(str_to_date(#info.dataRepStrDateS#,'%Y-%m-%d'),'%Y%m%d'),
		DATA_REP_END_DATE_S =
		date_format(str_to_date(#info.dataRepEndDateS#,'%Y-%m-%d'),'%Y%m%d'),
		BILL_LIMIT_AMT_S = #info.billLimitAmtS#,
		BILL_LIMIT_AMT_P_S =
		#info.billLimitAmtPS#,
		BILL_LIMIT_AMT_N_S = #info.billLimitAmtNS#,
		N_BILL_FLG_S = #info.nBillFlgS#,
		N_BIL_DAY_S = #info.nBilDayS#,
		NEW_REPORT_DATE_S =
		date_format(str_to_date(#info.newReportDateS#,'%Y-%m-%d'),'%Y%m%d'),
		RESIDUAL_CAPACITY_S = #info.residualCapacityS#,
		UPLOAD_DEADLINE_S =
		#info.uploadDeadlineS#,
		LIMIT_FUNCTION_S = #info.limitFunctionS#,
		OFF_LINE_DAY_S =
		#info.offLineDayS#,
		OFF_LINE_BILL_S =
		#info.offLineBillS#,
		OFF_LINE_AMT_P_S = #info.offLineAmtPS#,
		OFF_LINE_AMT_N_S =
		#info.offLineAmtNS#,
		OFF_LINE_OTS_S =
		#info.offLineOtsS#
		where
		TAX_DISK_NO = #info.taxDiskNo#
		and FAPIAO_TYPE =
		#info.fapiaoType#
	</update>
	
	
	
	<delete id="deleteVmsDiskMonInfo" parameterClass="java.util.Map">
		delete from
		VMS_DISK_MON_INFO t where TAX_DISK_NO=#tax_disk_no# and
		FAPIAO_TYPE=#fapiao_type#
	</delete>
	
	
	<!--oracle版本  -->
	<!-- <select id="findTaxDiskMonitorItemInfo" parameterClass="java.util.Map"
		resultClass="taxDiskMonitorInfo">
		select
		vdmi.TAX_DISK_NO as taxDiskNo,
		vdmi.FAPIAO_TYPE as
		fapiaoType,
		to_char(to_date(vdmi.BILL_END_DATE_S,'yyyymmdd'),'yyyy-mm-dd') as
		billEndDateS,
		to_char(to_date(vdmi.DATA_REP_STR_DATE_S,'yyyymmdd'),'yyyy-mm-dd')
		as
		dataRepStrDateS,
		to_char(to_date(vdmi.DATA_REP_END_DATE_S,'yyyymmdd'),'yyyy-mm-dd')
		as
		dataRepEndDateS,
		vdmi.BILL_LIMIT_AMT_S as billLimitAmtS,
		vdmi.BILL_LIMIT_AMT_P_S as billLimitAmtPS,
		vdmi.BILL_LIMIT_AMT_N_S as
		billLimitAmtNS,
		vdmi.N_BILL_FLG_S as nBillFlgS,
		vdmi.N_BIL_DAY_S as
		nBilDayS,
		to_char(to_date(vdmi.NEW_REPORT_DATE_S,'yyyy-mm-dd'),'yyyy-mm-dd') as
		newReportDateS,
		vdmi.RESIDUAL_CAPACITY_S as residualCapacityS,
		vdmi.UPLOAD_DEADLINE_S as
		uploadDeadlineS,
		vdmi.LIMIT_FUNCTION_S as
		limitFunctionS,
		vdmi.OFF_LINE_DAY_S as offLineDayS,
		vdmi.OFF_LINE_BILL_S as
		offLineBillS,
		vdmi.OFF_LINE_AMT_P_S as
		offLineAmtPS,
		vdmi.OFF_LINE_AMT_N_S as offLineAmtNS,
		vdmi.OFF_LINE_OTS_S as
		offLineOtsS
		from VMS_disk_Mon_info vdmi
		where
		vdmi.TAX_DISK_NO=#tax_disk_no# and vdmi.FAPIAO_TYPE=#fapiao_type#
	</select> -->
	
	<!--mysql版本  -->
	<select id="findTaxDiskMonitorItemInfo" parameterClass="java.util.Map"
		resultClass="taxDiskMonitorInfo">
		select
		vdmi.TAX_DISK_NO as taxDiskNo,
		vdmi.FAPIAO_TYPE as
		fapiaoType,
		date_format(str_to_date(vdmi.BILL_END_DATE_S,'%Y%m%d'),'%Y-%m-%d') as
		billEndDateS,
		date_format(str_to_date(vdmi.DATA_REP_STR_DATE_S,'%Y%m%d'),'%Y-%m-%d')
		as
		dataRepStrDateS,
		date_format(str_to_date(vdmi.DATA_REP_END_DATE_S,'%Y%m%d'),'%Y-%m-%d')
		as
		dataRepEndDateS,
		vdmi.BILL_LIMIT_AMT_S as billLimitAmtS,
		vdmi.BILL_LIMIT_AMT_P_S as billLimitAmtPS,
		vdmi.BILL_LIMIT_AMT_N_S as
		billLimitAmtNS,
		vdmi.N_BILL_FLG_S as nBillFlgS,
		vdmi.N_BIL_DAY_S as
		nBilDayS,
		date_format(str_to_date(vdmi.NEW_REPORT_DATE_S,'%Y-%m-%d'),'%Y-%m-%d') as
		newReportDateS,
		vdmi.RESIDUAL_CAPACITY_S as residualCapacityS,
		vdmi.UPLOAD_DEADLINE_S as
		uploadDeadlineS,
		vdmi.LIMIT_FUNCTION_S as
		limitFunctionS,
		vdmi.OFF_LINE_DAY_S as offLineDayS,
		vdmi.OFF_LINE_BILL_S as
		offLineBillS,
		vdmi.OFF_LINE_AMT_P_S as
		offLineAmtPS,
		vdmi.OFF_LINE_AMT_N_S as offLineAmtNS,
		vdmi.OFF_LINE_OTS_S as
		offLineOtsS
		from VMS_disk_Mon_info vdmi
		where
		vdmi.TAX_DISK_NO=#tax_disk_no# and vdmi.FAPIAO_TYPE=#fapiao_type#
	</select>
	
	
	
	<!-- jobell 参数配置_税控盘监控信息管理 end -->

	<select id="getMinBillLimitAmtFromTaxDisk" parameterClass="java.util.Map"
		resultClass="java.math.BigDecimal">
		select min(BILL_LIMIT_AMT_S) from VMS_DISK_MON_INFO
	</select>

	<!-- begin 数据导入 begin -->
	<!-- 税目信息表 -->
	<typeAlias alias="vmsTransInfo" type="com.cjit.vms.trans.model.VmsTransInfo" />

	<!-- dcg 汇率管理开始 -->
	<typeAlias alias="exchangeRate" type="com.cjit.vms.trans.model.ExchangeRate" />
	<sql id="exchangeRate_fragment">
		<dynamic>
			<isNotEqual prepend="and" property="exchangeRate.exchangeRateId"
				compareValue="0"> 
				<![CDATA[ er.EXCHANGE_RATE_ID = #exchangeRate.exchangeRateId# ]]>
			</isNotEqual>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRate.dataDt">
				er.DATA_DT =
				#exchangeRate.dataDt#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRate.basicCcy">
				er.BASIC_CCY like
				'%$exchangeRate.basicCcy$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRate.ccyDate">
				er.CCY_DATE =
				#exchangeRate.ccyDate#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRate.forwardCcy">
				er.FORWARD_CCY like
				'%$exchangeRate.forwardCcy$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRate.convertTyp">
				er.CONVERT_TYP =
				#exchangeRate.convertTyp#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="editExchangeRateId">
				<![CDATA[ er.EXCHANGE_RATE_ID != #editExchangeRateId# ]]>
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="findExchangeRate" parameterClass="java.util.Map"
		resultClass="exchangeRate">
		select EXCHANGE_RATE_ID as exchangeRateId,
		DATA_DT as dataDt,
		BASIC_CCY
		as basicCcy,
		CCY_DATE as ccyDate,
		FORWARD_CCY as forwardCcy,
		CONVERT_TYP
		as convertTyp,
		CCY_RATE as ccyRate
		from U_EXCHANGE_RATE er
		where 1 = 1
		<include refid="exchangeRate_fragment" />
		order by er.EXCHANGE_RATE_ID desc
	</select>
	<select id="findExchangeRateCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from U_EXCHANGE_RATE er
		where 1 = 1
		<include refid="exchangeRate_fragment" />
		order by er.EXCHANGE_RATE_ID
	</select>

	<insert id="insertExchangeRate" parameterClass="java.util.Map">
		<selectKey resultClass="int" keyProperty="exchangeRateId">
			select
			EXCHANGE_RATE_SEQUENCE.nextval as exchangeRateId from dual
		</selectKey>
		insert into U_EXCHANGE_RATE
		(EXCHANGE_RATE_ID,
		DATA_DT,
		BASIC_CCY,
		CCY_DATE,
		FORWARD_CCY,
		CONVERT_TYP,
		CCY_RATE)
		values
		(#exchangeRateId#,
		#exchangeRate.dataDt#,
		#exchangeRate.basicCcy#,
		#exchangeRate.ccyDate#,
		#exchangeRate.forwardCcy#,
		#exchangeRate.convertTyp#,
		#exchangeRate.ccyRate#)
	</insert>

	<update id="updateExchangeRate" parameterClass="java.util.Map">
		update
		U_EXCHANGE_RATE
		set DATA_DT = #exchangeRate.dataDt#,
		BASIC_CCY =
		#exchangeRate.basicCcy#,
		CCY_DATE = #exchangeRate.ccyDate#,
		FORWARD_CCY
		= #exchangeRate.forwardCcy#,
		CONVERT_TYP = #exchangeRate.convertTyp#,
		CCY_RATE = #exchangeRate.ccyRate#
		where EXCHANGE_RATE_ID =
		#exchangeRate.exchangeRateId#
	</update>

	<delete id="deleteExchangeRate" parameterClass="java.util.Map">
		delete from U_EXCHANGE_RATE where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRateId">
				EXCHANGE_RATE_ID =
				#exchangeRateId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="exchangeRateIds">
				EXCHANGE_RATE_ID in
				<iterate property="exchangeRateIds" open="(" close=")"
					conjunction=",">
					#exchangeRateIds[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
	</delete>


	<typeAlias alias="currency" type="com.cjit.vms.trans.model.Currency" />
	<select id="findAllCurrency" resultClass="currency">
		select CURRENCY as
		currency,
		CURRENCY_SYMBOL as currencySymbol,
		CURRENCY_NAME as
		currencyName,
		CURRENCY_SCODE as currencySCode
		from VMS_CURRENCY
		order by
		CURRENCY
	</select>
	<!-- dcg 汇率管理开始 -->
	<!-- dcg 发票开具添加开始 -->
	<update id="updatebillInfoIssueResult" parameterClass="java.util.Map">
		update
		VMS_BILL_INFO
		set BILL_CODE = #billInfo.billCode#,
		BILL_NO =
		#billInfo.billNo#,
		BILL_DATE = #billInfo.billDate#,
		DRAWER =
		#billInfo.drawer#,
		TAX_DISK_NO = #billInfo.taxDiskNo#,
		MACHINE_NO =
		#billInfo.machineNo#,
		DATASTATUS = #billInfo.dataStatus#
		where BILL_ID =
		#billInfo.billId#
	</update>

	<typeAlias alias="paperInvoiceUseDetail"
		type="com.cjit.vms.trans.model.storage.PaperInvoiceUseDetail" />
	<select id="findInvalidPaperInvoice" parameterClass="java.util.Map"
		resultClass="paperInvoiceUseDetail">
		select PAPER_INVOICE_ID as paperInvoiceId,
		PAPER_INVOICE_STOCK_ID as
		paperInvoiceStockId,
		PAPER_INVOICE_DISTRIBUTE_ID as
		paperInvoiceDistributeId,
		INVOICE_CODE as invoiceCode,
		INVOICE_NO as
		invoiceNo,
		RECEIVE_STATUS as receiveStatus,
		INVOICE_STATUS as
		invoiceStatus,
		INVALID_REASON as invalidReason,
		RECEIVE_INST_ID as
		receiveInstId,
		RECEIVE_USER_ID as receiveUserId,
		CHANGE_TIME as
		changeTime
		from VMS_PAPER_INVOICE_USE_DETAIL t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="paperInvoiceUseDetail.invoiceStatus">
				INVOICE_STATUS =
				#paperInvoiceUseDetail.invoiceStatus#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findInvalidPaperInvoiceCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) countNum
		from VMS_PAPER_INVOICE_USE_DETAIL t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="paperInvoiceUseDetail.invoiceStatus">
				INVOICE_STATUS =
				#paperInvoiceUseDetail.invoiceStatus#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findInvalidEmptyPaperInvoiceCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from vms_paper_invoice_use_detail dt
		left join
		vms_paper_invoice_stock t on dt.paper_invoice_stock_id =
		t.paper_invoice_stock_id
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="dataStatus">
				dt.invoice_status=#dataStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiaoType">
				t.invoice_type=#fapiaoType#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				t.inst_id=#instId#
			</isNotEmpty>
		</dynamic>
	</select>

	<update id="updatePaperInvoiceStatus" parameterClass="java.util.Map">
		update
		VMS_PAPER_INVOICE_USE_DETAIL
		set INVOICE_STATUS =
		#paperInvoiceUseDetail.invoiceStatus#
		where
		INVOICE_CODE =
		#paperInvoiceUseDetail.invoiceCode#
		and INVOICE_NO =
		#paperInvoiceUseDetail.invoiceNo#
	</update>

	<select id="findRegisteredInfo" parameterClass="java.util.Map"
		resultClass="diskRegInfo">
		select TAX_DISK_NO as taxDiskNo,
		TAXPAYER_NO as taxpayerNo,
		REGISTERED_INFO as registeredInfo
		from VMS_DISK_REG_INFO t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="diskRegInfo.taxDiskNo">
				TAX_DISK_NO =
				#diskRegInfo.taxDiskNo#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findRegisteredInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) as countNum
		from VMS_DISK_REG_INFO t
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="diskRegInfo.taxDiskNo">
				TAX_DISK_NO =
				#diskRegInfo.taxDiskNo#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- dcg 发票开具添加开始 -->

	<select id="findInvoiceDeductionListCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from Vms_input_invoice_info
		where INSTCODE in
		($auth_inst_ids$)
		<dynamic>
			<isNotEmpty prepend="and" property="datastatus">
				DATASTATUS =
				#datastatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<!-- <isNotEmpty prepend="and" property="bill_date">
				to_char(to_date(BILL_DATE,'yyyy-mm-dd'),'yyyy-mm-dd') = #bill_date#
			</isNotEmpty> -->
			
			<isNotEmpty prepend="and" property="bill_date">
				date_format(str_to_date(BILL_DATE,'%Y-%m-%d'),'%Y-%m-%d') = #bill_date#
			</isNotEmpty>
			
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="vendor_name">
				VENDOR_NAME like
				'%$vendor_name$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bill_code">
				BILL_CODE= #bill_code#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="bill_no">
				BILL_NO= #bill_no#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inst_id">
				INSTCODE= #inst_id#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="fapiao_type">
				FAPIAO_TYPE=#fapiao_type#
			</isNotEmpty>
		</dynamic>
	</select>

	<!-- jobell 进项税-抵扣处理 end -->
	<update id="updateBillInfoById" parameterClass="java.util.Map">
		update VMS_BILL_INFO set DATASTATUS = '$dataStatus$' where bill_id in
		<iterate close=")" open="(" conjunction="," property="billId">
			'$billId[]$'
		</iterate>
		<!-- AND PRINT_DATE = TO_CHAR(SYSDATE,'YYYY-MM-DD') -->
		
		AND PRINT_DATE = date_format(SYSDATE(),'%Y-%m-%d')
		
	</update>

	<!-- 通过税控盘查询证书口令和税控盘口令 -->
	<select id="findTaxDiskInfoByTaxDiskNo" parameterClass="java.util.Map"
		resultClass="taxDiskInfo">
		select TAX_DISK_NO as taxDiskNo,
		BILL_MACHINE_NO as
		billMachineNo,
		TAX_DISK_VERSION as taxDiskVersion,
		TAX_DISK_DATE as
		taxDiskDate,
		TAXPAYER_NO as taxpayerNo,
		TAXPAYER_NAM as taxpayerNam,
		TAX_DISK_PSW as taxDiskPsw,
		TAX_CERT_PSW as taxCertPsw,
		TAX_BUREAU_NUM
		as taxBureauNum,
		TAX_BUREAU_NAM as taxBureauNam,
		DISK_BILL_TYPE as
		diskBillType,
		DISK_CUST_TYPE as diskCustType,
		RETAIN_INFO as retainInfo,
		ENABLE_DT as enableDt
		from VMS_TAX_DISK_INFO
		where TAX_DISK_NO =
		#taxDiskInfo.taxDiskNo#
	</select>

	<insert id="saveVmsInputInvoiceItem" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="bill_item_id">
			SELECT
			INPUT_INVOICE_BILL_ITEM_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into VMS_INPUT_INVOICE_ITEM (
		BILL_ID,
		BILL_ITEM_ID,
		GOODS_NAME,
		SPECANDMODEL,
		GOODS_UNIT,
		GOODS_NO,
		GOODS_PRICE,
		AMT,
		TAX_RATE,
		TAX_AMT,
		ROW_NATURE,
		DIS_ITEM_ID,
		DISCOUNT_RATE)
		values(
		#info.billId#,
		#bill_item_id#,
		#info.goodsName#,
		#info.specandmodel#,
		#info.goodsUnit#,
		#info.goodsNo#,
		#info.goodsPrice#,
		#info.amt#,
		#info.taxRate#,
		#info.taxAmt#,
		#info.rowNature#,
		#info.disItemId#,
		#info.discountRate#)
	</insert>
	<!-- 查询销项导入 价税信息 -->
	<typeAlias alias="impTransResultInfo"
		type="com.cjit.vms.trans.model.ImpTransResultInfo" />
	<select id="findImpTransResultListInfo" parameterClass="java.util.Map"
		resultClass="impTransResultInfo">
		select row_number() over(partition by tb.imp_time, tb.batch_id order
		by tb.imp_time desc, tb.batch_id) rowno,
		to_char(tb.imp_time,'yyyy-MM-dd') as imptime,
		tb.batch_id as batchId,
		'SDYW' as terminal,
		ti.trans_id as transId,
		ti.customer_id as
		customerId,
		Replace(ti.transaction_date, '/','-') as transactionDate,
		ti.amt_cny as amtCny,
		t.tax_amt_cny as taxAmtCny,
		t.income_cny as
		incomeCny,
		t.vat_rate_code as vatRateCode,
		t.tax_rate as taxRate,
		ti.product_ie_type as productIeType,
		ti.ie_item as ieItem,
		t.item_code
		as itemCode
		from (select
		b.*, row_number() over(order by imp_time desc)
		timeIndex
		from
		VMS_TRANS_BATCH b where b.status = '2'
		<dynamic>
			<!-- <isNotEmpty prepend="and" property="impTime">
				to_char(imp_time,'yyyy-MM-dd') = #impTime#
			</isNotEmpty> -->
			
			<isNotEmpty prepend="and" property="impTime">
				date_format(imp_time,'%Y-%m-%d') = #impTime#
			</isNotEmpty>
			
		</dynamic>

		) tb
		left join VMS_TRANS_INFO_IMP_DATA ti
		on tb.batch_id = ti.batch_id


		left join vms_trans_info t
		on t.trans_id = ti.trans_id
		where 1 = 1
		and
		tb.timeIndex = '1'

	</select>
	<select id="findImpTransResultListInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(1)
		from (
		select 1
		from (select b.*, row_number() over(order
		by imp_time desc) timeIndex
		from VMS_TRANS_BATCH b where b.status = '2'
		<dynamic>
			<!-- <isNotEmpty prepend="and" property="impTime">
				to_char(imp_time,'yyyy-MM-dd') = #impTime#
			</isNotEmpty> -->
			
			<isNotEmpty prepend="and" property="impTime">
				date_format(imp_time,'%Y-%m-%d') = #impTime#
			</isNotEmpty>
			
			
		</dynamic>

		) tb
		left join VMS_TRANS_INFO_IMP_DATA ti
		on tb.batch_id = ti.batch_id


		left join vms_trans_info t
		on t.trans_id = ti.trans_id
		where 1 = 1
		and
		tb.timeIndex = '1'
		)
	</select>
	<typeAlias alias="baseInst" type="com.cjit.vms.trans.model.UBaseInst" />
	<select id="findBaseInstByTaxNoAndInstCode" parameterClass="java.util.Map"
		resultClass="baseInst">
		select INST_ID as instId,
		INST_NAME as instName,
		INST_SMP_NAME as
		instSmpName,
		PARENT_INST_ID as parentInstId,
		INST_LAYER as instLayer,
		ADDRESS as address,
		ZIP as zip,
		TEL as tel,
		FAX
		as fax,
		IS_BUSSINESS as
		isBussiness,
		ORDER_NUM as orderNum,
		DESCRIPTION
		as description,
		START_DATE as startDate,
		END_DATE as endDate,
		CREATE_TIME as createTime,
		ENABLED as enabled,
		INST_REGION as
		instRegion,
		EMAIL as email,
		INST_PATH
		as instPath,
		INST_LEVEL as
		instLevel,
		IS_HEAD as isHead,
		TAXPERNAME as
		taxperName,
		TAXPERNUMBER as
		taxperNumber,
		ACCOUNT as account,
		TAXADDRESS
		as taxAddress,
		TAXTEL as
		taxTel,
		TAXBANK as taxBank
		from U_BASE_INST t
		where 1=1

		<dynamic>
			<isNotEmpty prepend="and" property="instCode">
				t.INST_ID =#instCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				t.TAXPERNUMBER =
				#taxNo#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findBaseInstByTaxNoAndInstCodeCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from U_BASE_INST t
		where t.INST_ID =
		#instCode#
		and t.TAXPERNUMBER = #taxNo#
	</select>

	<select id="findBusinessInfoList" parameterClass="java.util.Map"
		resultClass="businessInfo">
		select
		BUSINESS_ID as businessId,
		BUSINESS_CODE as businessCode,
		BUSINESS_CNAME as
		businessCName,
		BUSINESS_NOTE as businessNote
		from
		VMS_BUSINESS_TB t
		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessId"> t.BUSINESS_ID =
				#business.businessId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCode"> t.BUSINESS_CODE like
				'%$business.businessCode$%' </isNotEmpty>
		</dynamic>

		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCName"> t.BUSINESS_CNAME like
				'%$business.businessCName$%' </isNotEmpty>
		</dynamic>
		order by BUSINESS_CODE asc
	</select>

	<select id="findBusinessInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1) from (
		select
		BUSINESS_ID as businessId,
		BUSINESS_CODE as
		businessCode,
		BUSINESS_CNAME as
		businessCName,
		BUSINESS_NOTE as
		businessNote
		from VMS_BUSINESS_TB t
		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessId"> t.BUSINESS_ID =
				#business.businessId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCode"> t.BUSINESS_CODE like
				'%$business.businessCode$%' </isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCName"> t.BUSINESS_CNAME like
				'%$business.businessCName$%' </isNotEmpty>
		</dynamic>
		)
	</select>

	<select id="findBusinessInfo" parameterClass="java.util.Map"
		resultClass="businessInfo">
		select
		BUSINESS_ID as businessId,
		BUSINESS_CODE as businessCode,
		BUSINESS_CNAME as
		businessCName,
		BUSINESS_NOTE as businessNote
		from
		VMS_BUSINESS_TB t
		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessId"> t.BUSINESS_ID =
				#business.businessId#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCode"> t.BUSINESS_CODE =
				#business.businessCode#
			</isNotEmpty>
		</dynamic>

		<dynamic prepend="and">
			<isNotEmpty prepend="" property="business.businessCName"> t.BUSINESS_CNAME like
				'%$business.businessCName$%' </isNotEmpty>
		</dynamic>
	</select>


	<insert id="insertBusinessInfo" parameterClass="java.util.Map">
		<selectKey resultClass="int" keyProperty="businessInfoId">
			select
			business_tb_seq.nextval as businessInfoId from dual
		</selectKey>
		insert into VMS_BUSINESS_TB
		(BUSINESS_ID,
		BUSINESS_CODE,
		BUSINESS_CNAME,
		BUSINESS_NOTE
		)
		values
		(
		#businessInfoId#,
		#business.businessCode#,
		#business.businessCName#,
		#business.businessNote#
		)
	</insert>

	<update id="updateBusinessInfo" parameterClass="java.util.Map">
		update
		VMS_BUSINESS_TB
		set
		BUSINESS_CNAME = #business.businessCName#,
		BUSINESS_NOTE =
		#business.businessNote#
		where BUSINESS_ID =
		#business.businessId#

	</update>

	<delete id="deleteBusinessInfo" parameterClass="java.util.Map">
		delete from
		VMS_BUSINESS_TB where BUSINESS_ID = #businessId#
	</delete>


	<select id="findAccEntryList" parameterClass="java.util.Map"
		resultClass="accEntry">

		select ACC_ENTRY_ID as accEntryId,
		e.gl_code as gl_code,
		IS_REVERSE as
		isReverse,
		case
		UPPER(IS_REVERSE)
		when 'N' then '否'
		when 'Y' then '是'
		else
		IS_REVERSE
		end
		as isReverseName,
		e.CURRENCY as currency,
		c.currency_name
		as
		currencyName,
		CD_FLAG as cdFlag,
		case UPPER(CD_FLAG)
		when 'D' then '借方'
		when 'C' then '贷方'
		else CD_FLAG
		end as cdFlagName,
		e.ACC_TITLE_CODE as
		accTitleCode,
		t.acc_title_nam as accTitleName,
		TRANS_NUM_TYP as
		transNumTyp,
		case UPPER(TRANS_NUM_TYP )
		when '1' then '价税合计'
		when '2'
		then '收入'
		when '3' then '税额'
		else TRANS_NUM_TYP
		end as transNumTypName

		from VMS_ACC_ENTRY_INFO e
		left join vms_acc_title_info b
		on e.gl_code
		=
		b.acc_title_code
		left join vms_acc_title_info t
		on t.acc_title_code =
		e.acc_title_code
		left join vms_currency c
		on c.currency = e.currency

		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.gl_code"> e.gl_code =
				#accEntry.gl_code#
			</isNotEmpty>
		</dynamic>

		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.currency"> e.CURRENCY =
				#accEntry.currency#
			</isNotEmpty>
		</dynamic>
		order by e.gl_code,e.currency ,e.IS_REVERSE,e.cd_flag desc
	</select>

	<select id="findAccEntryListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1)
		from (

		select ACC_ENTRY_ID as accEntryId,
		e.gl_code as
		gl_code,
		IS_REVERSE as isReverse,
		case UPPER(IS_REVERSE)
		when 'N' then
		'否'
		when
		'Y' then '是'
		else IS_REVERSE
		end as isReverseName,
		e.CURRENCY as
		currency,
		c.currency_name as currencyName,
		CD_FLAG as cdFlag,
		case
		UPPER(CD_FLAG)
		when 'D' then '借方'
		when 'C' then '贷方'
		else CD_FLAG
		end as
		cdFlagName,
		e.ACC_TITLE_CODE as accTitleCode,
		t.acc_title_nam as
		accTitleName,
		TRANS_NUM_TYP as transNumTyp,
		case UPPER(TRANS_NUM_TYP )
		when '1' then '价税合计'
		when '2' then '收入'
		when '3' then '税额'
		else
		TRANS_NUM_TYP
		end as transNumTypName

		from VMS_ACC_ENTRY_INFO e
		left join
		vms_acc_title_info b
		on e.gl_code = b.acc_title_code
		left join
		vms_acc_title_info t
		on t.acc_title_code = e.acc_title_code
		left join
		vms_currency c
		on c.currency = e.currency

		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.gl_code"> e.gl_code =
				#accEntry.gl_code#
			</isNotEmpty>
		</dynamic>

		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.currency"> e.CURRENCY =
				#accEntry.currency#
			</isNotEmpty>
		</dynamic>
		order by e.gl_code,e.currency ,e.IS_REVERSE,e.cd_flag desc

		)
	</select>

	<select id="findAccEntryGroupList" parameterClass="java.util.Map"
		resultClass="accEntry">

		select e.gl_code as gl_code,
		b.acc_title_nam as accTitleName,
		e.CURRENCY as currency,
		c.currency_name as currencyName
		from
		(select
		gl_code, e.CURRENCY as currency
		from VMS_ACC_ENTRY_INFO e
		group by
		e.gl_code, e.CURRENCY
		) e
		left join vms_acc_title_info b
		on
		e.gl_code =
		b.acc_title_code
		left join vms_currency c
		on c.currency
		= e.currency


		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.gl_code"> e.gl_code =
				#accEntry.gl_code#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.accTitleName"> b.acc_title_nam like
				'%$accEntry.accTitleName$%' </isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.currency"> e.CURRENCY =
				#accEntry.currency#
			</isNotEmpty>
		</dynamic>
		order by e.gl_code,e.CURRENCY
	</select>

	<select id="findAccEntryGroupListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1)
		from (
		select e.gl_code as gl_code,
		b.acc_title_nam as
		accTitleName,
		e.CURRENCY as currency,
		c.currency_name as currencyName
		from
		(select gl_code, e.CURRENCY as currency
		from VMS_ACC_ENTRY_INFO e
		group by e.gl_code, e.CURRENCY
		) e
		left join vms_acc_title_info b
		on
		e.gl_code = b.acc_title_code
		left join vms_currency c
		on c.currency
		=
		e.currency


		where 1 = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.gl_code"> e.gl_code =
				#accEntry.gl_code#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.accTitleName"> b.acc_title_nam like
				'%$accEntry.accTitleName$%' </isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="accEntry.currency"> e.CURRENCY =
				#accEntry.currency#
			</isNotEmpty>
		</dynamic>
		order by e.gl_code,e.CURRENCY
		)
	</select>


	<insert id="insertAccEntry" parameterClass="java.util.Map">
		<selectKey resultClass="int" keyProperty="accEntryId">
			select
			acc_entry_seq.nextval as accEntryId from dual
		</selectKey>

		insert into VMS_ACC_ENTRY_INFO
		(
		ACC_ENTRY_ID
		, gl_code
		, IS_REVERSE
		,
		CURRENCY
		, CD_FLAG
		,
		ACC_TITLE_CODE
		, TRANS_NUM_TYP
		)
		values
		(
		#accEntryId#,
		#accEntry.gl_code#,
		#accEntry.isReverse#,
		#accEntry.currency#,
		#accEntry.cdFlag#,
		#accEntry.accTitleCode#,
		#accEntry.transNumTyp#
		)
	</insert>
	<delete id="deleteAccEntry" parameterClass="java.util.Map">
		delete from
		VMS_ACC_ENTRY_INFO
		where
		gl_code = #gl_code#
		and CURRENCY =
		#currency#
	</delete>

	<!--负数收入 begin -->
	<sql id="negativeIncome_fragment">
		<dynamic>
			<isNotEmpty prepend="and" property="export">
				trans.datastatus = '8'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				trans.Instcode in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="transInfo.instCode">
				trans.instCode =
				#transInfo.instCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerTaxno">
				cus.customer_taxno =
				#transInfo.customerTaxno#
			</isNotEmpty>
			<isEmpty prepend="and" property="transInfo.customerTaxno">
				<isNotEmpty prepend="" property="transInfo.customerName">
					cus.customer_cname like
					'%$transInfo.customerName$%'
				</isNotEmpty>
			</isEmpty>
		</dynamic>
		
		<!--oracle版本 -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="transInfo.billingBeginTime"> 
        		<![CDATA[ to_date(trans.billing_time,'yyyy-mm-dd hh24:mi:ss') >= to_date(#transInfo.billingBeginTime#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billingEndTime"> 
        		<![CDATA[ to_date(trans.billing_time,'yyyy-mm-dd hh24:mi:ss') <= to_date(#transInfo.billingEndTime#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billingBeginTime"> 
        		<![CDATA[ str_to_date(trans.billing_time,'%Y-%m-%d %H:%i:%s') >= str_to_date(#transInfo.billingBeginTime#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billingEndTime"> 
        		<![CDATA[ str_to_date(trans.billing_time,'%Y-%m-%d %H:%i:%s') <= str_to_date(#transInfo.billingEndTime#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.customerId">
				trans.customer_id =
				#transInfo.customerId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transInfo.billingTime">
				trans.billing_time =
				#transInfo.billingTime#
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="findTransInfoForNegativeIncome" parameterClass="java.util.Map"
		resultClass="transInfo">
		select trans.instcode as instCode,
		trans.customer_id as customerId,
		cus.customer_cname as customerName,
		cus.customer_taxno as
		customerTaxno,
		cus.customer_type as customerType,
		sum(trans.income_cny)
		as income,
		sum(trans.tax_amt_cny)
		as taxAmt,
		sum(trans.amt_cny) as amt,
		cus.gho_class as ghoClass,
		trans.billing_time as billingTime
		from
		VMS_TRANS_INFO trans
		left join VMS_CUSTOMER_INFO cus on
		trans.customer_id = cus.customer_id
		where trans.datastatus = '8'
		<include refid="negativeIncome_fragment" />
		group by trans.instcode,
		trans.customer_id,
		cus.customer_cname,
		cus.customer_taxno,
		cus.customer_type,
		cus.gho_class,
		trans.billing_time
		having sum(trans.income_cny) &lt; 0 and
		sum(trans.tax_amt_cny) &lt; 0
		and sum(trans.amt_cny) &lt; 0
	</select>
	<select id="findTransInfoForNegativeIncomeCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from (select trans.instcode as instCode,
		trans.customer_id as customerId,
		cus.customer_cname as customerName,
		cus.customer_taxno as customerTaxno,
		cus.customer_type as customerType,
		sum(trans.income_cny) as income,
		sum(trans.tax_amt_cny) as taxAmt,
		sum(trans.amt_cny) as amt,
		cus.gho_class as ghoClass,
		trans.billing_time as billingTime
		from
		VMS_TRANS_INFO trans
		left join
		VMS_CUSTOMER_INFO cus on
		trans.customer_id = cus.customer_id
		where
		trans.datastatus = '8'
		<include refid="negativeIncome_fragment" />
		group by trans.instcode,
		trans.customer_id,
		cus.customer_cname,
		cus.customer_taxno,
		cus.customer_type,
		cus.gho_class,
		trans.billing_time
		having sum(trans.income_cny) &lt; 0 and
		sum(trans.tax_amt_cny) &lt; 0
		and sum(trans.amt_cny) &lt; 0)

	</select>
	<select id="findTransInfoForNegativeIncomeExport"
		parameterClass="java.util.Map" resultClass="transInfo">
		select trans.trans_date as transDate,
		trans.customer_id as customerId,
		cus.customer_cname as customerName,
		cus.customer_type as customerType,
		trans.trans_type as transType,
		bus.business_cname as
		transTypeName,
		trans.amt_cny as amt,
		trans.tax_rate as taxRate,
		trans.tax_amt_cny as
		taxAmt,
		trans.income_cny as income,
		cus.gho_class as ghoClass,
		trans.orig_cap_workstation as origCapWorkstation,
		trans.associate_account_no as associateAccountNo,
		trans.billing_time as
		billingTime,
		trans.datastatus
		from VMS_TRANS_INFO trans
		left join
		VMS_CUSTOMER_INFO
		cus on trans.customer_id = cus.customer_id
		left join
		VMS_BUSINESS_TB
		bus on trans.trans_type = bus.business_code
		where 1 = 1
		<include refid="negativeIncome_fragment" />
		and exists
		(select 1
		from VMS_TRANS_INFO trans1
		where trans1.instcode =
		trans.instcode
		and trans1.customer_id = trans.customer_id
		and
		trans1.billing_time = trans.billing_time
		group by trans1.instcode,
		trans1.customer_id, cus.customer_type,
		cus.gho_class,
		trans1.billing_time
		having sum(trans1.income_cny) &lt; 0 and
		sum(trans1.tax_amt_cny) &lt; 0 and
		sum(trans1.amt_cny) &lt; 0)
		order by
		trans.customer_id,
		trans.trans_date
	</select>
	<select id="findTransInfoForNegativeIncomeExportCount"
		parameterClass="java.util.Map" resultClass="long">
		select count(*)
		from VMS_TRANS_INFO trans
		left join VMS_CUSTOMER_INFO
		cus on trans.customer_id = cus.customer_id
		left join VMS_TRANS_TYPE bus
		on trans.trans_type = bus.TRANS_TYPE_ID
		where 1 = 1
		<include refid="negativeIncome_fragment" />
	</select>
	<insert id="insertTransNegaInfo" parameterClass="java.util.Map">
		insert into
		VMS_TRANS_NEGA_INFO (trans_id, trans_date, billing_date, match_date)
		select t.trans_id,
		t.trans_date,
		t.billing_time,
		#transInfo.transBeginDate#
		from VMS_TRANS_INFO t
		where t.instcode =
		#transInfo.instCode#
		and t.customer_id = #transInfo.customerId#
		and
		t.billing_time = #transInfo.billingTime#
	</insert>
	<update id="offsetTrans" parameterClass="java.util.Map">
		update VMS_TRANS_INFO
		set datastatus = '9', income_cny = '0'
		where instcode =
		#transInfo.instCode#
		and customer_id = #transInfo.customerId#
		and
		billing_time = #transInfo.billingTime#
	</update>
	<update id="cancelNegativeIncome" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO
		set datastatus = '1', trans_fapiao_flag = 'M'
		where
		instcode =
		#transInfo.instCode#
		and customer_id = #transInfo.customerId#
		and
		billing_time = #transInfo.billingTime#
	</update>
	<!-- 负数收入end -->

	<select id="findDLTJobLog" parameterClass="java.util.Map"
		resultClass="dLTJobLog">
		select
		JOB_LOG_ID as jobLogId ,
		JOB_NAME as jobName ,
		DATA_DATE as dataDate ,
		END_TIME as endTime ,
		RUN_STATUS as runStatus ,
		REMARK as remark
		from VMS_JOB_STATUS
		where
		<!-- to_char(END_TIME,'yyyy-MM-dd') = #runDay# -->
		date_format(END_TIME,'%Y-%m-%d') = #runDay#
		and JOB_NAME = #jobName#
		order by end_time desc,JOB_LOG_ID desc

	</select>

	<select id="getGoodLines" parameterClass="java.util.Map"
		resultClass="goods">
		select v.TAX_NO,v.TRANS_TYPE
		from VMS_GOODS_ITEM_INFO v
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="taxNo">
				TAX_NO = #taxNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="transType">
				TRANS_TYPE in
				($transType$)
			</isNotEmpty>
		</dynamic>

	</select>

	<select id="findCustomerByCode" parameterClass="java.util.Map"
		resultClass="customer">
		select
		t.CUSTOMER_ID as customerID,
		t.CUSTOMER_CNAME as customerCName,
		t.CUSTOMER_TAXNO as customerTaxno,
		t.CUSTOMER_ACCOUNT as
		customerAccount,
		t.CUSTOMER_CBANK as customerCBank,
		t.CUSTOMER_PHONE as
		customerPhone,
		t.CUSTOMER_EMAIL as customerEMail,
		t.CUSTOMER_ADDRESS as
		customerAddress,
		t.TAXPAYER_TYPE as taxPayerType,
		t.Fapiao_TYPE as
		fapiaoType,
		t.Customer_Type as customerType,
		t.Customer_Fapiao_Flag as
		customerFapiaoFlag,
		t.CUSTOMER_NATIONALITY as customerNationality,
		c.COUNTRY_SNAME as countrySName,
		t.DATA_SOURCE as datasSource,
		t.GHO_CLASS as ghoClass,
		t.LINK_NAME as linkName,
		t.LINK_PHONE as
		linkPhone,
		t.LINK_ADDRESS as linkAddress,
		t.CUSTOMER_ZIP_CODE as
		customerZipCode
		from VMS_CUSTOMER_INFO t
		left join
		VMS_COUNTRY c
		on
		t.CUSTOMER_NATIONALITY = c.COUNTRY_KEY
		<dynamic>

			<isNotEmpty prepend="where" property="customer.customerID">
				t.CUSTOMER_ID =
				#customer.customerID#
			</isNotEmpty>
		</dynamic>
	</select>

	<sql id="selectSurtaxAMT_where">
		where 1=1
		<isNotEmpty prepend="and" property="taxPerNumber">
			inst.taxpernumber=#taxPerNumber#
		</isNotEmpty>

		<isNotEmpty prepend="and" property="taxperName">
			inst.taxpername like
			'%$taxperName$%'
		</isNotEmpty>

		<isNotEmpty prepend="and" property="surtaxType">
			s_INFO.Surtax_Type=#surtaxType#
		</isNotEmpty>

		<isNotEmpty prepend="and" property="surtaxRate">
			s_INFO.Surtax_Rate=#surtaxRate#
		</isNotEmpty>
		and s_AMT.INSTCODE in
		<iterate property="auth_inst_ids" conjunction="," open="("
			close=")">
			#auth_inst_ids[].id#
		</iterate>
	</sql>
	<!--机构附加税合计查询Oracle版本 -->
	<!-- <select id="selectSurtaxAMT" parameterClass="java.util.Map" resultClass="surtaxAMT"> 
		select * from ( select rownum as rowindex, s_AMT.INSTCODE, inst.inst_name, 
		s_INFO.Surtax_Type, s_INFO.Surtax_Name, s_INFO.Surtax_Rate, inst.taxpernumber, 
		inst.taxpername, nvl(sum_in_Surtax1_AMT_CNY, 0) as sum_in_Surtax1_AMT_CNY, 
		nvl(sum_in_Surtax2_AMT_CNY, 0) as sum_in_Surtax2_AMT_CNY, nvl(sum_in_Surtax3_AMT_CNY, 
		0) as sum_in_Surtax3_AMT_CNY, nvl(sum_in_Surtax4_AMT_CNY, 0) as sum_in_Surtax4_AMT_CNY, 
		nvl(sum_Surtax1_AMT_CNY, 0) as sum_Surtax1_AMT_CNY, nvl(sum_Surtax2_AMT_CNY, 
		0) as sum_Surtax2_AMT_CNY, nvl(sum_Surtax3_AMT_CNY, 0) as sum_Surtax3_AMT_CNY, 
		nvl(sum_Surtax4_AMT_CNY, 0) as sum_Surtax4_AMT_CNY from (select nvl(BANK_CODE, 
		INSTCODE) as INSTCODE, INPUT_TRANS.sum_in_Surtax1_AMT_CNY, INPUT_TRANS.sum_in_Surtax2_AMT_CNY, 
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY, INPUT_TRANS.sum_in_Surtax4_AMT_CNY, TRANS_INFO.sum_Surtax1_AMT_CNY, 
		TRANS_INFO.sum_Surtax2_AMT_CNY, TRANS_INFO.sum_Surtax3_AMT_CNY, TRANS_INFO.sum_Surtax4_AMT_CNY 
		from (select BANK_CODE, sum(nvl(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY, 
		sum(nvl(Surtax2_AMT_CNY, 0)) sum_in_Surtax2_AMT_CNY, sum(nvl(Surtax3_AMT_CNY, 
		0)) sum_in_Surtax3_AMT_CNY, sum(nvl(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY 
		from VMS_INPUT_TRANS_INFO t <isNotEmpty property="applyPeriod"> where substr(trans_date,0,7) 
		= #applyPeriod# </isNotEmpty> group by BANK_CODE) INPUT_TRANS full join (select 
		INSTCODE, sum(nvl(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY, sum(nvl(Surtax2_AMT_CNY, 
		0)) as sum_Surtax2_AMT_CNY, sum(nvl(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY, 
		sum(nvl(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY from VMS_TRANS_INFO t 
		<isNotEmpty property="applyPeriod"> where substr(trans_date,0,7) = #applyPeriod# 
		</isNotEmpty> group by INSTCODE) TRANS_INFO on INPUT_TRANS.BANK_CODE = TRANS_INFO.INSTCODE) 
		s_AMT left join u_base_inst inst on inst.inst_id = s_AMT.INSTCODE left join 
		vms_surtax_info s_INFO on s_INFO.Taxpayer_Id = inst.taxpernumber <include 
		refid="selectSurtaxAMT_where" /> order by s_AMT.INSTCODE, s_INFO.Surtax_Type 
		<include refid="page_fragment" /> </select> -->



	<!--机构附加税合计查询Mysql版本 -->
	<select id="selectSurtaxAMT" parameterClass="java.util.Map"
		resultClass="surtaxAMT">
		select * from (
		select (@rowNum:=@rowNum+1) as rowindex,
		s_AMT.INSTCODE,
		inst.inst_name,
		s_INFO.Surtax_Type,
		s_INFO.Surtax_Name,
		s_INFO.Surtax_Rate,
		inst.taxpernumber,
		inst.taxpername,
		ifnull(sum_in_Surtax1_AMT_CNY, 0) as sum_in_Surtax1_AMT_CNY,
		ifnull(sum_in_Surtax2_AMT_CNY, 0) as sum_in_Surtax2_AMT_CNY,
		ifnull(sum_in_Surtax3_AMT_CNY, 0) as sum_in_Surtax3_AMT_CNY,
		ifnull(sum_in_Surtax4_AMT_CNY, 0) as sum_in_Surtax4_AMT_CNY,
		ifnull(sum_Surtax1_AMT_CNY, 0) as sum_Surtax1_AMT_CNY,
		ifnull(sum_Surtax2_AMT_CNY, 0) as sum_Surtax2_AMT_CNY,
		ifnull(sum_Surtax3_AMT_CNY, 0) as sum_Surtax3_AMT_CNY,
		ifnull(sum_Surtax4_AMT_CNY, 0) as sum_Surtax4_AMT_CNY
		from (select
		ifnull(BANK_CODE, INSTCODE) as INSTCODE,
		INPUT_TRANS.sum_in_Surtax1_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax2_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax4_AMT_CNY,
		TRANS_INFO.sum_Surtax1_AMT_CNY,
		TRANS_INFO.sum_Surtax2_AMT_CNY,
		TRANS_INFO.sum_Surtax3_AMT_CNY,
		TRANS_INFO.sum_Surtax4_AMT_CNY
		from (select BANK_CODE,
		sum(ifnull(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) sum_in_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) sum_in_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY
		from
		VMS_INPUT_TRANS_INFO t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by BANK_CODE) INPUT_TRANS
		left join (select INSTCODE,
		sum(ifnull(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) as sum_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY
		from
		VMS_TRANS_INFO
		t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by INSTCODE) TRANS_INFO
		on INPUT_TRANS.BANK_CODE =
		TRANS_INFO.INSTCODE

		union

		select
		ifnull(BANK_CODE, INSTCODE) as INSTCODE,
		INPUT_TRANS.sum_in_Surtax1_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax2_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax4_AMT_CNY,
		TRANS_INFO.sum_Surtax1_AMT_CNY,
		TRANS_INFO.sum_Surtax2_AMT_CNY,
		TRANS_INFO.sum_Surtax3_AMT_CNY,
		TRANS_INFO.sum_Surtax4_AMT_CNY
		from (select BANK_CODE,
		sum(ifnull(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) sum_in_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) sum_in_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY
		from
		VMS_INPUT_TRANS_INFO t
		<isNotEmpty property="applyPeriod">
			<!-- where substr(trans_date,0,7) = -->
			where substring(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by BANK_CODE) INPUT_TRANS
		right join (select INSTCODE,
		sum(ifnull(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) as sum_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY
		from
		VMS_TRANS_INFO
		t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by INSTCODE) TRANS_INFO
		on INPUT_TRANS.BANK_CODE =
		TRANS_INFO.INSTCODE

		) s_AMT
		left join u_base_inst inst
		on inst.inst_id =
		s_AMT.INSTCODE
		left
		join vms_surtax_info s_INFO
		on s_INFO.Taxpayer_Id =
		inst.taxpernumber
		<include refid="selectSurtaxAMT_where" />
		order by s_AMT.INSTCODE, s_INFO.Surtax_Type
		<include refid="page_fragment" />
	</select>














	<!--机构附加税合条数计查询 -->
	<!--oracle版本  -->
	<!-- <select id="selectSurtaxAMTCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1) from(
		select s_AMT.INSTCODE,
		s_AMT.INSTCODE,
		inst.inst_name,
		s_INFO.Surtax_Type,
		s_INFO.Surtax_Name,
		s_INFO.Surtax_Rate,
		inst.taxpernumber,
		inst.taxpername,
		
		
		 nvl(sum_in_Surtax1_AMT_CNY, 0) as sum_in_Surtax1_AMT_CNY, nvl(sum_in_Surtax2_AMT_CNY, 
			0) as sum_in_Surtax2_AMT_CNY, nvl(sum_in_Surtax3_AMT_CNY, 0) as sum_in_Surtax3_AMT_CNY, 
			nvl(sum_in_Surtax4_AMT_CNY, 0) as sum_in_Surtax4_AMT_CNY, nvl(sum_Surtax1_AMT_CNY, 
			0) as sum_Surtax1_AMT_CNY, nvl(sum_Surtax2_AMT_CNY, 0) as sum_Surtax2_AMT_CNY, 
			nvl(sum_Surtax3_AMT_CNY, 0) as sum_Surtax3_AMT_CNY, nvl(sum_Surtax4_AMT_CNY, 
			0) as sum_Surtax4_AMT_CNY from (select nvl(BANK_CODE, INSTCODE) as INSTCODE, 


		INPUT_TRANS.sum_in_Surtax1_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax2_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax4_AMT_CNY,
		TRANS_INFO.sum_Surtax1_AMT_CNY,
		TRANS_INFO.sum_Surtax2_AMT_CNY,
		TRANS_INFO.sum_Surtax3_AMT_CNY,
		TRANS_INFO.sum_Surtax4_AMT_CNY
		from (select BANK_CODE,

		 sum(nvl(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY, sum(nvl(Surtax2_AMT_CNY, 
			0)) sum_in_Surtax2_AMT_CNY, sum(nvl(Surtax3_AMT_CNY, 0)) sum_in_Surtax3_AMT_CNY, 
			sum(nvl(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY
		


		from
		VMS_INPUT_TRANS_INFO t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by BANK_CODE) INPUT_TRANS
		full join (select INSTCODE,
		
		
		 sum(nvl(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY, sum(nvl(Surtax2_AMT_CNY, 
			0)) as sum_Surtax2_AMT_CNY, sum(nvl(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY, 
			sum(nvl(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY 
		

		from VMS_TRANS_INFO
		t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by INSTCODE) TRANS_INFO
		on INPUT_TRANS.BANK_CODE =
		TRANS_INFO.INSTCODE) s_AMT
		left join u_base_inst inst
		on inst.inst_id =
		s_AMT.INSTCODE
		left join vms_surtax_info s_INFO
		on s_INFO.Taxpayer_Id =
		inst.taxpernumber

		<include refid="selectSurtaxAMT_where" />
		)
	</select>-->

	<select id="getInstInfoList" parameterClass="java.util.Map"
		resultClass="instInfo">
		select b.Inst_Name as instName,
		b.Inst_Id as instId from u_Base_Inst b
		where 1 = 1
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				b.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				b.inst_id = #instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="taxFlag">
				b.TAXPERNAME is not
				null
				and b.TAXPERNUMBER is not null
				and b.ACCOUNT is not null
				and
				b.TAXADDRESS is not null
				and b.TAXTEL is not null
				and b.TAXBANK is not
				null
			</isNotEmpty>
		</dynamic>
	</select> 
	
	<!--mysql版本  -->
		<select id="selectSurtaxAMTCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1) from(
		select s_AMT.INSTCODE,
		s_AMT.INSTCODE,
		inst.inst_name,
		s_INFO.Surtax_Type,
		s_INFO.Surtax_Name,
		s_INFO.Surtax_Rate,
		inst.taxpernumber,
		inst.taxpername,

		ifnull(sum_in_Surtax1_AMT_CNY, 0) as sum_in_Surtax1_AMT_CNY,
		ifnull(sum_in_Surtax2_AMT_CNY, 0) as sum_in_Surtax2_AMT_CNY,
		ifnull(sum_in_Surtax3_AMT_CNY, 0) as sum_in_Surtax3_AMT_CNY,
		ifnull(sum_in_Surtax4_AMT_CNY, 0) as sum_in_Surtax4_AMT_CNY,
		ifnull(sum_Surtax1_AMT_CNY, 0) as sum_Surtax1_AMT_CNY,
		ifnull(sum_Surtax2_AMT_CNY, 0) as sum_Surtax2_AMT_CNY,
		ifnull(sum_Surtax3_AMT_CNY, 0) as sum_Surtax3_AMT_CNY,
		ifnull(sum_Surtax4_AMT_CNY, 0) as sum_Surtax4_AMT_CNY
		from (select
		ifnull(BANK_CODE, INSTCODE) as INSTCODE,

		INPUT_TRANS.sum_in_Surtax1_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax2_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax4_AMT_CNY,
		TRANS_INFO.sum_Surtax1_AMT_CNY,
		TRANS_INFO.sum_Surtax2_AMT_CNY,
		TRANS_INFO.sum_Surtax3_AMT_CNY,
		TRANS_INFO.sum_Surtax4_AMT_CNY
		from (select BANK_CODE,

		sum(ifnull(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) sum_in_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) sum_in_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY


		from
		VMS_INPUT_TRANS_INFO t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by BANK_CODE) INPUT_TRANS
		left join (select INSTCODE,

		sum(ifnull(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) as sum_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY

		from VMS_TRANS_INFO
		t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by INSTCODE) TRANS_INFO
		on INPUT_TRANS.BANK_CODE =
		TRANS_INFO.INSTCODE) s_AMT
		left join u_base_inst inst
		on inst.inst_id =
		s_AMT.INSTCODE
		left join vms_surtax_info s_INFO
		on s_INFO.Taxpayer_Id =
		inst.taxpernumber

		<include refid="selectSurtaxAMT_where" />
		
		union
		
		select s_AMT.INSTCODE,
		s_AMT.INSTCODE,
		inst.inst_name,
		s_INFO.Surtax_Type,
		s_INFO.Surtax_Name,
		s_INFO.Surtax_Rate,
		inst.taxpernumber,
		inst.taxpername,

		ifnull(sum_in_Surtax1_AMT_CNY, 0) as sum_in_Surtax1_AMT_CNY,
		ifnull(sum_in_Surtax2_AMT_CNY, 0) as sum_in_Surtax2_AMT_CNY,
		ifnull(sum_in_Surtax3_AMT_CNY, 0) as sum_in_Surtax3_AMT_CNY,
		ifnull(sum_in_Surtax4_AMT_CNY, 0) as sum_in_Surtax4_AMT_CNY,
		ifnull(sum_Surtax1_AMT_CNY, 0) as sum_Surtax1_AMT_CNY,
		ifnull(sum_Surtax2_AMT_CNY, 0) as sum_Surtax2_AMT_CNY,
		ifnull(sum_Surtax3_AMT_CNY, 0) as sum_Surtax3_AMT_CNY,
		ifnull(sum_Surtax4_AMT_CNY, 0) as sum_Surtax4_AMT_CNY
		from (select
		ifnull(BANK_CODE, INSTCODE) as INSTCODE,

		INPUT_TRANS.sum_in_Surtax1_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax2_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax3_AMT_CNY,
		INPUT_TRANS.sum_in_Surtax4_AMT_CNY,
		TRANS_INFO.sum_Surtax1_AMT_CNY,
		TRANS_INFO.sum_Surtax2_AMT_CNY,
		TRANS_INFO.sum_Surtax3_AMT_CNY,
		TRANS_INFO.sum_Surtax4_AMT_CNY
		from (select BANK_CODE,

		sum(ifnull(Surtax1_AMT_CNY, 0)) sum_in_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) sum_in_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) sum_in_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) sum_in_Surtax4_AMT_CNY


		from
		VMS_INPUT_TRANS_INFO t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by BANK_CODE) INPUT_TRANS
		right join (select INSTCODE,

		sum(ifnull(Surtax1_AMT_CNY, 0)) as sum_Surtax1_AMT_CNY,
		sum(ifnull(Surtax2_AMT_CNY, 0)) as sum_Surtax2_AMT_CNY,
		sum(ifnull(Surtax3_AMT_CNY, 0)) as sum_Surtax3_AMT_CNY,
		sum(ifnull(Surtax4_AMT_CNY, 0)) as sum_Surtax4_AMT_CNY

		from VMS_TRANS_INFO
		t
		<isNotEmpty property="applyPeriod">
			where substr(trans_date,0,7) =
			#applyPeriod#
		</isNotEmpty>
		group by INSTCODE) TRANS_INFO
		on INPUT_TRANS.BANK_CODE =
		TRANS_INFO.INSTCODE) s_AMT
		left join u_base_inst inst
		on inst.inst_id =
		s_AMT.INSTCODE
		left join vms_surtax_info s_INFO
		on s_INFO.Taxpayer_Id =
		inst.taxpernumber

		<include refid="selectSurtaxAMT_where" />
		)fff
	</select>
	

	<select id="getInstInfoTaxNoList" parameterClass="java.util.Map"
		resultClass="instInfo">
		select i.Taxpernumber as tanNo from u_Base_Inst i
		where i.Taxpernumber
		is not null and i.Taxpernumber &lt;&gt; 'null'
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				i.inst_id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="instId">
				i.inst_id = #instId#
			</isNotEmpty>
		</dynamic>
	</select>


	<select id="getInvoiceStockDetailOfList" parameterClass="java.util.Map"
		resultClass="invoiceStockDetail">
		select distinct vs.INVOICE_TYPE as invoiceType
		from
		VMS_PAPER_INVOICE_USE_DETAIL vd
		left join VMS_PAPER_INVOICE_STOCK vs
		on
		vs.PAPER_INVOICE_STOCK_ID = vd.PAPER_INVOICE_STOCK_ID
		left join
		U_BASE_INST ui
		on vs.CREATE_INST_ID = ui.inst_id
		left join U_BASE_USER
		us on vs.User_Id = us.User_Id
		where vs.DISTRIBUTE_FLAG in ('1','2')
		and
		vd.INVOICE_STATUS = '0'
		<dynamic>
			<isNotEmpty prepend="and" property="auth_inst_ids">
				vs.Inst_Id in
				<iterate property="auth_inst_ids" conjunction="," open="("
					close=")">
					#auth_inst_ids[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="invoiceCode">
				vd.INVOICE_CODE=#invoiceCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="invoiceNo">
				vd.INVOICE_NO=#invoiceNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="invoiceType">
				vs.INVOICE_TYPE=#invoiceType#
			</isNotEmpty>
		</dynamic>
	</select>
	<update id="updateBillNoneCancel" parameterClass="java.util.Map">
		update
		VMS_PAPER_INVOICE_USE_DETAIL ud
		set ud.invoice_status = '2',
		ud.invalid_reason = #invalidReason#
		where ud.invoice_no = #invoiceNo#
		and ud.INVOICE_CODE = #invoiceCode#
	</update>
	<update id="revokeBillNoneCancel" parameterClass="java.util.Map">
		update
		VMS_PAPER_INVOICE_USE_DETAIL ud
		set ud.invoice_status = '0',
		ud.invalid_reason = ''
		where ud.paper_invoice_id = #invoiceId#
	</update>
	<resultMap class="taxDiffCheckAccountInfo" id="taxDiffCheckAccountInfo">
		<result property="instcode" column="INSTCODE" />
		<result property="contractNo" column="CONTRACT_NO" />
		<result property="goodsNo" column="GOODS_NO" />
		<result property="expiryDate" column="EXPIRY_DATE" />
		<result property="customerId" column="CUSTOMER_ID" />
		<result property="glConfirmAmt" column="GL_CONFIRM_AMT" />
		<result property="taxConfirmAmt" column="TAX_CONFIRM_AMT" />
		<result property="devAmt" column="DEV_AMT" />
		<result property="customerCname" column="CUSTOMER_CNAME" />
		<result property="transId" column="TRANS_ID" />
		<result property="currency" column="CURRENCY" />
	</resultMap>

	<resultMap class="specialBillWithhold" id="specialBillWithhold">

		<result property="taxGov" column="TAX_GOV" />
		<result property="taxNo" column="TAX_NO" />
		<result property="taxInstChn" column="TAX_INST_CHN" />
		<result property="bankandname" column="BANKANDNAME" />
		<result property="bankandaccount" column="BANKANDACCOUNT" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="subjectClass" column="SUBJECT_CLASS" />
		<result property="nationalTre" column="NATIONAL_TRE" />
		<result property="writeData" column="WRITE_DATA" />
		<result property="belongDataS" column="BELONG_DATA_S" />
		<result property="belongDataE" column="BELONG_DATA_E" />
		<result property="payData" column="PAY_DATA" />
		<result property="taxAmtSum" column="TAX_AMT_SUM" />
		<result property="dataStatus" column="DATASTATUS" />
		<result property="remark" column="REMARK" />
	</resultMap>


	<select id="billNoneInvoiceReason" parameterClass="java.util.Map"
		resultClass="invoiceStockDetail">
		select vd.Invalid_Reason as invalidReason
		from
		VMS_PAPER_INVOICE_USE_DETAIL vd
		where vd.Paper_Invoice_Id = #invoiceId#
		<dynamic>
			<isNotEmpty prepend="and" property="invoiceCode">
				vd.Invoice_Code =
				#invoiceCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="invoiceNo">
				vd.Invoice_No =
				#invoiceNo#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="findSpecialbillDeductionCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1) from(
		select w.bill_no as billNo,
		w.tax_gov
		as taxGov,
		w.tax_no as taxNo,
		w.tax_inst_chn as taxInstChn,
		w.bankandname as bankandname,
		w.bankandaccount as bankandaccount,
		w.subject_id as subjectId,
		w.subject_name as subjectName,
		w.subject_class as subjectClass,
		w.national_tre as nationalTre,
		w.write_data as writeData,
		w.belong_data_s as belongDataS,
		w.belong_data_e as belongDataE,
		w.pay_data as payData,
		w.tax_amt_sum as
		taxAmtSum,
		w.datastatus as dataStatus,
		w.REMARK as remark
		from
		vms_withhold w
		where datastatus not in ('1')
		)
	</select>


	<!--交易认定 -->
	<sql id="findTransVerification_where">
		where 1=1

		<isNotEmpty property="verificationType" prepend="and ">
			verification_type = #verificationType#
		</isNotEmpty>
		<isNotEmpty property="inlandFlag" prepend="and ">
			inland_flag =
			#inlandFlag#
		</isNotEmpty>
		<isNotEmpty property="verificationName" prepend="and ">
			business_name
			like '%$verificationName$%'
		</isNotEmpty>
		<isNotEmpty property="taxRate" prepend="and ">
			tax_rate =
			#taxRate#
		</isNotEmpty>
		<isNotEmpty property="ramark" prepend="and ">
			ramark = #ramark#
		</isNotEmpty>
		<isNotEmpty property="goodsName" prepend="and ">
			goods_Name like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids">
			vtv.id in
			<iterate property="ids" open="(" close=")" conjunction=",">
				#ids[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="taxType">
			vtv.tax_Type = #taxType#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="id">
			vtv.id = #id#
		</isNotEmpty>
		<isEmpty property="emptyGoodsNo">
			<isNotEmpty prepend="and" property="goodsNo">
				vtv.goods_no =
				#goodsNo#
			</isNotEmpty>
		</isEmpty>

		<isNotEmpty prepend="and" property="emptyGoodsNo">
			(vtv.goods_no is null or
			vtv.goods_no ='')
		</isNotEmpty>
		order by verification_type,goods_no,tax_type desc,tax_rate
	</sql>

	<!--Oracle版本 -->
	<!-- <select id="findTransVerification" parameterClass="java.util.Map" resultClass="transVerification"> 
		select * from ( select rownum as rowindex, vtv.id, verification_type as verificationType, 
		inland_flag as inlandFlag, verification_Name as verificationName, tax_type 
		||' - '||verification_Name verificationFullName, goods_name as goodsName, 
		goods_no as goodsNo, tax_rate as taxRate, ramark, tax_type as taxType, tcd_type.code_name 
		as taxTypeName, tcd_inland.code_name inlandFlagName, tcd_rate.code_name taxRateName 
		from vms_trans_verification vtv left join t_code_dictionary tcd_inland on 
		tcd_inland.code_value_standard_letter = vtv.inland_flag and tcd_inland.code_type 
		= 'INLAND_FLAG' left join t_code_dictionary tcd_rate on tcd_rate.code_value_standard_letter 
		= vtv.tax_rate and tcd_rate.code_type = 'INPUT_TAXRATE_TYPE' left join t_code_dictionary 
		tcd_Type on tcd_Type.code_value_standard_letter = vtv.tax_Type and tcd_Type.code_type 
		= 'TAX_TYPE' <include refid="findTransVerification_where" /> <include refid="page_fragment" 
		/> </select> -->

	<!--Mysql版本 -->
	<select id="findTransVerification" parameterClass="java.util.Map"
		resultClass="transVerification">
		select * from (
		select (@rowNum:=@rowNum+1) as rowindex,
		vtv.id,
		verification_type as
		verificationType,
		inland_flag as inlandFlag,
		verification_Name as
		verificationName,
		<!-- tax_type ||' - '||verification_Name -->
		concat(tax_type ,' - ',verification_Name),

		verificationFullName,
		goods_name as goodsName,
		goods_no as goodsNo,
		tax_rate as taxRate,
		ramark,
		tax_type as taxType,
		tcd_type.code_name as
		taxTypeName,
		tcd_inland.code_name inlandFlagName,
		tcd_rate.code_name
		taxRateName
		from
		vms_trans_verification vtv
		left join t_code_dictionary
		tcd_inland
		on
		tcd_inland.code_value_standard_letter = vtv.inland_flag
		and
		tcd_inland.code_type = 'INLAND_FLAG'
		left join t_code_dictionary
		tcd_rate
		on tcd_rate.code_value_standard_letter = vtv.tax_rate
		and
		tcd_rate.code_type = 'INPUT_TAXRATE_TYPE'
		left join t_code_dictionary
		tcd_Type
		on tcd_Type.code_value_standard_letter = vtv.tax_Type
		and
		tcd_Type.code_type = 'TAX_TYPE'
		<include refid="findTransVerification_where" />
		<include refid="page_fragment" />
	</select>










	<select id="findTransVerificationCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(1)
		from vms_trans_verification vtv
		left join
		t_code_dictionary tcd_inland
		on tcd_inland.code_value_standard_letter =
		vtv.inland_flag
		and tcd_inland.code_type = 'INLAND_FLAG'
		left join
		t_code_dictionary tcd_rate
		on tcd_rate.code_value_standard_letter =
		vtv.tax_rate
		and tcd_rate.code_type = 'INPUT_TAXRATE_TYPE'
		<include refid="findTransVerification_where" />

	</select>
	<insert id="insertTransVerification" parameterClass="java.util.Map">
		<selectKey resultClass="int" type="pre" keyProperty="idAuto">
			SELECT
			paper_invoice_distribute_seq.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
		insert into vms_trans_verification
		(id, verification_type, inland_flag,
		verification_name,<!-- goods_No,goods_Name, -->
		tax_rate,tax_type, ramark)
		values
		(#idAuto#, #obj.verificationType#,
		#obj.inlandFlag#, #obj.verificationName#,<!-- #obj.goodsNo#,#obj.goodsName#, -->
		#obj.taxRate#,#obj.taxType#,#obj.ramark#)

	</insert>
	<update id="updateTransVerification" parameterClass="java.util.Map">
		update vms_trans_verification
		set
		verification_type =
		#obj.verificationType#,
		inland_flag = #obj.inlandFlag#,
		verification_name = #obj.verificationName#,
		<!-- goods_Name = #obj.goodsName#, goods_No = #obj.goodsNo#, -->
		tax_rate = #obj.taxRate#,
		tax_type = #obj.taxType#,
		ramark =
		#obj.ramark#
		where id = #obj.id#
	</update>

	<delete id="deleteTransVerification" parameterClass="java.util.Map">
		delete from vms_trans_verification
		where id in
		<iterate open="(" close=")" conjunction="," property="ids">
			#ids[]#
		</iterate>
	</delete>
	<!--票据编辑页面修改备注 -->
	<update id="updateBillRemarkById" parameterClass="java.util.Map">
		update
		vms_bill_info set remark = #remark# where bill_id = #billId#
	</update>
	<!-- 完整性对账 -->
	<!--oracle版本  -->
	<!-- <select id="getCheckAccountList" parameterClass="java.util.Map"
		resultClass="integrityCheckAccount">
		select u.Inst_Name as instName,s.instId as instCode,
		to_char(sum(s.Amount),'fm99999999999999999990.00') as amount,
		to_char(sum(s.Net_Price),'fm99999999999999999990.00') as netPrice,
		to_char(sum(s.Tax_Amt),'fm99999999999999999990.00') as taxAmt,
		to_char(sum(s.Dev_Amt),'fm99999999999999999990.00') as devAmt
		from
		(select substr(b.Inst_Path,
		instr(b.Inst_Path, '\', 2) + 1,
		Instr(b.Inst_Path, '\', 3) - 1) as instId,
		t.Amount,
		t.Net_Price,
		t.Tax_Amt,
		t.Dev_Amt
		from VMS_GL_COMPLETE t
		left join u_Base_Inst b
		on
		t.Instcode = b.Inst_Id
		Group by b.Inst_Path, t.Amount, t.Net_Price,
		t.Tax_Amt, t.Dev_Amt) s
		left join u_Base_Inst u
		on s.instId = u.Inst_Id
		<dynamic>
			<isNotEmpty prepend="" property="instCode">
				where u.Inst_Id =
				#instCode#
			</isNotEmpty>
		</dynamic>
		Group by s.instId,u.Inst_Name
		order by u.Inst_Name
	</select> -->
	
	<!--mysql版本  -->
	<select id="getCheckAccountList" parameterClass="java.util.Map"
		resultClass="integrityCheckAccount">
		select u.Inst_Name as instName,s.instId as instCode,
		convert(sum(s.Amount),char(50)) as amount,
		convert(sum(s.Net_Price),char(50)) as netPrice,
		convert(sum(s.Tax_Amt),char(50)) as taxAmt,
		convert(sum(s.Dev_Amt),char(50)) as devAmt
		from
		(select substring(b.Inst_Path,
		
		
		
		<!--没有改的重点  -->
		locate('\\',b.Inst_Path, 2) + 1,
		locate('\\',b.Inst_Path, 3) - 1) as instId,
		t.Amount,
		t.Net_Price,
		t.Tax_Amt,
		t.Dev_Amt
		from VMS_GL_COMPLETE t
		left join u_Base_Inst b
		on
		t.Instcode = b.Inst_Id
		Group by b.Inst_Path, t.Amount, t.Net_Price,
		t.Tax_Amt, t.Dev_Amt) s
		left join u_Base_Inst u
		on s.instId = u.Inst_Id
		<dynamic>
			<isNotEmpty prepend="" property="instCode">
				where u.Inst_Id =
				#instCode#
			</isNotEmpty>
		</dynamic>
		Group by s.instId,u.Inst_Name
		order by u.Inst_Name
	</select>
	
	
	<!--oracle版本  -->
	<!-- <select id="getCheckAccountListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from (
		select u.Inst_Name as instName,s.instId as
		instCode,
		sum(s.Dev_Amt) as devAmt
		from (select substr(b.Inst_Path,
		instr(b.Inst_Path, '\', 2) + 1,
		Instr(b.Inst_Path, '\', 3) - 1) as
		instId,
		t.Amount,
		t.Net_Price,
		t.Tax_Amt,
		t.Dev_Amt
		from VMS_GL_COMPLETE t
		left join u_Base_Inst b
		on t.Instcode = b.Inst_Id
		Group by b.Inst_Path,
		t.Amount, t.Net_Price, t.Tax_Amt, t.Dev_Amt) s
		left join u_Base_Inst u
		on s.instId = u.Inst_Id
		<dynamic>
			<isNotEmpty prepend="" property="instCode">
				where u.Inst_Id =
				#instCode#
			</isNotEmpty>
		</dynamic>
		Group by s.instId,u.Inst_Name
		)
	</select> -->
	
	<!--mysql版本  -->
	<select id="getCheckAccountListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*) from (
		select u.Inst_Name as instName,s.instId as
		instCode,
		sum(s.Dev_Amt) as devAmt
		from (select substring(b.Inst_Path,
		locate('\\',b.Inst_Path,2) + 1,
		locate('\\',b.Inst_Path,3) - 1) as
		instId,
		t.Amount,
		t.Net_Price,
		t.Tax_Amt,
		t.Dev_Amt
		from VMS_GL_COMPLETE t
		left join u_Base_Inst b
		on t.Instcode = b.Inst_Id
		Group by b.Inst_Path,
		t.Amount, t.Net_Price, t.Tax_Amt, t.Dev_Amt) s
		left join u_Base_Inst u
		on s.instId = u.Inst_Id
		<dynamic>
			<isNotEmpty prepend="" property="instCode">
				where u.Inst_Id =
				#instCode#
			</isNotEmpty>
		</dynamic>
		Group by s.instId,u.Inst_Name
		)fff
	</select>
	
	
	
	

	<!-- 完整性对账 查看交易类型 -->
	<select id="getCheckGoodsInfoList" parameterClass="java.util.Map"
		resultClass="integrityCheckAccount">
		select Distinct substr(b.Inst_Path,
		
		
		<!--oracle版本  -->
		<!--没有改的重点  -->
		<!-- instr(b.Inst_Path, '\',
		2) + 1,
		instr(b.Inst_Path, '\', 3) - 1) as instId,
		c.Instcode as
		instCode,
		g.GOODS_ID as goodsNo,
		g.Goods_Name as goodsName,
		 -->
		 
		<!--mysql版本  -->
		locate('\\',b.Inst_Path, 2) + 1,
		locate('\\',b.Inst_Path,3) - 1) as instId,
		c.Instcode as
		instCode,
		g.GOODS_ID as goodsNo,
		g.Goods_Name as goodsName,
		
		 
		 
		<!--oracle版本  -->
		<!-- to_char(c.Amount,'fm99999999999999999990.00') as amount,
		to_char(c.Net_Price,'fm99999999999999999990.00') as netPrice,
		to_char(c.Tax_Amt,'fm99999999999999999990.00') as taxAmt,
		to_char(c.Dev_Amt,'fm99999999999999999990.00') as devAmt, -->
		
		<!--mysql版本  -->
		convert(c.Amount,char(50)) as amount,
		convert(c.Net_Price,char(50)) as netPrice,
		convert(c.Tax_Amt,char(50)) as taxAmt,
		convert(c.Dev_Amt,char(50)) as devAmt,
		
		
		c.Trans_Id as
		transId
		from Vms_Gl_Complete c
		left join Vms_Goods_Info g
		on c.Goods_No =
		g.GOODS_ID
		left join u_Base_Inst b
		on c.Instcode = b.Inst_Id
		where
		
		
		<!--oracle版本  -->
		<!--没有改的重点  -->
		<!-- substr(b.Inst_Path,
		instr(b.Inst_Path, '\', 2) + 1,
		instr(b.Inst_Path,
		'\', 3) - 1) = #instCode#
		order by g.Goods_Name -->
		<!--mysql版本  -->
		substring(b.Inst_Path,
		locate('\\',b.Inst_Path,2) + 1,
		locate('\\',b.Inst_Path,3) - 1) = #instCode#
		order by g.Goods_Name
		
		
		
	</select>

	<select id="getCheckGoodsInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select Count(*) from (
		select Distinct 
		
		<!--oracle版本  -->
		<!--没有改的重点  -->
		<!-- substr(b.Inst_Path,
		instr(b.Inst_Path, '\', 2) + 1,
		instr(b.Inst_Path, '\', 3) - 1) as -->
		
		<!--mysql版本  -->
		substring(b.Inst_Path,
		locate('\\',b.Inst_Path, 2) + 1,
		locate('\\',b.Inst_Path,3) - 1) as
		
		
		
		instId,
		c.Instcode as instCode,
		g.GOODS_ID as goodsNo,
		g.Goods_Name as
		goodsName,
		c.Amount as amount,
		c.Net_Price as netPrice,
		c.Tax_Amt as
		taxAmt,
		c.Dev_Amt as devAmt
		from Vms_Gl_Complete c
		left join
		Vms_Goods_Info g
		on c.Goods_No = g.GOODS_ID
		left join u_Base_Inst b
		on
		c.Instcode = b.Inst_Id
		
		<!--oracle版本  -->
		<!-- where substr(b.Inst_Path,
		instr(b.Inst_Path, '\',
		2) + 1,
		instr(b.Inst_Path, '\', 3) - 1) = #instCode#
		) -->
		
		<!--mysql版本  -->
		where substring(b.Inst_Path,
		locate('\\',b.Inst_Path,2) + 1,
		locate('\\', b.Inst_Path, 3) - 1) = #instCode#
		)
		
		
	</select>

	<!-- 完整性对账 查看交易明细 -->
	<select id="getCheckTransInfoList" parameterClass="java.util.Map"
		resultClass="integrityCheckAccount">
		select c.Customer_Cname as customerCname,
		g.Trans_Id as
		transId,
		g.Customer_Id as customerId,
		
		<!--oracle版本 -->
		<!-- to_char(g.Amount,'fm99999999999999999990.00') as amount,
		to_char(g.Net_Price,'fm99999999999999999990.00') as netPrice,
		to_char(g.Tax_Amt,'fm99999999999999999990.00') as taxAmt,
		to_char(g.Dev_Amt,'fm99999999999999999990.00') as devAmt -->
		
		<!--mysql版本  -->
		convert(g.Amount,char(50)) as amount,
		convert(g.Net_Price,char(50)) as netPrice,
		convert(g.Tax_Amt,char(50)) as taxAmt,
		convert(g.Dev_Amt,char(50)) as devAmt
		
		from
		Vms_Gl_Complete g
		left join Vms_Customer_Info c
		on c.Customer_Id =
		g.Customer_Id
		where g.Instcode = #instCode#
		and g.Goods_No = #goodsNo#
	</select>

	<select id="getCheckTransInfoListCount" parameterClass="java.util.Map"
		resultClass="long">
		select Count(*)
		from Vms_Gl_Complete g
		left join
		Vms_Customer_Info c
		on c.Customer_Id = g.Customer_Id
		where 1 = 1
		and
		g.Instcode = #instCode#
		and g.Goods_No = #goodsNo#
	</select>
	<!-- 完整性对账 end -->
	<select id="findTaxDiffCheckAccount" parameterClass="java.util.Map"
		resultClass="taxDiffCheckAccountInfo">
		select a.CONTRACT_NO as contractNo,
		a.CUSTOMER_ID as customerId,
		a.DEV_AMT as devAmt,
		a.EXPIRY_DATE as expiryDate,
		a.GL_CONFIRM_AMT as
		glConfirmAmt,
		c.GOODS_NAME as goodsName,
		a.INSTCODE as instcode,
		a.TAX_CONFIRM_AMT as taxConfirmAmt,
		b.CUSTOMER_CNAME as customerCname
		from VMS_GL_TAX a
		left join VMS_CUSTOMER_INFO b
		on
		a.CUSTOMER_ID=b.CUSTOMER_ID left join VMS_GOODS_INFO c on
		a.GOODS_NO=c.GOODS_ID
		where ( a.DEV_AMT is not null or a.DEV_AMT !=0)
		<isNotEmpty prepend="and" property="goodsName">
			c.GOODS_NAME like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="instcode">
			a.INSTCODE = #instcode#
		</isNotEmpty>
	</select>
	<select id="findTaxDiffCheckAccountCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_GL_TAX a
		left join VMS_CUSTOMER_INFO b
		on
		a.CUSTOMER_ID=b.CUSTOMER_ID left join VMS_GOODS_INFO c on
		a.GOODS_NO=c.GOODS_ID
		where ( a.DEV_AMT is not null or a.DEV_AMT !=0)
		<isNotEmpty prepend="and" property="goodsName">
			c.GOODS_NAME like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="instcode">
			a.INSTCODE = #instcode#
		</isNotEmpty>
	</select>
	<select id="findlistForeignCurrencyTransDiff" parameterClass="java.util.Map"
		resultClass="taxDiffCheckAccountInfo">
		select a.INSTCODE as instcode,
		a.TRANS_ID as transId,
		b.CUSTOMER_CNAME
		as customerCname,
		a.DEV_AMT as devAmt,
		a.GL_CONFIRM_AMT as glConfirmAmt,
		d.GOODS_NAME as goodsName,
		a.TAX_CONFIRM_AMT as taxConfirmAmt ,
		c.CURRENCY_NAME as currency,
		a.CUSTOMER_ID as customerId
		from
		VMS_GL_RATE a
		left join VMS_CUSTOMER_INFO b on
		a.CUSTOMER_ID=b.CUSTOMER_ID
		left join VMS_CURRENCY c on
		a.CURRENCY=c.CURRENCY
		left join VMS_GOODS_INFO d on
		a.GOODS_NO=d.GOODS_ID
		where ( a.DEV_AMT is not null or a.DEV_AMT !=0)
		<isNotEmpty prepend="and" property="goodsName">
			d.GOODS_NAME like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="instcode">
			a.INSTCODE = #instcode#
		</isNotEmpty>

	</select>
	<select id="findlistForeignCurrencyTransDiffCount"
		parameterClass="java.util.Map" resultClass="long">
		select count(*)
		from VMS_GL_RATE a
		left join VMS_CUSTOMER_INFO b on
		a.CUSTOMER_ID=b.CUSTOMER_ID
		left join VMS_CURRENCY c on
		a.CURRENCY=c.CURRENCY
		left join VMS_GOODS_INFO d on
		a.GOODS_NO=d.GOODS_ID
		where ( a.DEV_AMT is not null or a.DEV_AMT !=0)
		<isNotEmpty prepend="and" property="goodsName">
			d.GOODS_NAME like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="instcode">
			a.INSTCODE = #instcode#
		</isNotEmpty>

	</select>

	<sql id="findListGoodsConfig_where">
		where 1=1
		<isNotEmpty property="goodsName" prepend="and">
			GOODS_NAME like
			'%$goodsName$%'
		</isNotEmpty>
		<isNotEmpty property="fullGoodsName" prepend="and">
			GOODS_NAME =
			#fullGoodsName#
		</isNotEmpty>
		<isNotEmpty property="goodsNo" prepend="and">
			GOODS_NO = #goodsNo#
		</isNotEmpty>
		<isNotEmpty property="checkGoodsNo" prepend="and">
			GOODS_NO !=
			#checkGoodsNo#
		</isNotEmpty>
		<isNotEmpty property="taxType" prepend="and">
			tax_type = #taxType#
		</isNotEmpty>
	</sql>



	<!-- Oracle版本 -->
	<!-- <select id="findListGoodsConfig" resultClass="goodsConfig" parameterClass="java.util.Map"> 
		select * from ( select rownum as rowindex, GOODS_NO as goodsNo, GOODS_NAME 
		as goodsName, tax_type as taxType, tcd_Type.Code_Name taxName From VMS_GOODS_CONFIG 
		vg left join t_code_dictionary tcd_Type on tcd_Type.code_value_standard_letter 
		= tax_type and tcd_Type.code_type = 'TAX_TYPE' <include refid="findListGoodsConfig_where" 
		/> <include refid="page_fragment" /> </select> -->

	<!--Mysql版本 -->
	<select id="findListGoodsConfig" resultClass="goodsConfig"
		parameterClass="java.util.Map">
		select * from (
		select (@rowNum:=@rowNum+1) as rowindex,
		GOODS_NO as
		goodsNo,
		GOODS_NAME as goodsName,
		tax_type as taxType,
		tcd_Type.Code_Name taxName
		From VMS_GOODS_CONFIG vg
		left join
		t_code_dictionary tcd_Type
		on
		tcd_Type.code_value_standard_letter =
		tax_type
		and tcd_Type.code_type =
		'TAX_TYPE'
		<include refid="findListGoodsConfig_where" />
		<include refid="page_fragment" />
	</select>


	<select id="findListGoodsConfigCount" resultClass="long"
		parameterClass="java.util.Map">
		select count(1)
		From VMS_GOODS_CONFIG
		<include refid="findListGoodsConfig_where" />
	</select>

	<delete id="deleteGoodsConfig" parameterClass="java.util.Map">
		delete
		From VMS_GOODS_CONFIG
		where GOODS_NO in
		<iterate property="goodsNos" conjunction="," open="(" close=")">
			#goodsNos[]#
		</iterate>

	</delete>

	<update id="updateGoodsConfig" parameterClass="java.util.Map">
		update
		vms_goods_config
		set
		goods_name = #goodsName#,
		tax_type = #taxType#
		where
		goods_no = #goodsNo#
	</update>

	<select id="selectGoodsConfigSeq" resultClass="int">
		SELECT
		paper_invoice_distribute_seq.NEXTVAL AS VALUE FROM DUAL
	</select>
	<insert id="insertGoodsConfig" parameterClass="java.util.Map">
		insert into
		vms_goods_config
		(goods_no, goods_name,tax_type)
		values
		(#idAuto#,
		#goodsName#,#taxType#)
	</insert>
	<update id="updateTransVerificationGoodsNo">
		update vms_trans_verification
		set
		goods_no = #goodsNo#,
		goods_Name =
		#goodsName#
		where
		<isNotEmpty property="ids">
			id in
			<iterate property="ids" open="(" close=")" conjunction=",">
				#ids[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="goodsNos">
			goods_no in
			<iterate property="goodsNos" open="(" close=")" conjunction=",">
				#goodsNos[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="goodsNoSel">
			goods_no = #goodsNoSel#
		</isNotEmpty>

	</update>

	<update id="updateBillStatus" parameterClass="map">
		update vms_bill_info set
		datastatus = #dataStatus#
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="billId">
				bill_id = #billId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billCode">
				bill_code = #billCode#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="billNo">
				bill_no = #billNo#
			</isNotEmpty>
		</dynamic>
	</update>

	<!-- 大都会新增Begin -->
	<!-- 单证管理 -->
	<select id="createKeyCodeList" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		VDR_RULEID as ruleId,
		VDR_TYPE as type,
		VDR_INSTID as instId,
		VDR_BANK as bank,
		VDR_CHANNEL as channel,
		VDR_INST_CODE as instCode ,
		VDR_CHANNEL_CODE as
		channelCode,
		VDR_YEAR_YN as yearYn,
		VDR_SPE_CODE as
		speCode ,
		VDR_SUF_CODE as sufCode,
		VDR_LENGTH as length,
		VDR_RULE as
		rule,
		VDR_CUR_NUM as curNum,
		VDR_MAX_NUM as maxNum
		from VMS_DOC_RULES
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.bank">
				VDR_BANK like
				'%$documentManageInfo.bank$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.type">
				VDR_TYPE like
				'%$documentManageInfo.type$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.instId">
				VDR_INSTID
				=#documentManageInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				VDR_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="createKeyCodeListCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_DOC_RULES
		where
		1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.bank">
				VDR_BANK like
				'%$documentManageInfo.bank$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.type">
				VDR_TYPE like
				'%$documentManageInfo.type$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.instId">
				VDR_INSTID
				=#documentManageInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				VDR_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findByRuleId" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		VDR_RULEID as ruleId,
		VDR_TYPE as type,
		VDR_INSTID as instId,
		VDR_BANK as bank,
		VDR_CHANNEL as channel,
		VDR_INST_CODE as instCode ,
		VDR_CHANNEL_CODE as
		channelCode,
		VDR_YEAR_YN as yearYn,
		VDR_SPE_CODE as
		speCode ,
		VDR_SUF_CODE as sufCode,
		VDR_LENGTH as length,
		VDR_RULE as
		rule,
		VDR_CUR_NUM as curNum,
		VDR_MAX_NUM as maxNum
		from VMS_DOC_RULES
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="ruleId">
				VDR_RULEID = #ruleId#
			</isNotEmpty>
		</dynamic>
	</select>

	<update id="updateKeyCode" parameterClass="java.util.Map">
		update VMS_DOC_RULES
		set
		VDR_INST_CODE =#documentManageInfo.instCode#,
		VDR_YEAR_YN
		=#documentManageInfo.yearYn#,
		VDR_SPE_CODE
		=#documentManageInfo.speCode#,
		VDR_SUF_CODE
		=#documentManageInfo.sufCode#,
		VDR_LENGTH =#documentManageInfo.length#,
		VDR_RULE =#documentManageInfo.rule#,
		VDR_CUR_NUM
		=#documentManageInfo.curNum#,
		VDR_MAX_NUM =#documentManageInfo.maxNum#
		where VDR_RULEID=#documentManageInfo.ruleId#
	</update>
	<select id="checkCode" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		VDR_RULEID as ruleId,
		VDR_TYPE as type,
		VDR_INSTID as instId,
		VDR_BANK as bank,
		VDR_CHANNEL as channel,
		VDR_INST_CODE as instCode ,
		VDR_CHANNEL_CODE as
		channelCode,
		VDR_YEAR_YN as yearYn,
		VDR_SPE_CODE as
		speCode ,
		VDR_SUF_CODE as sufCode,
		VDR_LENGTH as length,
		VDR_RULE as
		rule,
		VDR_CUR_NUM as curNum,
		VDR_MAX_NUM as maxNum
		from VMS_DOC_RULES
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.bank">
				VDR_BANK =
				#documentManageInfo.bank#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.type">
				VDR_TYPE =
				#documentManageInfo.type#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.instId">
				VDR_INSTID
				=#documentManageInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				VDR_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
	</select>
	<insert id="saveKeyCode" parameterClass="java.util.Map">
		insert into
		VMS_DOC_RULES
		(VDR_TYPE ,
		VDR_INSTID ,
		VDR_BANK ,
		VDR_CHANNEL ,
		VDR_INST_CODE ,
		VDR_CHANNEL_CODE ,
		VDR_YEAR_YN,
		VDR_SPE_CODE ,
		VDR_SUF_CODE ,
		VDR_LENGTH ,
		VDR_RULE,
		VDR_CUR_NUM ,
		VDR_MAX_NUM )
		values(
		#documentManageInfo.type#,
		#documentManageInfo.instId#,
		#documentManageInfo.bank#,
		#documentManageInfo.channel#,
		#documentManageInfo.instCode#,
		#documentManageInfo.channelCode#,
		#documentManageInfo.yearYn#,
		#documentManageInfo.speCode#,
		#documentManageInfo.sufCode#,
		#documentManageInfo.length#,
		#documentManageInfo.rule#,
		#documentManageInfo.curNum#,
		#documentManageInfo.maxNum#
		)
	</insert>
	<delete id="deleteKeyCodes" parameterClass="java.util.Map">
		delete from VMS_DOC_RULES
		where VDR_RULEID in
		<iterate close=")" open="(" conjunction="," property="ruleid">
			'$ruleid[]$'
		</iterate>
	</delete>
	<delete id="deleteKeyCode" parameterClass="java.util.Map">
		delete from VMS_DOC_RULES
		<dynamic prepend="">
			<isNotEmpty prepend="" property="ruleid">where VDR_RULEID =
				#ruleid#
			</isNotEmpty>
			<isEmpty prepend="" property="ruleid">where 1 = 2</isEmpty>
		</dynamic>
	</delete>
	<insert id="saveInsureCode" parameterClass="java.util.Map">
		insert into
		VMS_DOC_INFO
		(
		VDI_NUM,
		VDI_ORDER,
		VDI_TYPE,
		VDI_INSTID,
		VDI_BANK,
		VDI_CHANNEL,
		VDI_STATUS
		)
		values
		(
		#documentManageInfo.curNum#,
		1,
		#documentManageInfo.type#,
		#documentManageInfo.instId#,
		#documentManageInfo.bank#,
		#documentManageInfo.channel#,
		0
		)
	</insert>
	<insert id="saveInsureCode1" parameterClass="java.util.Map">
		insert all
		<iterate property="curnumarray" conjunction=" ">
			INTO
			VMS_DOC_INFO (
			VDI_NUM,
			VDI_ORDER,
			VDI_TYPE,
			VDI_INSTID,
			VDI_BANK,
			VDI_CHANNEL,
			VDI_STATUS) VALUES
			(#curnumarray[]#,
			1,
			#documentManageInfo.type#,
			#documentManageInfo.instId#,
			#documentManageInfo.bank#,
			#documentManageInfo.channel#,
			0)
		</iterate>
		select * from dual
	</insert>
	<insert id="saveInsureCode2" parameterClass="java.util.Map">
		insert into
		VMS_DOC_INFO (
		VDI_NUM,
		VDI_ORDER,
		VDI_TYPE,
		VDI_INSTID,
		VDI_BANK,
		VDI_CHANNEL,
		VDI_STATUS) VALUES
		(
		#curnumarray#,
		1,
		#type#,
		#instId#,
		#bank#,
		#channel#,
		0)
	</insert>
	<update id="updatecurNum" parameterClass="java.util.Map">
		update VMS_DOC_RULES
		set
		VDR_CUR_NUM =#documentManageInfo.curNum#
		where
		VDR_RULEID=#documentManageInfo.ruleId#
	</update>
	<select id="findManageInsureCodeList" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		VDI_NUM as num,
		VDI_ORDER as vdiOrder,
		VDI_TYPE as type,
		VDI_INSTID as instId,
		VDI_BANK as bank,
		VDI_CHANNEL as channel,
		VDI_STATUS as status,
		VDI_DISID as disId,
		VDI_RECID as recId,
		b.VDRI_NAME as vdriName,
		VDI_MATCH_STATUS
		as matchStatus
		from
		VMS_DOC_INFO a
		left join VMS_DOC_REC_INFO b on b.VDRI_ID=a.VDI_RECID
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.bank">
				VDI_BANK =
				#documentManageInfo.bank#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.type">
				VDI_TYPE =
				#documentManageInfo.type#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.instId">
				VDI_INSTID
				=#documentManageInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				VDI_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.status">
				VDI_STATUS
				=#documentManageInfo.status#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.disId">
				VDI_DISID like
				'%$documentManageInfo.disId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.recId">
				VDI_RECID like
				'%$documentManageInfo.recId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginNum">
                <![CDATA[ VDI_NUM >= #documentManageInfo.beginNum# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endNum">
                <![CDATA[ VDI_NUM <= #documentManageInfo.endNum# ]]>
			</isNotEmpty>
		</dynamic>
		order by VDI_ORDER
	</select>
	<select id="findManageInsureCodeListCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_DOC_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.bank">
				VDI_BANK =
				#documentManageInfo.bank#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.type">
				VDI_TYPE =
				#documentManageInfo.type#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.instId">
				VDI_INSTID
				=#documentManageInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				VDI_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.status">
				VDI_STATUS
				=#documentManageInfo.status#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.disId">
				VDI_DISID like
				'%$documentManageInfo.disId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.recId">
				VDI_RECID like
				'%$documentManageInfo.recId$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginNum">
                <![CDATA[ VDI_NUM >= #documentManageInfo.beginNum# ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endNum">
                <![CDATA[ VDI_NUM <= #documentManageInfo.endNum# ]]>
			</isNotEmpty>
		</dynamic>
	</select>


	<update id="updateStatu" parameterClass="java.util.Map">
		update VMS_DOC_INFO
		set VDI_STATUS=#sta#
		<dynamic>
			<isNotEmpty prepend="," property="name">
				VDI_DISID =#name#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="," property="vdName">
				VDI_RECID =#vdName#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="">
			<isNotEmpty prepend="" property="numId">where VDI_NUM = #numId#
			</isNotEmpty>
			<isEmpty prepend="" property="numId">where 1 = 2</isEmpty>
		</dynamic>
	</update>

	<update id="updateStatusList" parameterClass="java.util.Map">
		update VMS_DOC_INFO
		set VDI_STATUS=#sta#
		<dynamic>
			<isNotEmpty prepend="," property="name">
				VDI_DISID =#name#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="," property="vdName">
				VDI_RECID =#vdName#
			</isNotEmpty>
		</dynamic>
		where VDI_NUM in
		<iterate close=")" open="(" conjunction="," property="numId">
			'$numId[]$'
		</iterate>
	</update>
	<select id="finDocRecInfo" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		VDRI_ID as vdriId,
		VDRI_NAME as vdriName,
		VDRI_STATUS as status,
		VDRI_CHANNEL as
		channel
		from VMS_INPUT_DOC_RECEIVER
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdriId">
				VDRI_ID
				=#documentManageInfo.vdriId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdriName">
				VDRI_NAME
				=#documentManageInfo.vdriName#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="finDocRecInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_DOC_REC_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdriId">
				VDRI_ID
				=#documentManageInfo.vdriId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdriName">
				VDRI_NAME
				=#documentManageInfo.vdriName#
			</isNotEmpty>
		</dynamic>
	</select>
	<insert id="insertTransTo" parameterClass="java.util.Map">
		insert into
		VMS_DOC_INFO
		select
		VDI_NUM,
		VDI_ORDER+1,
		VDI_TYPE,
		VDI_INSTID,
		VDI_BANK,
		VDI_CHANNEL,
		VDI_STATUS,
		<!--Oracle版本 -->
		<!-- nvl(VDI_DISID,' '), VDI_RECID, nvl(VDI_MATCH_STATUS,' ') -->

		<!--Mysql版本 -->
		ifnull(VDI_DISID,' '),
		VDI_RECID,
		ifnull(VDI_MATCH_STATUS,' ')

		from
		VMS_DOC_INFO
		where VDI_NUM=#numId# and
		VDI_ORDER=#orderNum#
	</insert>
	<update id="updateTranTo" parameterClass="java.util.Map">
		update VMS_DOC_INFO set
		VDI_STATUS=#sta#,
		VDI_RECID=#vdName#
		where VDI_NUM=#numId# and
		VDI_ORDER=#orderNum#
	</update>
	<select id="findBaseUser" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select
		USER_ID as baseUserId,
		USER_CNAME as baseUserName
		from
		U_BASE_USER
		where
		DEPART_ID=1
	</select>

	<update id="distributeTo" parameterClass="java.util.Map">
		update VMS_DOC_INFO
		set VDI_STATUS=#documentManageInfo.status#,
		VDI_DISID=#documentManageInfo.disId#
		<dynamic prepend="">
			<isNotEmpty prepend="" property="numId">where VDI_NUM = #numId#
			</isNotEmpty>
			<isEmpty prepend="" property="numId">where 1 = 2</isEmpty>
		</dynamic>
	</update>

	<update id="distributeTolist" parameterClass="java.util.Map">
		update VMS_DOC_INFO
		set VDI_STATUS=#documentManageInfo.status#,
		VDI_DISID=#documentManageInfo.disId#
		where VDI_NUM in
		<iterate close=")" open="(" conjunction="," property="numId">
			'$numId[]$'
		</iterate>
	</update>

	<update id="updatecancal" parameterClass="java.util.Map">
		update VMS_DOC_INFO set
		VDI_STATUS=#sta#
		where VDI_NUM = #numId# and VDI_ORDER=#orderNum#
	</update>
	<select id="findDocMapInfo" parameterClass="java.util.Map"
		resultClass="documentManageInfo">
		select VDMI_ID,
		VDMI_DATE as vdmiDate,
		VDMI_FORM_NUM as formNum,
		VDMI_POLICY_NUM as policyNum,
		VDMI_APP_NUM as appNum,
		VDMI_ERROR as
		vdmiError,
		b.VDI_STATUS as status,
		b.VDI_CHANNEL as channel,
		c.VDI_STATUS as tepStatus,
		c.VDI_CHANNEL as tepchannel
		from
		VMS_DOC_MAP_INFO a left join VMS_DOC_INFO b on
		b.VDI_NUM=a.VDMI_APP_NUM
		left join VMS_DOC_INFO c on
		a.VDMI_FORM_NUM=c.VDI_NUM
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.formNum">
				VDMI_FORM_NUM
				=#documentManageInfo.formNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.policyNum">
				VDMI_POLICY_NUM
				=#documentManageInfo.policyNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.appNum">
				VDMI_APP_NUM
				=#documentManageInfo.appNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.status">
				b.VDI_STATUS
				=#documentManageInfo.status#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				b.VDI_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.tepStatus">
				c.VDI_STATUS
				=#documentManageInfo.tepStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.tepchannel">
				c.VDI_CHANNEL
				=#documentManageInfo.tepchannel#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginDate">
                <![CDATA[ to_date(VDMI_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#documentManageInfo.beginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endDate">
                <![CDATA[ to_date(VDMI_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#documentManageInfo.endDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginDate">
                <![CDATA[ str_to_date(VDMI_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#documentManageInfo.beginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endDate">
                <![CDATA[ str_to_date(VDMI_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#documentManageInfo.endDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdmiError">
				VDMI_ERROR is not null
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="documentManageInfo.vdmiError">VDMI_ERROR is not null
			</isNotEmpty>
			<isEmpty prepend="" property="documentManageInfo.vdmiError">VDMI_ERROR is null or
				VDMI_ERROR=' '
			</isEmpty>
		</dynamic>

	</select>
	<select id="findDocMapInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select count(*)
		from VMS_DOC_MAP_INFO a left join VMS_DOC_INFO b on
		b.VDI_NUM=a.VDMI_APP_NUM
		left join VMS_DOC_INFO c on
		a.VDMI_FORM_NUM=c.VDI_NUM
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.formNum">
				VDMI_FORM_NUM
				=#documentManageInfo.formNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.policyNum">
				VDMI_POLICY_NUM
				=#documentManageInfo.policyNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.appNum">
				VDMI_APP_NUM
				=#documentManageInfo.appNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.status">
				b.VDI_STATUS
				=#documentManageInfo.status#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.channel">
				b.VDI_CHANNEL
				=#documentManageInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.tepStatus">
				c.VDI_STATUS
				=#documentManageInfo.tepStatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.tepchannel">
				c.VDI_CHANNEL
				=#documentManageInfo.tepchannel#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginDate">
                <![CDATA[ to_date(VDMI_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#documentManageInfo.beginDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endDate">
                <![CDATA[ to_date(VDMI_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#documentManageInfo.endDate#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.beginDate">
                <![CDATA[ str_to_date(VDMI_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#documentManageInfo.beginDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.endDate">
                <![CDATA[ str_to_date(VDMI_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#documentManageInfo.endDate#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.vdmiError">
				VDMI_ERROR is not null
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="and">
			<isNotEmpty prepend="" property="documentManageInfo.vdmiError">VDMI_ERROR is not null
			</isNotEmpty>
			<isEmpty prepend="" property="documentManageInfo.vdmiError">VDMI_ERROR is null or
				VDMI_ERROR=' '
			</isEmpty>
		</dynamic>
	</select>
	<!-- 单证管理end -->
	<!-- 收费凭证begin -->
	<select id="findChargesVoucher" parameterClass="java.util.Map"
		resultClass="chargesVoucherInfo">
		select
		VCV_ID as vcvId,
		VCV_COWNNUM as cownNum,
		VCV_LIFCNUM as lifcNum,
		VCV_INST_ID as instId,
		VCV_CHANNEL as channel,
		VCV_CHERNUM as cherNum,
		VCV_TTMPRCNO as ttmprcno,
		VCV_PLANLONGDESC as planLongDesc,
		VCV_BILLFREQ as billFreq,
		VCV_FEETYP as feeTyp,
		VCV_INSTFROM as
		instFrom,
		VCV_INSTTO as instTo,
		VCV_ACCTAMT as acctAmt,
		VCV_TRDT as trdt,
		VCV_DATA_DATE as createDate,
		VCV_ZNPRJTCD as znprjTcd,
		VCV_CCARDYN as
		ccardYn,
		VCV_REPNUM as repNum,
		VCV_LONGDESC as longDesc,
		VCV_SIGN as
		sign,
		VCV_LOANBANK as loanBank,
		VCV_REMARKS as reMarks,
		b.VEII_CLTPCODE
		as zipCode,
		b.VEII_CLTADDR as feeAdd
		from VMS_CHARGES_VOUCHER a
		left join
		VMS_EXPRESS_INFO_I b on a.VCV_CHERNUM=b.VEII_CHERNUM
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.ttmprcno">
				VCV_TTMPRCNO like
				'%$chargesVoucherInfo.ttmprcno$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.instId">
				VCV_INST_ID
				=#chargesVoucherInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.loanBank">
				VCV_LOANBANK like
				'%$chargesVoucherInfo.loanBank$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.cherNum">
				VCV_CHERNUM like
				'%$chargesVoucherInfo.cherNum$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.channel">
				VCV_CHANNEL
				=#chargesVoucherInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.sign">
				VCV_SIGN like
				'%$chargesVoucherInfo.sign$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.repNum">
				VCV_REPNUM like
				'%$chargesVoucherInfo.repNum$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.ccardYn">
				VCV_CCARDYN
				=#chargesVoucherInfo.ccardYn#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.trdtBegin">
                <![CDATA[ to_date(VCV_TRDT,'yyyy-mm-dd hh24:mi:ss') >= to_date(#chargesVoucherInfo.trdtBegin#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.trdtEnd">
                <![CDATA[ to_date(VCV_TRDT,'yyyy-mm-dd hh24:mi:ss') <= to_date(#documentManageInfo.trdtEnd#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->		
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.trdtBegin">
                <![CDATA[ str_to_date(VCV_TRDT,'%Y-%m-%d %H:%i:%s') >= str_to_date(#chargesVoucherInfo.trdtBegin#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.trdtEnd">
                <![CDATA[ str_to_date(VCV_TRDT,'%Y-%m-%d %H:%i:%s') <= str_to_date(#documentManageInfo.trdtEnd#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
	</select>
	<select id="findChargesVoucherCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_CHARGES_VOUCHER a
		left join VMS_EXPRESS_INFO_I b
		on a.VCV_CHERNUM=b.VEII_CHERNUM
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.ttmprcno">
				VCV_TTMPRCNO
				=#chargesVoucherInfo.ttmprcno#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.instId">
				VCV_INST_ID
				=#chargesVoucherInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.loanBank">
				VCV_LOANBANK like
				'%$chargesVoucherInfo.loanBank$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.cherNum">
				VCV_CHERNUM
				=#chargesVoucherInfo.cherNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.channel">
				VCV_CHANNEL
				=#chargesVoucherInfo.channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.sign">
				VCV_SIGN like
				'%$chargesVoucherInfo.sign$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.repNum">
				VCV_REPNUM
				=#chargesVoucherInfo.repNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.ccardYn">
				VCV_CCARDYN
				=#chargesVoucherInfo.ccardYn#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.trdtBegin">
                <![CDATA[ to_date(VCV_TRDT,'yyyy-mm-dd hh24:mi:ss') >= to_date(#chargesVoucherInfo.trdtBegin#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.trdtEnd">
                <![CDATA[ to_date(VCV_TRDT,'yyyy-mm-dd hh24:mi:ss') <= to_date(#documentManageInfo.trdtEnd#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="chargesVoucherInfo.trdtBegin">
                <![CDATA[ str_to_date(VCV_TRDT,'%Y-%m-%d %H:%i:%s') >= str_to_date(#chargesVoucherInfo.trdtBegin#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="documentManageInfo.trdtEnd">
                <![CDATA[ str_to_date(VCV_TRDT,'%Y-%m-%d %H:%i:%s') <= str_to_date(#documentManageInfo.trdtEnd#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
	</select>
	<!-- 收费凭证end -->
	<!-- 会计分录begin -->
	<!-- 会计分录xml导出数据 -->
	<select id="findAccountingToSun" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		a.VSAD_ACCOUNT_CODE as accountCode,
		a.VSAD_ACCOUNTING_PERIOD as
		accountingPeriod,
		a.VSAD_T1 as la1Fund,
		a.VSAD_T2 as la2Channel,
		a.VSAD_T3 as la3Category,
		a.VSAD_T4 as vsadT4,
		a.VSAD_T5 as la5Plan,
		a.VSAD_T6 as la6District,
		a.VSAD_T7 as la7Unit,
		a.VSAD_T8 as vsadT8,
		a.VSAD_T9 as vsadT9,
		a.VSAD_T10 as la10Branch,
		sum(a.VSAD_BASE_AMOUNT)
		as baseAmount,
		a.VSAD_CURRENCY as currency,
		a.VSAD_DC as dc,
		a.VSAD_DESCRIPTION as transactiondescription,
		a.VSAD_JOURNAL_SOURCE as
		journalSource,
		sum(a.VSAD_TRANSACTION_AMOUNT) as transactionAmount,
		a.VSAD_TRANSACTION_DATE as transactionDate,
		a.VSAD_TRANSACTION_REFERENCE as transactionReference,
		b.VFM_ACCOUNT_PERIOD_START as accountPeriodStart
		from
		VMS_SALE_ACCOUNT_DETAILS a
		left join 
		
			<!--  <![CDATA[(select  VFM_ACCOUNT_PERIOD,VFM_ACCOUNT_PERIOD_START  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))]]> -->
		 <![CDATA[(select  VFM_ACCOUNT_PERIOD,VFM_ACCOUNT_PERIOD_START  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))]]>
		
		b on
		b.VFM_ACCOUNT_PERIOD=a.VSAD_ACCOUNTING_PERIOD
		where
		a.VSAD_ACCOUNTING_PERIOD=b.VFM_ACCOUNT_PERIOD and a.VSAD_FLG='1'
		group
		by
		VSAD_ACCOUNT_CODE,
		VSAD_ACCOUNTING_PERIOD,
		VSAD_T1,
		VSAD_T2,
		VSAD_T3,
		VSAD_T4,
		VSAD_T5,
		VSAD_T6,
		VSAD_T7,
		VSAD_T8,
		VSAD_T9,
		VSAD_T10,
		VSAD_CURRENCY,
		VSAD_DC,
		VSAD_DESCRIPTION,
		VSAD_JOURNAL_SOURCE,
		VSAD_TRANSACTION_DATE,
		VSAD_TRANSACTION_REFERENCE,
		VFM_ACCOUNT_PERIOD_START

	</select>
	<update id="updateChangeFlag" parameterClass="java.util.Map">
		update
		VMS_TRANS_INFO set WITHDRAWYN='N'
		where TRANS_ID in (select
		VIPI_TRANS_ID from VMS_INPUT_PTOV_INFO where
		VIPI_WITHDRAWYN='N' )
	</update>
	<!-- 会计分录导入及数据处理 -->
	<insert id="transToInaccdet_T" parameterClass="java.util.Map">
		INSERT INTO
		VMS_INPUT_INACCDET_T
		<!-- SELECT UNIQUE( VII_EXPENSE_DOCNUM ||VII_ACCOUNT_CODE ||VII_LA2CHANNEL 
			||VII_LA5PLAN ||VII_LA6DISTRICT ||VII_LA7UNIT ||VII_LA1OBRANCH), -->


		SELECT UNIQUE(concat(
		VII_EXPENSE_DOCNUM
		,VII_ACCOUNT_CODE
		,VII_LA2CHANNEL
		,VII_LA5PLAN
		,VII_LA6DISTRICT
		,VII_LA7UNIT
		,VII_LA1OBRANCH)),



		VII_BILL_CODE,
		VII_BILL_NO,
		VII_BUDGET_SUBJET,
		VII_BUDGET_CODE,
		VII_BUDGET_COST_CENTER,
		VII_BUDGET_CO,
		VII_TRANSACTION_REF,
		VII_EXPENSE_DOCNUM,
		VII_JOURNAL_TYPE,
		VII_JOURNAL_SOURCE,
		VII_ACCOUNTING_PERIOD,
		VII_TRANSACTION_DATE,
		VII_TRANSACTION_DES,
		VII_ACCOUNT_CODE,
		VII_ACCOUNT_NAME,
		VII_CURRENCY,
		VII_TRANSACTION_AMOUNT,
		VII_RATE,
		VII_BASE_AMOUNT,
		VII_DC,
		VII_LA1FUND,
		VII_LA2CHANNEL,
		VII_LA3CATEGORY,
		VII_LA5PLAN,
		VII_LA6DISTRICT,
		VII_LA7UNIT,
		VII_LA1OBRANCH,
		VII_SUBJECT_TYPE,
		VII_LAYOUT_IDENITIFIER,
		#batchnos#
		FROM
		VMS_INPUT_INACCDET
	</insert>
	<delete id="deleteInaccdet" parameterClass="java.util.Map">
		delete from
		VMS_INPUT_INACCDET
	</delete>
	<insert id="transToInaccdet_ALL" parameterClass="java.util.Map">
		insert into
		VMS_INPUT_INACCDET_ALL
		select
		s.VIIT_ID,
		s.VIIT_BILL_CODE,
		s.VIIT_BILL_NO,
		s.VIIT_BUDGET_SUBJET,
		s.VIIT_BUDGET_CODE,
		s.VIIT_BUDGET_COST_CENTER,
		s.VIIT_TRANSACTION_REF,
		s.VIIT_EXPENSE_DOCNUM,
		s.VIIT_JOURNAL_TYPE,
		s.VIIT_JOURNAL_SOURCE,
		s.VIIT_ACCOUNTING_PERIOD,
		s.VIIT_TRANSACTION_DATE,
		s.VIIT_TRANSACTION_DES,
		s.VIIT_ACCOUNT_CODE,
		s.VIIT_ACCOUNT_NAME,
		s.VIIT_CURRENCY,
		s.VIIT_TRANSACTION_AMOUNT,
		s.VIIT_RATE,
		s.VIIT_BASE_AMOUNT,
		s.VIIT_DC,
		s.VIIT_LA1FUND,
		s.VIIT_LA2CHANNEL,
		s.VIIT_LA3CATEGORY,
		s.VIIT_LA5PLAN,
		s.VIIT_LA6DISTRICT,
		s.VIIT_LA7UNIT,
		s.VIIT_LA1OBRANCH,
		s.VIIT_SUBJECT_TYPE,
		s.VIIT_LAYOUT_IDENITIFIER,
		s.BATCHNO,
		s.VIIT_BUDGET_CO
		from VMS_INPUT_INACCDET_T s
		where s.VIIT_ID
		not in (select VIIT_ID from VMS_INPUT_INACCDET_ALL)
	</insert>
	<delete id="deleteInaccdet_T" parameterClass="java.util.Map">
		delete from
		VMS_INPUT_INACCDET_T
	</delete>
	<insert id="transToIncomeDetailInfo" parameterClass="java.util.Map">
		INSERT
		INTO
		VMS_INCOME_DETAILS_INFO
		SELECT
		VIIT_BILL_CODE,
		VIIT_BILL_NO,
		VIIT_BUDGET_SUBJET,
		VIIT_BUDGET_CODE,
		VIIT_BUDGET_COST_CENTER,
		VIIT_BUDGET_CO,
		VIIT_TRANSACTION_REF,
		VIIT_EXPENSE_DOCNUM,
		VIIT_JOURNAL_TYPE,
		VIIT_JOURNAL_SOURCE,
		VIIT_ACCOUNTING_PERIOD,
		VIIT_TRANSACTION_DATE,
		VIIT_TRANSACTION_DES,
		VIIT_ACCOUNT_CODE,
		VIIT_ACCOUNT_NAME,
		VIIT_CURRENCY,
		VIIT_TRANSACTION_AMOUNT,
		VIIT_RATE,
		VIIT_BASE_AMOUNT,
		VIIT_LA1FUND,
		VIIT_LA2CHANNEL,
		VIIT_LA3CATEGORY,
		VIIT_LA5PLAN,
		VIIT_LA6DISTRICT,
		VIIT_LA7UNIT,
		VIIT_LA1OBRANCH,
		VIIT_LAYOUT_IDENITIFIER,
		VIIT_SUBJECT_TYPE,
		'匹配成功',
		'0',
		0,
		VIIT_DC,
		BATCHNO,
		CASE
		WHEN VIIT_SUBJECT_TYPE='1'
		THEN '1'
		WHEN
		VIIT_SUBJECT_TYPE='2'
		THEN '1'
		ELSE '15'
		END ,
		'0',
		VIIT_ID
		FROM
		VMS_INPUT_INACCDET_ALL
		WHERE BATCHNO=#batchnos#
	</insert>
	<insert id="transToInvoiceInfo_t" parameterClass="java.util.Map">
		INSERT INTO
		VMS_INPUT_INVOICE_INFO_T
		(
		BILL_ID,
		BILL_CODE,
		BILL_NO,
		TAX_AMT_SUM,
		DATASTATUS,
		VAT_OUT_AMT,
		CONFORM_FLG,
		BALANCE,
		FAPIAO_TYPE,
		IDENTIFY_DATE,
		SUBJECT_TYPE,
		EXPENSE_DOCNUM
		)
		SELECT VIIT_BILL_CODE
		||VIIT_BILL_NO,
		VIIT_BILL_CODE,
		VIIT_BILL_NO,
		VIIT_TRANSACTION_AMOUNT,
		CASE
		WHEN
		VIIT_SUBJECT_TYPE='1'
		THEN '1'
		WHEN VIIT_SUBJECT_TYPE='2'
		THEN '1'
		ELSE
		'15'
		END ,
		'',
		'1',
		'0',
		'0',
		VIIT_TRANSACTION_DATE,
		VIIT_SUBJECT_TYPE,
		VIIT_EXPENSE_DOCNUM
		FROM VMS_INPUT_INACCDET_ALL
		WHERE
		VIIT_ACCOUNT_CODE='8261000000'
		AND BATCHNO=#batchnos#
	</insert>
	<insert id="transToInvoiceInfo" parameterClass="java.util.Map">
		insert into
		VMS_INPUT_INVOICE_INFO
		select
		s.BILL_ID,
		s.BILL_CODE,
		s.BILL_NO,
		s.BILL_DATE,
		s.NAME,
		s.TAXNO,
		s.ADDRESSANDPHONE,
		s.BANKANDACCOUNT,
		s.AMT_SUM,
		s.TAX_AMT_SUM,
		s.SUM_AMT,
		s.REMARK,
		s.DRAWER,
		s.REVIEWER,
		s.PAYEE,
		s.VENDOR_NAME,
		s.VENDOR_TAXNO,
		s.VENDOR_ADDRESSANDPHONE,
		s.VENDOR_BANKANDACCOUNT,
		s.INSTCODE,
		s.NOTICE_NO,
		s.DATASTATUS,
		s.DESCRIPTION,
		s.VAT_OUT_PROPORTION,
		s.VAT_OUT_AMT,
		s.CONFORM_FLG,
		s.BALANCE,
		s.FAPIAO_TYPE,
		s.SCAN_DATE,
		s.SCAN_OPERATOR,
		s.IDENTIFY_DATE,
		s.OPERATESTATUS,
		s.URL_BILL_IMAGE,
		s.DEDUC_DATE,
		s.CANCEL_REASON,
		s.SUBJECT_TYPE,
		s.EXPENSE_DOCNUM
		from VMS_INPUT_INVOICE_INFO_T s
		where
		s.BILL_ID not in (select BILL_ID from VMS_INPUT_INVOICE_INFO )
	</insert>
	<delete id="deleteIncoiceInfo_t">
		delete from VMS_INPUT_INVOICE_INFO_T
	</delete>
	<insert id="transToSaleAccountDetails" parameterClass="java.util.Map">
		INSERT
		INTO VMS_SALE_ACCOUNT_DETAILS
		(SELECT
		a.VIIT_ID,
		'',
		CASE
		WHEN
		VIIT_ACCOUNT_CODE='8261000000'
		THEN a.VIIT_ACCOUNT_CODE
		ELSE
		'8260000020'
		END ,
		a.VIIT_ACCOUNTING_PERIOD,
		a.VIIT_LA1FUND,
		a.VIIT_LA2CHANNEL,
		a.VIIT_LA3CATEGORY,
		'',
		a.VIIT_LA5PLAN,
		a.VIIT_LA6DISTRICT,
		a.VIIT_LA7UNIT,
		'',
		'',
		a.VIIT_LA1OBRANCH,
		b.VIIT_BASE_AMOUNT,
		a.VIIT_CURRENCY,
		CASE
		WHEN
		a.VIIT_ACCOUNT_CODE='8261000000'
		THEN 'D'
		ELSE 'C'
		END ,
		a.VIIT_TRANSACTION_DES,
		'VMS',
		b.VIIT_TRANSACTION_AMOUNT,
		a.VIIT_TRANSACTION_DATE,
		b.VIIT_TRANSACTION_REF,
		
		<!-- to_char(sysdate,'yyyy-mm-dd'), -->
		date_format(sysdate(),'%Y-%m-%d'),
		
		'1'
		FROM VMS_INPUT_INACCDET_ALL a
		LEFT
		JOIN
		(SELECT VIIT_EXPENSE_DOCNUM,
		VIIT_BASE_AMOUNT,
		VIIT_TRANSACTION_REF,
		VIIT_TRANSACTION_AMOUNT
		FROM
		VMS_INPUT_INACCDET_ALL
		WHERE VIIT_ACCOUNT_CODE='8261000000'
		) b
		ON
		b.VIIT_EXPENSE_DOCNUM =a.VIIT_EXPENSE_DOCNUM
		WHERE
		a.VIIT_SUBJECT_TYPE='2'
		AND
		a.BATCHNO=#batchnos#
		)
	</insert>
	<!-- 销项 -->
	<select id="findAccountingEntriesInfoSale" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		VSAD_ID as vsadId,
		VSAD_ACCOUNT_CODE as accountCode,
		VSAD_ACCOUNTING_PERIOD as accountingPeriod,
		VSAD_T1 as la1Fund,
		VSAD_T2
		as la2Channel,
		VSAD_T3 as la3Category,
		VSAD_T4 as vsadT4,
		VSAD_T5 as
		la5Plan,
		VSAD_T6 as la6District,
		VSAD_T7 as la7Unit,
		VSAD_T8 as vsadT8,
		VSAD_T9 as vsadT9,
		VSAD_T10 as la10Branch,
		VSAD_BASE_AMOUNT as
		baseAmount,
		VSAD_CURRENCY as currency,
		VSAD_DC as dc,
		VSAD_DESCRIPTION as
		transactiondescription,
		VSAD_JOURNAL_SOURCE as journalSource,
		VSAD_TRANSACTION_AMOUNT as transactionAmount,
		VSAD_TRANSACTION_DATE as
		transactionDate,
		VSAD_TRANSACTION_REFERENCE as transactionReference,
		VSAD_DATA_DATE as vsadDate,
		VSAD_FLG as vsadFlg,
		VSAD_CHERNUM as cherNum
		from VMS_SALE_ACCOUNT_DETAILS
		where 1=1
		<dynamic>
			<isEmpty prepend="and" property="accountingEntriesInfo.accountingPeriod">
				VSAD_ACCOUNTING_PERIOD=(
				select
				VFM_ACCOUNT_PERIOD as accountingPeriod
				from VMS_FINANCE_MONTH 
		    	<!-- <![CDATA[where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))]]> -->
			<![CDATA[where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))]]>
			
			</isEmpty>
			<isNotEmpty prepend="and"
				property="accountingEntriesInfo.accountingPeriod">
				VSAD_ACCOUNTING_PERIOD
				=#accountingEntriesInfo.accountingPeriod#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				VSAD_ACCOUNT_CODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la2Channel">
				VSAD_T2
				=#accountingEntriesInfo.la2Channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la5Plan">
				VSAD_T5
				=#accountingEntriesInfo.la5Plan#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la6District">
				VSAD_T6
				=#accountingEntriesInfo.la6District#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la10Branch">
				VSAD_T10
				=#accountingEntriesInfo.la10Branch#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.cherNum">
				VSAD_CHERNUM
				=#accountingEntriesInfo.cherNum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.vsadFlg">
				VSAD_FLG
				=#accountingEntriesInfo.vsadFlg#
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findAccountingEntriesInfoSaleCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_SALE_ACCOUNT_DETAILS
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- 销项备案 -->
	<!-- 生成备案 -->
	<insert id="findsaleAccountingEntriesInfo" parameterClass="java.util.Map">
		insert into VMS_SALE_ACCOUNT_DETAILS
		select
		<!-- VSAD_ID||'F', -->
		concat(VSAD_ID,'F'),
		'8260000000',
		VSAD_ACCOUNTING_PERIOD,
		VSAD_T1,
		VSAD_T2,
		VSAD_T3,
		VSAD_T4,
		VSAD_T5,
		VSAD_T6,
		VSAD_T7,
		VSAD_T8,
		VSAD_T9,
		VSAD_T10,
		ROUND(VSAD_TRANSACTION_AMOUNT/1.06*0.06,2),
		VSAD_CURRENCY,
		'C',
		VSAD_DESCRIPTION,
		VSAD_JOURNAL_SOURCE,
		ROUND(VSAD_TRANSACTION_AMOUNT/1.06*0.06,2),
		VSAD_TRANSACTION_DATE,
		VSAD_TRANSACTION_REFERENCE,
		VSAD_DATA_DATE,
		'2',
		VSAD_CHERNUM
		from
		VMS_SALE_ACCOUNT_DETAILS
		where
		VSAD_ACCOUNTING_PERIOD=#accountingEntriesInfo.accountingPeriod#
		and
		VSAD_T5=#accountingEntriesInfo.la5Plan#
		and
		VSAD_T10=#accountingEntriesInfo.la10Branch#
		and VSAD_FLG='0'
		and
		VSAD_DC='D'
	</insert>
	<!-- 更新备案状态 -->
	<update id="updateSaleAccountingEntriesInfo" parameterClass="java.util.Map">
		update VMS_SALE_ACCOUNT_DETAILS set VSAD_FLG='3'
		where
		VSAD_ACCOUNTING_PERIOD=#accountingEntriesInfo.accountingPeriod#
		and
		VSAD_T5=#accountingEntriesInfo.la5Plan#
		and
		VSAD_T10=#accountingEntriesInfo.la10Branch#
		and VSAD_FLG='0'
		and
		VSAD_DC='D'
	</update>
	<select id="findAccountingEntriesInfoSale1" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		VSAD_ID as vsadId,
		VSAD_ACCOUNT_CODE as accountCode,
		VSAD_ACCOUNTING_PERIOD as accountingPeriod,
		VSAD_T1 as la1Fund,
		VSAD_T2
		as la2Channel,
		VSAD_T3 as la3Category,
		VSAD_T4 as vsadT4,
		VSAD_T5 as
		la5Plan,
		VSAD_T6 as la6District,
		VSAD_T7 as la7Unit
		from
		VMS_SALE_ACCOUNT_DETAILS
		where
		VSAD_ACCOUNTING_PERIOD=#accountingEntriesInfo.accountingPeriod#
		and
		VSAD_T5=#accountingEntriesInfo.la5Plan#
		and
		VSAD_T10=#accountingEntriesInfo.la10Branch#
		and VSAD_FLG='0'
		and
		VSAD_DC='D'
	</select>
	<!-- 销项导出数据 -->
	<select id="findtoExcelAccountingEntriesInfo" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		sum(VSAD_BASE_AMOUNT) sumbaseAmount,
		sum(VSAD_TRANSACTION_AMOUNT) sumtransactionAmount,
		VSAD_ACCOUNT_CODE as
		accountCode,
		VSAD_ACCOUNTING_PERIOD as accountingPeriod,
		VSAD_T1 as
		la1Fund,
		VSAD_T2 as la2Channel,
		VSAD_T3 as la3Category,
		VSAD_T5 as
		la5Plan,
		VSAD_T6 as la6District,
		VSAD_T7 as la7Unit,
		VSAD_T10 as
		la10Branch,
		VSAD_CURRENCY as currency,
		VSAD_DC as dc,
		VSAD_DESCRIPTION as
		transactiondescription,
		VSAD_JOURNAL_SOURCE as journalSource,
		VSAD_TRANSACTION_DATE as transactionDate,
		VSAD_TRANSACTION_REFERENCE as
		transactionReference
		from VMS_SALE_ACCOUNT_DETAILS
		where
		VSAD_ACCOUNTING_PERIOD=#accountingEntriesInfo.accountingPeriod#
		and
		VSAD_FLG='2'
		and VSAD_T10=#accountingEntriesInfo.la10Branch#
		group by
		VSAD_ACCOUNT_CODE ,
		VSAD_ACCOUNTING_PERIOD ,
		VSAD_T1,
		VSAD_T2,
		VSAD_T3,
		VSAD_T5,
		VSAD_T6,
		VSAD_T7,
		VSAD_T10,
		VSAD_CURRENCY,
		VSAD_DC,
		VSAD_DESCRIPTION,
		VSAD_JOURNAL_SOURCE,
		VSAD_TRANSACTION_DATE,
		VSAD_TRANSACTION_REFERENCE
	</select>
	<!-- 进项 -->
	<select id="findAccountingEntriesInfo" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BUDGET_SUBJET as
		budgetSubjet,
		BUDGET_CODE as budgetCode,
		BUDGET_COST_CENTER as
		budgetCostCenter,
		BUDGET_CO as budgetCo,
		TRANSACTIONREFERENCE as
		transactionReference,
		EXPENSEDOCNUM as expenseDocNum,
		JOURNALTYPE as
		journalType,
		JOURNALSOURCE as journalSource,
		ACCOUNTINGPERIOD as
		accountingPeriod,
		TRANSACTIONDATE as transactionDate,
		TRANSACTIONDESCRIPTION as transactiondescription,
		ACCOUNTCODE as
		accountCode,
		ACCOUNTNAME as accountName,
		CURRENCY as currency,
		TRANSACTIONAMOUNT as transactionAmount,
		RATE as rate,
		BASEAMOUNT as
		baseAmount,
		LA1FUND as la1Fund,
		LA2CHANNEL as la2Channel,
		LA3CATEGORY as
		la3Category,
		LA5PLAN as la5Plan,
		LA6DISTRICT as la6District,
		LA7UNIT as
		la7Unit,
		LA10BRANCH as la10Branch,
		LAYOUTIDENITIFIER as
		layoutIdenitifier,
		SUBJECTTYPE as subjectType,
		MAPPINGSTATUS as
		mappingStatus,
		COSTRATIO as costRatio,
		DEDUCTIONAMOUNT as
		deductionAmount,
		DC as dc,
		VIDI_DATE as vidiDate
		from
		VMS_INCOME_DETAILS_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la1Fund">
				LA1FUND
				=#accountingEntriesInfo.la1Fund#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la2Channel">
				LA2CHANNEL
				=#accountingEntriesInfo.la2Channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la3Category">
				LA3CATEGORY
				=#accountingEntriesInfo.la3Category#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la5Plan">
				LA5PLAN
				=#accountingEntriesInfo.la5Plan#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la6District">
				LA6DISTRICT
				=#accountingEntriesInfo.la6District#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la7Unit">
				LA7UNIT
				=#accountingEntriesInfo.la7Unit#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la10Branch">
				LA10BRANCH
				=#accountingEntriesInfo.la10Branch#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#accountingEntriesInfo.dateBegin#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#accountingEntriesInfo.dateEnd#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#accountingEntriesInfo.dateBegin#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#accountingEntriesInfo.dateEnd#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		order by BILL_CODE
	</select>
	<!-- 进项导入临时接口表 -->
	<insert id="insertInputInaccdet" parameterClass="java.util.Map">
		insert into
		VMS_INPUT_INACCDET values (
		#billCode#,
		#billNo#,
		#budgetSubjet#,
		#budgetCode#,
		#budgetCostCenter#,
		#budgetCo#,
		#transactionReference#,
		#expenseDocNum#,
		#journalType#,
		#journalSource#,
		#accountingPeriod#,
		#transactionDate#,
		#transactiondescription#,
		#accountCode#,
		#accountName#,
		#currency#,
		#transactionAmount#,
		#rate#,
		#baseAmount#,
		#dc#,
		#la1Fund#,
		#la2Channel#,
		#la3Category#,
		#la5Plan#,
		#la6District#,
		#la7Unit#,
		#la10Branch#,
		#subjectType#,
		#layoutIdenitifier#
		)
	</insert>
	<select id="findAccountingEntriesInfoCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from
		VMS_INCOME_DETAILS_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la1Fund">
				LA1FUND
				=#accountingEntriesInfo.la1Fund#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la2Channel">
				LA2CHANNEL
				=#accountingEntriesInfo.la2Channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la3Category">
				LA3CATEGORY
				=#accountingEntriesInfo.la3Category#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la5Plan">
				LA5PLAN
				=#accountingEntriesInfo.la5Plan#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la6District">
				LA6DISTRICT
				=#accountingEntriesInfo.la6District#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la7Unit">
				LA7UNIT
				=#accountingEntriesInfo.la7Unit#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la10Branch">
				LA10BRANCH
				=#accountingEntriesInfo.la10Branch#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#accountingEntriesInfo.dateBegin#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#accountingEntriesInfo.dateEnd#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#accountingEntriesInfo.dateBegin#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#accountingEntriesInfo.dateEnd#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
	</select>
	<select id="findAccountingEntriesReports" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		BUDGET_SUBJET as budgetSubjet,
		BUDGET_CODE as budgetCode,
		BUDGET_COST_CENTER as budgetCostCenter,
		BUDGET_CO as budgetCo,
		ACCOUNTINGPERIOD as accountingPeriod,
		SUBJECTTYPE,
		SUM(DEDUCTIONAMOUNT)
		as deductionAmount
		from
		VMS_INCOME_DETAILS_INFO
		where
		JOURNALSOURCE='VMS'
		and SUBJECTTYPE in ('0','1')
		and DC='D'
		<dynamic>
			<isNotEmpty prepend="and"
				property="accountingEntriesInfo.accountingPeriod">
				ACCOUNTINGPERIOD =#accountingEntriesInfo.accountingPeriod#
			</isNotEmpty>
		</dynamic>
		group by
		BUDGET_SUBJET,
		BUDGET_CODE,
		BUDGET_COST_CENTER,
		BUDGET_CO,
		SUBJECTTYPE,
		ACCOUNTINGPERIOD
	</select>
	<select id="findAccountingEntriesReports1" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		TRANSACTIONREFERENCE as transactionReference,
		JOURNALSOURCE as
		journalSource,
		ACCOUNTINGPERIOD as accountingPeriod,
		TRANSACTIONDATE as
		transactionDate,
		TRANSACTIONDESCRIPTION as transactiondescription,
		ACCOUNTCODE as accountCode,
		CURRENCY as currency,
		sum(TRANSACTIONAMOUNT) as transactionAmount,
		sum(BASEAMOUNT) as
		baseAmount,
		LA1FUND as la1Fund,
		LA2CHANNEL as la2Channel,
		LA3CATEGORY as
		la3Category,
		LA5PLAN as la5Plan,
		LA6DISTRICT as la6District,
		LA7UNIT as
		la7Unit,
		LA10BRANCH as la10Branch,
		DC as dc
		from
		VMS_INCOME_DETAILS_INFO
		where
		JOURNALSOURCE='VMS'
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.accountCode">
				ACCOUNTCODE
				=#accountingEntriesInfo.accountCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la1Fund">
				LA1FUND
				=#accountingEntriesInfo.la1Fund#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la2Channel">
				LA2CHANNEL
				=#accountingEntriesInfo.la2Channel#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la3Category">
				LA3CATEGORY
				=#accountingEntriesInfo.la3Category#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la5Plan">
				LA5PLAN
				=#accountingEntriesInfo.la5Plan#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la6District">
				LA6DISTRICT
				=#accountingEntriesInfo.la6District#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la7Unit">
				LA7UNIT
				=#accountingEntriesInfo.la7Unit#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.la10Branch">
				LA10BRANCH
				=#accountingEntriesInfo.la10Branch#
			</isNotEmpty>
		</dynamic>
		
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') >= to_date(#accountingEntriesInfo.dateBegin#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ to_date(VIDI_DATE,'yyyy-mm-dd hh24:mi:ss') <= to_date(#accountingEntriesInfo.dateEnd#,'yyyy-mm-dd hh24:mi:ss') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateBegin">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') >= str_to_date(#accountingEntriesInfo.dateBegin#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.dateEnd">
                <![CDATA[ str_to_date(VIDI_DATE,'%Y-%m-%d %H:%i:%s') <= str_to_date(#accountingEntriesInfo.dateEnd#,'%Y-%m-%d %H:%i:%s') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.journalSource">
				JOURNALSOURCE like
				'%$accountingEntriesInfo.journalSource$%'
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="accountingEntriesInfo.subjectType">
				SUBJECTTYPE like
				'%$accountingEntriesInfo.subjectType$%'
			</isNotEmpty>
		</dynamic>
		group by
		ACCOUNTINGPERIOD,
		ACCOUNTCODE,
		LA1FUND,
		LA2CHANNEL,
		LA3CATEGORY,
		LA5PLAN,
		LA6DISTRICT,
		LA7UNIT,
		LA10BRANCH,
		CURRENCY,
		DC,
		TRANSACTIONDESCRIPTION,
		JOURNALSOURCE,
		TRANSACTIONDATE,
		TRANSACTIONREFERENCE
	</select>

	<!-- 会计分录end -->


	<!-- <update id="updateTable" parameterClass="java.util.Map" > -->
	<!-- create table $tName$ -->
	<!-- <iterate property="list" conjunction="," open="(" close=")"> -->
	<!-- $list[].cName$ $list[].typeName$ $list[].flag$ -->
	<!-- </iterate>; -->
	<!-- comment on table $tName$ is '$tzName$'; -->
	<!-- <iterate property="list" conjunction=""> -->
	<!-- comment on column $tName$.$list[].cName$ is '$list[].zName$'; -->
	<!-- </iterate> -->
	<!-- <isNotEmpty property="id"> -->
	<!-- alter table $tName$ add constraint $tName$_PK primary key ($id$); -->
	<!-- </isNotEmpty> -->
	<!-- </update> -->


	<!-- 进项转出 -->
	<select id="findInvoiceSurtaxMetlife" parameterClass="java.util.Map"
		resultClass="inputInvoiceInfo">
		select
		BILL_ID as billId,
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BILL_DATE as billDate,
		NAME as name,
		TAXNO as taxno,
		ADDRESSANDPHONE as
		addressandphone,
		BANKANDACCOUNT as bankandaccount,
		AMT_SUM as amtSum,
		TAX_AMT_SUM as taxAmtSum,
		SUM_AMT as sumAmt,
		REMARK as remark,
		SUBJECT_TYPE as subjectType,
		DRAWER as
		drawer,
		REVIEWER as reviewer,
		PAYEE as payee,
		VENDOR_NAME as vendorName,
		VENDOR_TAXNO as vendorTaxno,
		VENDOR_ADDRESSANDPHONE as
		vendorAddressandphone,
		VENDOR_BANKANDACCOUNT
		as vendorBankandaccount,
		INSTCODE as instcode,
		NOTICE_NO as noticeNo,
		DATASTATUS as datastatus,
		DESCRIPTION as description,
		VAT_OUT_PROPORTION as vatOutProportion,
		VAT_OUT_AMT as vatOutAmt,
		CONFORM_FLG as conformFlg,
		BALANCE as balance,
		FAPIAO_TYPE as
		fapiaoType,
		EXPENSE_DOCNUM as expenseDocnum,
		(select
		VMS_BILL_OPERATE_INFO.BILL_DATE from
		VMS_BILL_OPERATE_INFO where
		VMS_BILL_OPERATE_INFO.BILL_ID=VMS_INPUT_INVOICE_INFO.BILL_ID and
		VMS_BILL_OPERATE_INFO.OPERATE_RESULT=0 and
		VMS_BILL_OPERATE_INFO.operate_type=22) as verifyData
		from
		VMS_INPUT_INVOICE_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.datastatus">
				DATASTATUS =
				#inputInvoiceInfo.datastatus#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.billNo">
				BILL_NO =
				#inputInvoiceInfo.billNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.billCode">
				BILL_CODE =
				#inputInvoiceInfo.billCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.subjectType">
				SUBJECT_TYPE like
				'%$inputInvoiceInfo.subjectType$%'
			</isNotEmpty>
		</dynamic>

	</select>
	<select id="findInvoiceSurtaxMetlifeCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from
		VMS_INPUT_INVOICE_INFO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.status">
				DATASTATUS =
				#inputInvoiceInfo.status#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.billNo">
				BILL_NO =
				#inputInvoiceInfo.billNo#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.billCode">
				BILL_CODE =
				#inputInvoiceInfo.billCode#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.subjectType">
				SUBJECT_TYPE like
				'%$inputInvoiceInfo.subjectType$%'
			</isNotEmpty>
		</dynamic>
	</select>
	<select id="findListInvoice" parameterClass="java.util.Map"
		resultClass="accountingEntriesInfo">
		select
		BILL_CODE as billCode,
		BILL_NO as billNo,
		BUDGET_SUBJET as
		budgetSubjet,
		BUDGET_CODE as budgetCode,
		BUDGET_COST_CENTER as
		budgetCostCenter,
		BUDGET_CO as budgetCo,
		TRANSACTIONREFERENCE as
		transactionReference,
		EXPENSEDOCNUM as expenseDocNum,
		JOURNALTYPE as
		journalType,
		JOURNALSOURCE as journalSource,
		ACCOUNTINGPERIOD as
		accountingPeriod,
		TRANSACTIONDATE as transactionDate,
		TRANSACTIONDESCRIPTION as transactiondescription,
		ACCOUNTCODE as
		accountCode,
		ACCOUNTNAME as accountName,
		CURRENCY as currency,
		TRANSACTIONAMOUNT as transactionAmount,
		RATE as rate,
		BASEAMOUNT as
		baseAmount,
		LA1FUND as la1Fund,
		LA2CHANNEL as la2Channel,
		LA3CATEGORY as
		la3Category,
		LA5PLAN as la5Plan,
		LA6DISTRICT as la6District,
		LA7UNIT as
		la7Unit,
		LA10BRANCH as la10Branch,
		LAYOUTIDENITIFIER as
		layoutIdenitifier,
		SUBJECTTYPE as subjectType,
		MAPPINGSTATUS as
		mappingStatus,
		COSTRATIO as costRatio,
		DEDUCTIONAMOUNT as
		deductionAmount,
		DC as dc,
		VIDI_DATE as vidiDate,
		VIAD_STATUS as status,
		VIAD_TRANSFER_AMOUNT as transferAmount,
		VIAD_ID as viadId
		from
		VMS_INCOME_DETAILS_INFO
		where 1=1
		and
		ACCOUNTCODE not in ('8261000000')
		<!-- and substr(ACCOUNTCODE, 0, 3) not in ('831','832','833','834') -->
		and substring(ACCOUNTCODE, 0, 3) not in ('831','832','833','834')
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.status">
				VIAD_STATUS =
				#inputInvoiceInfo.status#
			</isNotEmpty>
		</dynamic>
		<!-- <dynamic> -->
		<!-- <isNotEmpty prepend="and" property="inputInvoiceInfo.billNo"> -->
		<!-- BILL_NO = #inputInvoiceInfo.billNo# -->
		<!-- </isNotEmpty> -->
		<!-- </dynamic> -->
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.expenseDocnum">
				EXPENSEDOCNUM =
				#inputInvoiceInfo.expenseDocnum#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.subjectType">
				SUBJECTTYPE like
				'%$inputInvoiceInfo.subjectType$%'
			</isNotEmpty>
		</dynamic>
	</select>
	<update id="updateInvoiceInfo" parameterClass="com.cjit.vms.metlife.model.AccountingEntriesInfo">
		update
		vms_income_details_info set COSTRATIO=
		( select
		<!-- to_char(a.TRANSACTIONAMOUNT / TSUM.TRANSACTIONAMOUNT,'0.00') -->
		convert(a.TRANSACTIONAMOUNT / TSUM.TRANSACTIONAMOUNT,char(50))
		
		from
		vms_income_details_info a inner join
		( select EXPENSEDOCNUM,
		sum(TRANSACTIONAMOUNT) TRANSACTIONAMOUNT
		from VMS_INCOME_DETAILS_INFO
		where ACCOUNTCODE not in ('8261000000')
		
		<!-- and substr(ACCOUNTCODE, 0, 3) -->
		and substring(ACCOUNTCODE, 0, 3)
		
		not in ('831','832','833','834')
		group by EXPENSEDOCNUM
		) TSUM on
		a.EXPENSEDOCNUM = TSUM.EXPENSEDOCNUM where VIAD_ID=#viadId#
		),VIAD_STATUS='1'
		where VIAD_ID=#viadId#
	</update>


	<!-- 进项转出end -->
	<!-- 转出比例 -->
	<select id="findTansferOutRatio" parameterClass="java.util.Map"
		resultClass="inputInvoiceInfo">
		select
		VTOR_ID as vtorId,
		VTOR_ACCOUNT_PERIOD as accountPeriod,
		VTOR_TRANSFER_OUT_RATIO as transferRatio,
		VTOR_INSTID as instId,
		VTOR_TANAME as taName,
		VTOI_TAX_EXEMPT_AMT as taxExemptAmt,
		VTOI_TAXABLE_AMT as taxAbleAmt,
		VTOI_SUM_AMT as vtoiSumAmt,
		VTOI_TRANSFER_OUT_AMT as transferOutAmt
		from VMS_TRANSFER_OUT_RATIO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.accountPeriod">
				VTOR_ACCOUNT_PERIOD =
				#inputInvoiceInfo.accountPeriod#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodEnd"
				prepend="and">
		  		<![CDATA[ to_date(VTOR_ACCOUNT_PERIOD_END,'yyyy-mm-dd') <= to_date(#inputInvoiceInfo.accountPeriodEnd#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodStrart"
				prepend="and">
				<![CDATA[ to_date(VTOR_ACCOUNT_PERIOD_START,'yyyy-mm-dd') >= to_date(#inputInvoiceInfo.accountPeriodStrart#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodEnd"
				prepend="and">
		  		<![CDATA[ str_to_date(VTOR_ACCOUNT_PERIOD_END,'%Y-%m-%d') <= str_to_date(#inputInvoiceInfo.accountPeriodEnd#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodStrart"
				prepend="and">
				<![CDATA[ str_to_date(VTOR_ACCOUNT_PERIOD_START,'%Y-%m-%d') >= str_to_date(#inputInvoiceInfo.accountPeriodStrart#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.instId">
				VTOR_INSTID =
				#inputInvoiceInfo.instId#
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.taName">
				VTOR_TANAME =
				#inputInvoiceInfo.taName#
			</isNotEmpty>
		</dynamic>
	</select>
	<insert id="insertInvoceInfoBatch" parameterClass="java.util.Map">
		insert into VMS_INCOME_DETAILS_INFO
		select
		d.BILL_CODE,
		d.BILL_NO,
		d.BUDGET_SUBJET,
		d.BUDGET_CODE,
		d.BUDGET_COST_CENTER,
		d.BUDGET_CO,
		d.TRANSACTIONREFERENCE,
		d.EXPENSEDOCNUM,
		'VMS',
		'VMS',
		d.ACCOUNTINGPERIOD,
		d.TRANSACTIONDATE,
		d.TRANSACTIONDESCRIPTION,
		d.ACCOUNTCODE,
		d.ACCOUNTNAME,
		d.CURRENCY,

		case ACCOUNTCODE when
		e.ACCOUNTCODEMAX
		then
		(
			  <![CDATA[ c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO-(select sum(round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO ,2  )   ) from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE not in ('总账','8261000000') and VIAD_ID not in (e.ACCOUNTCODEMAX) )  ]]>
		)
		else
			  <![CDATA[ round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO,2) ]]>
		end
		,
		d.RATE,
		d.BASEAMOUNT,
		d.LA1FUND,
		d.LA2CHANNEL,
		d.LA3CATEGORY,
		d.LA5PLAN,
		d.LA6DISTRICT,
		d.LA7UNIT,
		d.LA10BRANCH,
		d.LAYOUTIDENITIFIER,
		d.SUBJECTTYPE,
		d.MAPPINGSTATUS,
		d.COSTRATIO,
			  <![CDATA[ round((c.TRANSACTIONAMOUNT-
			  case 
			  VIAD_ID 
			  when 
			  e.ACCOUNTCODEMAX 
			  then
			  (c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO-(select sum(round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO ,2 )) from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE not in ('总账','8261000000') and VIAD_ID not in (e.ACCOUNTCODEMAX) and EXPENSEDOCNUM=#expenseDocnum#))
			  else
			  round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO,2) 
			  end
			  )*COSTRATIO,2)]]>
		,
		d.DC,
		d.VIDI_DATE,
		'1',
		case VIAD_ID when e.ACCOUNTCODEMAX
		then
		(
			 <![CDATA[  c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO-(select sum(round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO ,2  )) from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE not in ('总账','8261000000' ) and VIAD_ID not in (e.ACCOUNTCODEMAX) )]]>
		)
		else
			  <![CDATA[ round(c.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO*COSTRATIO,2)]]>
		end
		,
		<!-- <![CDATA[d.VIAD_ID||d.DC]]> -->
			  <![CDATA[concat(d.VIAD_ID,d.DC)]]>
		from VMS_INCOME_DETAILS_INFO d
			  <![CDATA[ left join (select VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from vms_transfer_out_ratio where VTOR_INSTID=#instId#) o on d.accountingperiod=o.VTOR_ACCOUNT_PERIOD 
			  left join  (select sum(TRANSACTIONAMOUNT) TRANSACTIONAMOUNT,EXPENSEDOCNUM  from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE='8261000000' group by EXPENSEDOCNUM) c on c.EXPENSEDOCNUM=d.EXPENSEDOCNUM
			  left join (select max(VIAD_ID) ACCOUNTCODEMAX,EXPENSEDOCNUM from VMS_INCOME_DETAILS_INFO where    ACCOUNTCODE not in ('8261000000') and substr(ACCOUNTCODE, 0, 3) not in ('831','832','833','834') GROUP BY EXPENSEDOCNUM) e on e.EXPENSEDOCNUM=d.EXPENSEDOCNUM]]>
		where
		d.ACCOUNTCODE not in ('8261000000')
		and
		
		<!-- substr(ACCOUNTCODE, 0, 3) -->
		substring(ACCOUNTCODE, 0, 3)
		
		not in ('831','832','833','834')
		and
		d.EXPENSEDOCNUM=#expenseDocnum#

	</insert>
	<insert id="insertInvoceInfoBatch1" parameterClass="java.util.Map">
		insert into VMS_INCOME_DETAILS_INFO
		select
		d.BILL_CODE,
		d.BILL_NO,
		d.BUDGET_SUBJET,
		d.BUDGET_CODE,
		d.BUDGET_COST_CENTER,
		d.BUDGET_CO,
		d.TRANSACTIONREFERENCE,
		d.EXPENSEDOCNUM,
		'VMS',
		'VMS',
		d.ACCOUNTINGPERIOD,
		d.TRANSACTIONDATE,
		d.TRANSACTIONDESCRIPTION,
		'8261000010',
		'应交税费-应交增值税-进项8261000000转出',
		d.CURRENCY,
		d.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO,
		d.RATE,
		d.BASEAMOUNT,
		d.LA1FUND,
		d.LA2CHANNEL,
		d.LA3CATEGORY,
		d.LA5PLAN,
		d.LA6DISTRICT,
		d.LA7UNIT,
		d.LA10BRANCH,
		d.LAYOUTIDENITIFIER,
		d.SUBJECTTYPE,
		d.MAPPINGSTATUS,
		d.COSTRATIO,
		d.DEDUCTIONAMOUNT,
		'C',
		d.VIDI_DATE,
		d.VIAD_STATUS,
		d.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO,
		<!-- <![CDATA[d.VIAD_ID||'C']]> -->
		    <![CDATA[concat(d.VIAD_ID,'C')]]>
		from VMS_INCOME_DETAILS_INFO d
		left join (select
		VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from
		vms_transfer_out_ratio where VTOR_INSTID=#instId#) o on
		d.accountingperiod=o.VTOR_ACCOUNT_PERIOD
		where
		ACCOUNTCODE='8261000000'
		and
		d.EXPENSEDOCNUM=#expenseDocnum#
	</insert>
	<update id="updatetransInfostatusbatch" parameterClass="java.util.Map">
		update
		VMS_INPUT_INVOICE_INFO set DATASTATUS='1',
		VAT_OUT_AMT=TAX_AMT_SUM*(
		select VTOR_TRANSFER_OUT_RATIO from vms_transfer_out_ratio where
		VTOR_INSTID=#instId# and VTOR_ACCOUNT_PERIOD=(select
		distinct(ACCOUNTINGPERIOD) from VMS_INCOME_DETAILS_INFO where
		EXPENSEDOCNUM=#expenseDocnum# )
		)
		where EXPENSE_DOCNUM=#expenseDocnum#
	</update>
	<select id="findTansferOutRatioCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_TRANSFER_OUT_RATIO
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.accountPeriod">
				VTOR_ACCOUNT_PERIOD =
				#inputInvoiceInfo.accountPeriod#
			</isNotEmpty>
		</dynamic>
		
		<!--oracle版本  -->
		<!-- <dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodEnd"
				prepend="and">
		  		<![CDATA[ to_date(VTOR_ACCOUNT_PERIOD_END,'yyyy-mm-dd') <= to_date(#inputInvoiceInfo.accountPeriodEnd#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodStrart"
				prepend="and">
				<![CDATA[ to_date(VTOR_ACCOUNT_PERIOD_START,'yyyy-mm-dd') >= to_date(#inputInvoiceInfo.accountPeriodStrart#,'yyyy-mm-dd') ]]>
			</isNotEmpty>
		</dynamic> -->
		
		<!--mysql版本  -->
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodEnd"
				prepend="and">
		  		<![CDATA[ str_to_date(VTOR_ACCOUNT_PERIOD_END,'%Y-%m-%d') <= str_to_date(#inputInvoiceInfo.accountPeriodEnd#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty property="inputInvoiceInfo.accountPeriodStrart"
				prepend="and">
				<![CDATA[ str_to_date(VTOR_ACCOUNT_PERIOD_START,'%Y-%m-%d') >= str_to_date(#inputInvoiceInfo.accountPeriodStrart#,'%Y-%m-%d') ]]>
			</isNotEmpty>
		</dynamic>
		
		
		
		
	</select>
	<select id="updatetransferOutRatio" parameterClass="java.util.Map"
		resultClass="inputInvoiceInfo">
		select
		VTOR_ID as vtorId,
		VTOR_ACCOUNT_PERIOD as accountPeriod,
		b.AmtCny/c.sunAmtCny as transferRatio,
		VTOR_INSTID as instId,
		VTOR_TANAME as taName,
		b.AmtCny as taxExemptAmt,
		c.sunAmtCny-b.AmtCny as
		taxAbleAmt,
		c.sunAmtCny as vtoiSumAmt,
		VTOI_TRANSFER_OUT_AMT as
		transferOutAmt
		from VMS_TRANSFER_OUT_RATIO a
		left join 
		
			<!--oracle版本  -->
			<!-- <![CDATA[(select sum(AMT_CNY) AmtCny,INSTCODE from VMS_TRANS_INFO where TRANS_FAPIAO_FLAG  not in ('N')  and VAT_RATE_CODE in ('F','Z') and  to_date(TRANS_DATE,'yyyy-mm-dd') >=(select  to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd') from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) ) and to_date(TRANS_DATE,'yyyy-mm-dd') <=(select to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd')  from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) group by INSTCODE) b
			on a.VTOR_INSTID=b.INSTCODE
			left join 
			(select sum(AMT_CNY) sunAmtCny,INSTCODE from VMS_TRANS_INFO where  TRANS_FAPIAO_FLAG  not in ('N') and  to_date(TRANS_DATE,'yyyy-mm-dd') >=(select  to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd') from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) ) and to_date(TRANS_DATE,'yyyy-mm-dd') <=(select to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd')  from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) group by INSTCODE) c 
			on a.VTOR_INSTID=c.INSTCODE
			where VTOR_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) ]]> -->
			
			<!--mysql版本  -->
			<![CDATA[(select sum(AMT_CNY) AmtCny,INSTCODE from VMS_TRANS_INFO where TRANS_FAPIAO_FLAG  not in ('N')  and VAT_RATE_CODE in ('F','Z') and  str_to_date(TRANS_DATE,'%Y-%m-%d') >=(select  str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d') from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) ) and str_to_date(TRANS_DATE,'%Y-%m-%d') <=(select str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d')  from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) group by INSTCODE) b
			on a.VTOR_INSTID=b.INSTCODE
			left join 
			(select sum(AMT_CNY) sunAmtCny,INSTCODE from VMS_TRANS_INFO where  TRANS_FAPIAO_FLAG  not in ('N') and  str_to_date(TRANS_DATE,'%Y-%m-%d') >=(select  str_to_date(VFM_ACCOUNT_PERIOD_START,''%Y-%m-%d') from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) ) and str_to_date(TRANS_DATE,'%Y-%m-%d') <=(select to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d')  from VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) group by INSTCODE) c 
			on a.VTOR_INSTID=c.INSTCODE
			where VTOR_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) ]]>
			
			
			
	</select>

	<update id="updatetransferOutRatio1" parameterClass="inputInvoiceInfo">
		update
		VMS_TRANSFER_OUT_RATIO set VTOR_TRANSFER_OUT_RATIO=#transferRatio# ,
		VTOI_TAX_EXEMPT_AMT=#taxExemptAmt#
		,VTOI_TAXABLE_AMT=#taxAbleAmt#,VTOI_SUM_AMT=#vtoiSumAmt# where
		VTOR_INSTID=#instId# and VTOR_ACCOUNT_PERIOD=#accountPeriod#
	</update>
	<!-- 转出 会计分录佣金手续费 -->
	<insert id="insertInvoiceCommission" parameterClass="java.util.Map">
		insert into VMS_INCOME_DETAILS_INFO
		select
		e.BILL_CODE,
		e.BILL_NO,
		e.BUDGET_SUBJET,
		e.BUDGET_CODE,
		e.BUDGET_COST_CENTER,
		e.BUDGET_CO,
		e.TRANSACTIONREFERENCE,
		e.EXPENSEDOCNUM,
		'VMS',
		'VMS',
		e.ACCOUNTINGPERIOD,
		e.TRANSACTIONDATE,
		e.TRANSACTIONDESCRIPTION,
		(select
		VAIO_IN_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO where
		VAIO_OUT_ACCOUNT_CODE=f.VSAD_ACCOUNT_CODE and VAIO_CHANNEL=f.VSAD_T2),
		e.ACCOUNTNAME,
		e.CURRENCY,
		case when x.ACCOUNTCODEMAX!=x.ACCOUNTCODEMIN
		then
		case when x.ACCOUNTCODEMAX=f.VSAD_ACCOUNT_CODE
		then
				<![CDATA[(g.TRANSACTIONAMOUNT-g.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO-cc.SUMMATCH)]]>
		else
				<![CDATA[round((g.TRANSACTIONAMOUNT-(g.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO))*(f.VSAD_TRANSACTION_AMOUNTSUM/d.SUMALLAMOUNT),2)]]>
		end
		else
        <![CDATA[round((g.TRANSACTIONAMOUNT-(g.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO))*(f.VSAD_TRANSACTION_AMOUNTSUM/d.SUMALLAMOUNT),2)]]>
		end
		,
		e.RATE,
		e.BASEAMOUNT,
		e.LA1FUND,
		e.LA2CHANNEL,
		e.LA3CATEGORY,
		f.VSAD_T5,
		e.LA6DISTRICT,
		e.LA7UNIT,
		e.LA10BRANCH,
		e.LAYOUTIDENITIFIER,
		e.SUBJECTTYPE,
		e.MAPPINGSTATUS,
        		<![CDATA[round(f.VSAD_TRANSACTION_AMOUNTSUM/d.SUMALLAMOUNT,2),
				round((g.TRANSACTIONAMOUNT-(g.TRANSACTIONAMOUNT*o.VTOR_TRANSFER_OUT_RATIO))*(f.VSAD_TRANSACTION_AMOUNTSUM/d.SUMALLAMOUNT),2),]]>
		'C',
		e.VIDI_DATE,
		'1',
		'',
		e.VIAD_ID
		from (
		select
		b.VFM_ACCOUNT_PERIOD,
		b.ALTREF as VSAD_ACCOUNT_CODE,
		b.CHANNEL as VSAD_T2,
		b.ZNTCODE05 as
		VSAD_T5,
		b.INSTCODE as VSAD_T10,
		sum(b.AMT_CNY)
		VSAD_TRANSACTION_AMOUNTSUM
		from 
       
       <!--  <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) b]]> -->
		 <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) b]]>
		
		where b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from
		VMS_ACCOUNT_CODE_IO )
		group by b.VFM_ACCOUNT_PERIOD,
		b.ALTREF ,
		b.CHANNEL ,
		b.ZNTCODE05,
		b.INSTCODE) f
		left join (
		select
		b.VFM_ACCOUNT_PERIOD,
		b.CHANNEL as VSAD_T2,
		b.INSTCODE as VSAD_T10,
		sum(b.AMT_CNY) SUMALLAMOUNT
		from 
		
        <!-- <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )]]> -->
        
        <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )]]>
        
        
		group by b.VFM_ACCOUNT_PERIOD,
		b.CHANNEL ,
		b.INSTCODE) d on
		d.VFM_ACCOUNT_PERIOD=f.VFM_ACCOUNT_PERIOD and
		d.VSAD_T2=f.VSAD_T2 and
		d.VSAD_T10=f.VSAD_T10
		left join (select * from VMS_INCOME_DETAILS_INFO
		where ACCOUNTCODE
		in(select VACI_ACCOUNT_CODE from
		VMS_ACCOUNT_CODE_INFO where
		VACI_FLAG='99')) e on
		e.LA2CHANNEL=f.VSAD_T2 and
		f.VSAD_T10=e.LA10BRANCH
		left join (select
		VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from
		vms_transfer_out_ratio where VTOR_INSTID=#instId# ) o on
		e.accountingperiod=o.VTOR_ACCOUNT_PERIOD
		left join (select
		TRANSACTIONAMOUNT,LA2CHANNEL,LA10BRANCH from
		VMS_INCOME_DETAILS_INFO
		where ACCOUNTCODE='8261000000' ) g on
		g.LA2CHANNEL=f.VSAD_T2 and
		f.VSAD_T10=g.LA10BRANCH
				
				<!-- <![CDATA[left join (select min(ALTREF) ACCOUNTCODEMIN,max(ALTREF) ACCOUNTCODEMAX,CHANNEL,INSTCODE,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE) x on x.CHANNEL=f.VSAD_T2 and x.INSTCODE=f.VSAD_T10]]> -->
		<![CDATA[left join (select min(ALTREF) ACCOUNTCODEMIN,max(ALTREF) ACCOUNTCODEMAX,CHANNEL,INSTCODE,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE) x on x.CHANNEL=f.VSAD_T2 and x.INSTCODE=f.VSAD_T10]]>
		
		left join
		<![CDATA[	(select sum(round((i.TRANSACTIONAMOUNT-(i.TRANSACTIONAMOUNT*j.VTOR_TRANSFER_OUT_RATIO))*(h.VSAD_TRANSACTION_AMOUNTSUM/d1.SUMALLAMOUNT),2)) SUMMATCH,h.VSAD_T2,h.VSAD_T10]]>
		from (select
		b.VFM_ACCOUNT_PERIOD,
		b.ALTREF as VSAD_ACCOUNT_CODE,
		b.CHANNEL as VSAD_T2,
		b.ZNTCODE05 as VSAD_T5,
		b.INSTCODE as VSAD_T10,
		sum(b.AMT_CNY) VSAD_TRANSACTION_AMOUNTSUM
		from 
		
		<!--oracle版本  -->
        <!-- <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )
        and b.ALTREF not in (select max(ALTREF)  from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE)
         group by  b.VFM_ACCOUNT_PERIOD,
				b.ALTREF ,
				b.CHANNEL ,
				b.ZNTCODE05,
				b.INSTCODE )]]> -->
				
		<!--mysql版本  -->	
		<![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )
        and b.ALTREF not in (select max(ALTREF)  from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE)
         group by  b.VFM_ACCOUNT_PERIOD,
				b.ALTREF ,
				b.CHANNEL ,
				b.ZNTCODE05,
				b.INSTCODE )]]>	
				
		h
		left join (select
		b.VFM_ACCOUNT_PERIOD,
		b.CHANNEL as VSAD_T2,
		b.INSTCODE as VSAD_T10,
		sum(b.AMT_CNY) SUMALLAMOUNT
		from 
		
	   <!--oracle版本  -->
       <!--  <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )
         and b.ALTREF not in (select max(ALTREF)  from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE)
         group by  b.VFM_ACCOUNT_PERIOD,
				b.CHANNEL ,
				b.INSTCODE) d1 on d1.VSAD_T2=h.VSAD_T2 and d1.VSAD_T10=h.VSAD_T10 
				left join (select TRANSACTIONAMOUNT,LA2CHANNEL,LA10BRANCH from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE='8261000000' )  i on i.LA2CHANNEL=h.VSAD_T2 and h.VSAD_T10=i.LA10BRANCH
				left join (select VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from vms_transfer_out_ratio where VTOR_INSTID=#instId# ) j on h.VFM_ACCOUNT_PERIOD=j.VTOR_ACCOUNT_PERIOD
				group by h.VSAD_T2,h.VFM_ACCOUNT_PERIOD,h.VSAD_T10) cc on cc.VSAD_T2=f.VSAD_T2 and cc.VSAD_T10=f.VSAD_T10
				where e.ACCOUNTCODE not in ('8261000000') and substr(ACCOUNTCODE, 0, 3) not in ('831','832','833','834') and e.EXPENSEDOCNUM=#expenseDocnum# order by  f.VSAD_T2
        ]]> -->
		
		<!--mysql版本  -->
		 <![CDATA[(select ALTREF,CHANNEL,ZNTCODE05,INSTCODE,AMT_CNY,c.VFM_ACCOUNT_PERIOD from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))) b
        where 	b.ALTREF in (select VAIO_OUT_ACCOUNT_CODE from VMS_ACCOUNT_CODE_IO )
         and b.ALTREF not in (select max(ALTREF)  from VMS_TRANS_INFO a left join VMS_FINANCE_MONTH c on a.TRANS_DATE BETWEEN c.VFM_ACCOUNT_PERIOD_START and c.VFM_ACCOUNT_PERIOD_END where c.VFM_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d')) group by CHANNEL,c.VFM_ACCOUNT_PERIOD,INSTCODE)
         group by  b.VFM_ACCOUNT_PERIOD,
				b.CHANNEL ,
				b.INSTCODE) d1 on d1.VSAD_T2=h.VSAD_T2 and d1.VSAD_T10=h.VSAD_T10 
				left join (select TRANSACTIONAMOUNT,LA2CHANNEL,LA10BRANCH from VMS_INCOME_DETAILS_INFO where ACCOUNTCODE='8261000000' )  i on i.LA2CHANNEL=h.VSAD_T2 and h.VSAD_T10=i.LA10BRANCH
				left join (select VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from vms_transfer_out_ratio where VTOR_INSTID=#instId# ) j on h.VFM_ACCOUNT_PERIOD=j.VTOR_ACCOUNT_PERIOD
				group by h.VSAD_T2,h.VFM_ACCOUNT_PERIOD,h.VSAD_T10) cc on cc.VSAD_T2=f.VSAD_T2 and cc.VSAD_T10=f.VSAD_T10
				where e.ACCOUNTCODE not in ('8261000000') and substr(ACCOUNTCODE, 0, 3) not in ('831','832','833','834') and e.EXPENSEDOCNUM=#expenseDocnum# order by  f.VSAD_T2
        ]]>
		
		
		
		

	</insert>
	<insert id="insertInvoiceCommission1" parameterClass="java.util.Map">
		insert into
		VMS_INCOME_DETAILS_INFO
		select
		a.BILL_CODE,
		a.BILL_NO,
		a.BUDGET_SUBJET,
		a.BUDGET_CODE,
		a.BUDGET_COST_CENTER,
		a.BUDGET_CO,
		a.TRANSACTIONREFERENCE,
		a.EXPENSEDOCNUM,
		'VMS',
		'VMS',
		a.ACCOUNTINGPERIOD,
		a.TRANSACTIONDATE,
		a.TRANSACTIONDESCRIPTION,
		a.ACCOUNTCODE,
		a.ACCOUNTNAME,
		a.CURRENCY,
		b.TRANSACTIONAMOUNT,
		a.RATE,
		a.BASEAMOUNT,
		a.LA1FUND,
		a.LA2CHANNEL,
		a.LA3CATEGORY,
		a.LA5PLAN,
		a.LA6DISTRICT,
		a.LA7UNIT,
		a.LA10BRANCH,
		a.LAYOUTIDENITIFIER,
		a.SUBJECTTYPE,
		a.MAPPINGSTATUS,
		a.COSTRATIO,
		a.DEDUCTIONAMOUNT,
		a.DC,
		a.VIDI_DATE,
		'1',
		0,
		a.VIAD_ID
		from VMS_INCOME_DETAILS_INFO a
		left join
		(select * from VMS_INCOME_DETAILS_INFO where
		ACCOUNTCODE='8261000000')
		b on b.LA2CHANNEL=a.LA2CHANNEL and
		b.LA10BRANCH=a.LA10BRANCH
		where
		a.EXPENSEDOCNUM=#expenseDocnum# and
		a.ACCOUNTCODE in(select
		VACI_ACCOUNT_CODE from VMS_ACCOUNT_CODE_INFO where
		VACI_FLAG='99')
	</insert>

	<insert id="insertInvoiceCommission2" parameterClass="java.util.Map">
		insert into
		VMS_INCOME_DETAILS_INFO
		select
		a.BILL_CODE,
		a.BILL_NO,
		a.BUDGET_SUBJET,
		a.BUDGET_CODE,
		a.BUDGET_COST_CENTER,
		a.BUDGET_CO,
		a.TRANSACTIONREFERENCE,
		a.EXPENSEDOCNUM,
		'VMS',
		'VMS',
		a.ACCOUNTINGPERIOD,
		a.TRANSACTIONDATE,
		a.TRANSACTIONDESCRIPTION,
		'8261000010',
		'(应交税费-应交增值税-进项8261000000转出）',
		a.CURRENCY,
		b.TRANSACTIONAMOUNT*c.VTOR_TRANSFER_OUT_RATIO,
		a.RATE,
		a.BASEAMOUNT,
		a.LA1FUND,
		a.LA2CHANNEL,
		a.LA3CATEGORY,
		a.LA5PLAN,
		a.LA6DISTRICT,
		a.LA7UNIT,
		a.LA10BRANCH,
		a.LAYOUTIDENITIFIER,
		a.SUBJECTTYPE,
		a.MAPPINGSTATUS,
		a.COSTRATIO,
		a.DEDUCTIONAMOUNT,
		'C',
		a.VIDI_DATE,
		'1',
		a.VIAD_TRANSFER_AMOUNT,
		a.VIAD_ID
		from VMS_INCOME_DETAILS_INFO a
		left
		join (select * from VMS_INCOME_DETAILS_INFO where
		ACCOUNTCODE='8261000000') b ON b.EXPENSEDOCNUM =a.EXPENSEDOCNUM
		left
		join (select VTOR_ACCOUNT_PERIOD,VTOR_TRANSFER_OUT_RATIO from
		vms_transfer_out_ratio where VTOR_INSTID=#instId# ) c on
		a.ACCOUNTINGPERIOD=c.VTOR_ACCOUNT_PERIOD
		where
		a.EXPENSEDOCNUM=#expenseDocnum# and
		a.ACCOUNTCODE in (select
		VACI_ACCOUNT_CODE from VMS_ACCOUNT_CODE_INFO where
		VACI_FLAG='99')
	</insert>
	<insert id="updateIncome" parameterClass="java.util.Map">
		update VMS_INPUT_INVOICE_INFO set
		DATASTATUS='1',VAT_OUT_AMT=TAX_AMT_SUM*(
		select VTOR_TRANSFER_OUT_RATIO
		from VMS_TRANSFER_OUT_RATIO 
		
        <!--  <![CDATA[where VTOR_INSTID=#instId# and VTOR_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate, -1) <=to_date(VFM_ACCOUNT_PERIOD_END,'yyyy-mm-dd') and add_months(sysdate, -1)>=to_date(VFM_ACCOUNT_PERIOD_START,'yyyy-mm-dd'))]]> -->
		 <![CDATA[where VTOR_INSTID=#instId# and VTOR_ACCOUNT_PERIOD=(select  VFM_ACCOUNT_PERIOD  from VMS_FINANCE_MONTH where add_months(sysdate(), -1) <=str_to_date(VFM_ACCOUNT_PERIOD_END,'%Y-%m-%d') and add_months(sysdate(), -1)>=str_to_date(VFM_ACCOUNT_PERIOD_START,'%Y-%m-%d'))]]>
		
		
		<!-- TO_DATE((select distinct(ACCOUNTINGPERIOD) from VMS_INCOME_DETAILS_INFO 
			where BILL_CODE=#billCode# and BILL_NO=#billCode#),'MM-DD-YYYY' ) -->
		<!-- between to_date(vtor_account_period_start, 'YYYY-MM-DD') AND to_date(vtor_account_period_end, 
			'YYYY-MM-DD') -->
		) where EXPENSE_DOCNUM=#expenseDocnum#
	</insert>
	<!-- 转出比例 -->
	<!-- 财务月 begin -->
	<select id="findFinanceMonth" parameterClass="java.util.Map"
		resultClass="inputInvoiceInfo">
		select
		VFM_ACCOUNT_PERIOD as accountPeriod,
		VFM_ACCOUNT_PERIOD_START as
		accountPeriodStrart,
		VFM_ACCOUNT_PERIOD_END as accountPeriodEnd
		from
		VMS_FINANCE_MONTH
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.accountPeriod">
				VFM_ACCOUNT_PERIOD =
				#inputInvoiceInfo.accountPeriod#
			</isNotEmpty>
		</dynamic>
		order by VFM_ACCOUNT_PERIOD_START
	</select>
	<select id="findFinanceMonthCount" parameterClass="java.util.Map"
		resultClass="long">
		select
		count(*)
		from VMS_FINANCE_MONTH
		where 1=1
		<dynamic>
			<isNotEmpty prepend="and" property="inputInvoiceInfo.accountPeriod">
				VFM_ACCOUNT_PERIOD =
				#inputInvoiceInfo.accountPeriod#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- 财务月导入 -->
	<insert id="insertFinanceMonth" parameterClass="java.util.Map">
		insert into
		VMS_FINANCE_MONTH (
		VFM_ACCOUNT_PERIOD,
		VFM_ACCOUNT_PERIOD_START,
		VFM_ACCOUNT_PERIOD_END
		) values(
		#accountPeriod#,
		#accountPeriodStrart#,
		#accountPeriodEnd#
		)
	</insert>
	<!-- 财务月删除 -->
	<delete id="cancelFinanceMonth" parameterClass="java.util.Map">
		delete
		VMS_FINANCE_MONTH where VFM_ACCOUNT_PERIOD=#accountPeriod#
	</delete>
	<!-- 财务月 end -->
	<!-- Abel:MeTlift 销项数据导入 begin -->
	<typeAlias alias="manualTrans" type="com.cjit.vms.metlife.model.ManualTrans" />

	<resultMap id="ManualTransMap" class="com.cjit.vms.metlife.model.ManualTrans">
		<result column="COWNNUM" property="cownNum" jdbcType="VARCHAR" />
		<result column="TRDT" property="trdt" jdbcType="VARCHAR" />
		<result column="ACCTAMT" property="acctAmt" jdbcType="DECIMAL" />
		<result column="GOODSNAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="TAXRATE" property="taxRate" jdbcType="DECIMAL" />
		<result column="ALTREF" property="altref" jdbcType="VARCHAR" />
		<result column="T1" property="t1" jdbcType="VARCHAR" />
		<result column="T2" property="t2" jdbcType="VARCHAR" />
		<result column="T3" property="t3" jdbcType="VARCHAR" />
		<result column="T4" property="t4" jdbcType="VARCHAR" />
		<result column="T5" property="t5" jdbcType="VARCHAR" />
		<result column="T6" property="t6" jdbcType="VARCHAR" />
		<result column="T7" property="t7" jdbcType="VARCHAR" />
		<result column="T8" property="t8" jdbcType="VARCHAR" />
		<result column="T9" property="t9" jdbcType="VARCHAR" />
		<result column="T10" property="t10" jdbcType="VARCHAR" />
		<result column="DESC_M" property="desCm" jdbcType="VARCHAR" />
	</resultMap>
	<select id="findManualTrans" parameterClass="java.util.Map"
		resultMap="ManualTransMap">
		SELECT * from VMS_TRANS_MANUAL M
	</select>

	<select id="findManualTransCount" parameterClass="java.util.Map"
		resultClass="long">
		SELECT COUNT(*) from VMS_TRANS_MANUAL M
	</select>




	<!-- Abel:MeTlift 销项数据导入 End -->
	<!--metlife 参数管理xmlpath获取 -->
	<select id="findXmlPath" parameterClass="java.util.Map"
		resultClass="long">
		select SELECTED_VALUE from U_BASE_VMSS_PARAM where
		ITEM_KEY = 'XMLPATH'
	</select>
	<!-- 大都会新增End -->

	<insert id="insertvms1" parameterClass="java.util.Map">
		insert into u_base_config
		(system_id,
		system_ename,
		system_nick_ename,
		system_cname,
		system_nick_cname)
		values
		(#businessId#, '1', '1', '2', '3')
	</insert>

	<!-- 李松销项加 -->
	<select id="findTransInfoToCore" parameterClass="java.util.Map"
		resultClass="com.cjit.vms.trans.model.createBill.TransInfo"
		remapResults="true">
		select distinct t.businessid as reverseTransId,
		t.trans_bus_id as transBusId,
		t.instname as instname
		from VMS_TRANS_INFO
		t
		inner join vms_trans_bill tb on tb.trans_id = t.trans_id
		and
		tb.bill_id = #billInfo.billId#
	</select>

	<select id="findTransSum" parameterClass="java.util.Map"
		resultClass="java.lang.Integer">
		select count(trans_id)
		from vms_trans_info
		where businessid in
		(select
		distinct businessid
		from VMS_TRANS_INFO
		where trans_id in
		<iterate property="idList" conjunction="," open="(" close=")">
			#idList[]#
		</iterate>
		)
	</select>

	<select id="findBussisedSum" parameterClass="java.util.Map"
		resultClass="java.lang.Integer">
		select count(distinct businessid) from VMS_TRANS_INFO
		where trans_id in
		<iterate property="idList" conjunction="," open="(" close=")">
			#idList[]#
		</iterate>

	</select>

	<select id="findFlag" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select instname from vms_trans_info where trans_id =
		#flag#
	</select>
	<insert id="synchTransInfo" parameterClass="java.util.Map">
		INSERT INTO
		VMS_TRANS_INFO A (
		A.TRANS_ID, A.BUSINESSID, A.INSTCODE, A.REMARK,
		A.CHERNUM, A.TRANS_BUS_ID, A.TTMPRCNO, A.TRANS_CURR, A.AMT_CCY,
		A.TRANS_DATE, A.FAPIAO_TYPE, A.FEETYP, A.BILLFREQ, A.POLYEAR,
		A.HISSDTE, A.PLANLONGDESC, A.INSTFROM, A.INSTTO, A.OCCDATE,
		A.PREMTERM, A.TAX_FLAG, A.TAX_CNY_BALANCE, A.DSOURCE, A.BALANCE,
		A.DATASTATUS, A.CUSTOMER_ID, A.CUSTOMER_ACCOUNT, A.TRANS_TYPE,
		A.INSCOD, A.INSNAM, A.AMT_CNY, A.TAX_AMT_CNY, A.INCOME_CNY,
		A.TAX_RATE,
		A.QDFLAG,
		A.HESITATE_PERIOD,
		A.TRANS_FAPIAO_FLAG,
		A.IS_REVERSE,
		A.TRANS_FLAG,
		A.ISYK,
		A.BATCH_NO,
		A.BATCH_TYPE,
		A.SYNCH_DATE
		)
		VALUES (
		#policy.transId#,
		#policy.businessId#,
		#policy.instId#,
		#policy.qdFlag#,
		#policy.chernum#,
		#policy.repnum#,
		#policy.ttmprcno#,
		#policy.origcurr#,
		#policy.origamt#,
		#policy.trdt#,
		#policy.invtyp#,
		#policy.feetyp#,
		#policy.billfreq#,
		#policy.polyear#,
		#policy.hissdte#,
		#policy.planlongdesc#,
		#policy.instfrom#,
		#policy.instto#,
		#policy.occdate#,
		#policy.premterm#,
		#policy.taxFlag#,
		#policy.taxCnyBalance#,
		#policy.dsource#,
		#policy.balance#,
		#policy.dataStatus#,
		#policy.customer.customerNo#,
		#policy.customer.customerAccount#,
		#policy.cover.transtype#,
		#policy.cover.insCod#,
		#policy.cover.insNam#,
		#policy.cover.amtCny#,
		#policy.cover.taxAmtCny#,
		#policy.cover.incomeCny#,
		#policy.cover.taxRate#,
		#policy.qdFlag#,
		#policy.hesitatePeriod#,
		'M',
		'N',
		'2',
		#policy.isYK#,
		#policy.batchNo#,
		#policy.batchType#,
		SYSDATE()
		)
	</insert>

	<!-- 定时任务查询 -->
	<select id="findTimeTask" parameterClass="java.util.Map"
		resultClass="timeTaskEntity">
		select
		A.ID as id,
		A.CLASS_NAME as className,
		A.NAME name,
		A.START_TIME as
		startTime,
		A.PERIOD as period
		from vms_time_task
		A WHERE
		A.DATAMOLD = #dataMold#
	</select>
	
	
	<!--查找总账jdbc链接地址  -->
	<select id="findGeneralLedgerUrl" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select
		A.url as url,
		A.userName as name,
		A.userPwd as Pwd
		from vms_jdbc_link A 
		WHERE
		A.system = #systemt#
	</select>
	
	
	
	<delete id="deleteGeneralLedger" parameterClass="java.util.Map">
		delete from
		VMS_GENERAL_LEDGER where YEAR_MONTHt=#month#

	</delete>
	<!-- <insert id="insertGeneralLedger" parameterClass="java.util.Map">
		INSERT INTO
		VMS_GENERAL_LEDGER
		(INST_ID,
		YEAR_MONTH,
		DIRECTION_ID,
		DIRECTION_NAME,
		PLANLONGDESC_ID,
		PLANLONGDESC_NAME,
		DEBIT_DESC,
		CREDIT_DESC,
		BALANCE_DESC,
		TAX_RATE_CODE,
		TAX_RATE_NAME
		)
		select
		B.INST_ID,
		B.YEAR_MOUTH, 
		B.DIRECTION_ID,
		B.DIRECTION_NAME, 
		B.PLANLONGDESC_ID,
		B.PLANLONGDESC_NAME, 
		B.DEBIT_DESC,
		B.CREDIT_DESC,
		B.BALANCE_DESC,
		B.segment10_id,
		B.segment10_name
		from
		cux.cux_gl_vat_interface@db_zzh B
		where B.YEAR_MOUTH=#month#
	</insert> -->
	
	
	<insert id="insertGeneralLedger" parameterClass="java.util.Map">
		INSERT INTO
		VMS_GENERAL_LEDGER
		(INST_ID,
		ORIG_INSTCODE,
		YEAR_MONTHt,
		DIRECTION_ID,
		DIRECTION_NAME,
		PLANLONGDESC_ID,
		PLANLONGDESC_NAME,
		DEBIT_DESC,
		CREDIT_DESC,
		BALANCE_DESC,
		BALANCE_SOURCE,
		IS_TAXEXEMPTION
		)
		values(
		#INST_ID#,
		#ORIG_INSTCODE#,
		#YEAR_MONTH#,
		#DIRECTION_ID#,
		#DIRECTION_NAME#,
		#PLANLONGDESC_ID#,
		#PLANLONGDESC_NAME#,
		#DEBIT_DESC#,
		#CREDIT_DESC#,
		#BALANCE_SOURCE#,
		#BALANCE_SOURCE#,
		#IS_TAXEXEMPTION#
		)
	</insert>
	
	

	<select id="findHaveCustomer" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		SELECT A.CUSTOMER_ID FROM VMS_CUSTOMER_INFO A WHERE
		A.CUSTOMER_ID IN
		<iterate property="customerId" conjunction="," open="(" close=")">
			#customerId[]#
		</iterate>
	</select>
	<insert id="insertCustomerEntity" parameterClass="CustomerEntity">
		INSERT INTO
		VMS_CUSTOMER_INFO A
		(A.CUSTOMER_ID,A.CUSTOMER_CNAME,A.CUSTOMER_TAXNO,A.CUSTOMER_ADDRESS,A.TAXPAYER_TYPE,
		A.CUSTOMER_PHONE,A.CUSTOMER_CBANK,A.CUSTOMER_ACCOUNT,A.CUSTOMER_FAPIAO_FLAG,A.DATA_SOURCE,A.FAPIAO_TYPE)
		VALUES (
		#customerNo#,
		#customerName#,
		#customerTaxno#,
		#customerAddressand#,
		#taxpayerType#,
		#customerPhone#,
		#customerBankand#,
		#customerAccount#,
		#customerFapiaoFlag#,
		#dataSource#,
		#fapiaoType#
		)
	</insert>

	<update id="updateCustomerEntity" parameterClass="CustomerEntity">
		UPDATE
		VMS_CUSTOMER_INFO A SET
		A.CUSTOMER_CNAME=#customerName#,
		A.CUSTOMER_TAXNO=#customerTaxno#,
		A.CUSTOMER_ADDRESS=#customerAddressand#,
		A.TAXPAYER_TYPE=#taxpayerType#,
		A.CUSTOMER_PHONE=#customerPhone#,
		A.CUSTOMER_CBANK=#customerBankand#,
		A.CUSTOMER_ACCOUNT=#customerAccount#,
		A.FAPIAO_TYPE=#fapiaoType#
		WHERE
		A.CUSTOMER_ID=#customerNo#
	</update>

	<!-- 更新库存信息 -->
	<select id="findPaperInvoiceListInfo" parameterClass="map"
		resultClass="paperInvoiceListInfo">
		select
		INVOICE_NUM as invoiceNum ,
		USERD_NUM as userdNum
		from
		vms_paper_invoice_stock_detail
		where
		invoice_code =#billCode#
		and 
		    <![CDATA[ INVOICE_BEGIN_NO  <=  #billNo# ]]>
		and 
		     <![CDATA[ #billNo# <= INVOICE_END_NO]]>
	</select>
	<update id="updatePaperInvoiceListInfoInvoiceNum"
		parameterClass="map">
		update vms_paper_invoice_stock_detail
		set INVOICE_NUM=#INVOICE_NUM# ,
		USERD_NUM =#USERD_NUM#
		where
		invoice_code =#billCode#
		and 
	           <![CDATA[ INVOICE_BEGIN_NO  <=  #billNo# ]]>
		and 
	          <![CDATA[ #billNo# <= INVOICE_END_NO]]>
	</update>

	<select id="findWebserviceUrl" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select URL from VMS_WEBSERVICE_INFO where name=#name#
	</select>
	
	
	<!-- 查询vmss连接vmss的url -->
	<select id="findVmsUrl" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select URL from vms_urlvms_info where name=#name#
	</select>
	
	
	<insert id="insertFailInfo" parameterClass="java.util.Map">
		INSERT INTO
		VMS_LOG_HEXIN (
		BILL_CODE,
		BILL_NO,
		FAPIAO_TYPE,
		DATA_STATUS,
		BUSINESS_ID,
		OPERATE_DATE,
		ERRORINFO
		)
		VALUES
		(
		#billEntity.billCode#,
		#billEntity.billNo#,
		#billEntity.fapiaoType#,
		#billEntity.dataStatus#,
		#billEntity.businessId#,
		SYSDATE(),
		#billEntity.errorInfo#
		)
	</insert>

	<select id="getPayee" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		SELECT A.PAYEE_NAME FROM VMS_TRANS_PAYEE A
		WHERE
		A.INST_ID=#instId#
	</select>

	<select id="isAllIssure" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		SELECT
		COUNT(1)
		FROM VMS_TRANS_BILL A
		LEFT JOIN VMS_BILL_INFO
		B ON A.BILL_ID=B.BILL_ID
		LEFT JOIN VMS_TRANS_INFO C ON
		A.TRANS_ID=C.TRANS_ID
		WHERE A.TRANS_ID IN(SELECT T.TRANS_ID FROM
		VMS_TRANS_BILL T WHERE
		T.BILL_ID=#billId#)
		AND((B.BILL_CODE IS NULL AND
		B.BILL_NO IS NULL)
		OR (C.BALANCE > 0))
	</select>
	<select id="findBillRedInfo" parameterClass="java.util.Map"
		resultClass="billEntity">
		select
		B.BILL_CODE AS billCode,
		B.BILL_NO AS billNo,
		B.FAPIAO_TYPE AS fapiaoType,
		B.SUM_AMT AS amt,
		B.TAX_AMT_SUM AS taxAmt,
		B.CUSTOMER_NAME AS customerName,
		C.BUSINESSID AS businessId,
		C.CHERNUM
		AS chernum,
		C.TTMPRCNO AS ttmprcno,
		C.AMT_CNY AS amtCny,
		C.BALANCE AS
		balance,
		C.TRANS_ID AS transId,
		C.TAX_AMT_CNY AS taxCny,
		C.TAX_CNY_BALANCE AS taxCnyBalance
		from VMS_TRANS_BILL A
		left join vms_bill_info B on a.bill_id=b.bill_id
		left
		join vms_trans_info c
		on a.trans_id = c.trans_id
		where
		a.bill_ID=#billId#
	</select>
	<select id="findBillEntitys" parameterClass="java.util.Map"
	resultClass="billEntity">
	select
	B.BILL_CODE AS billCode,
	B.BILL_NO AS billNo,
	B.FAPIAO_TYPE AS
	fapiaoType,
	B.SUM_AMT AS amt,
	B.TAX_AMT_SUM AS taxAmt,
	B.CUSTOMER_NAME AS
	customerName,
	C.BUSINESSID AS businessId,
	C.CHERNUM AS chernum,
	C.TTMPRCNO AS ttmprcno,
	C.AMT_CNY AS amtCny,
	C.BALANCE AS balance,
	C.TRANS_ID AS transId,
	C.TAX_AMT_CNY AS taxCny,
	C.TAX_CNY_BALANCE AS
	taxCnyBalance
	from VMS_TRANS_BILL A
	left join vms_bill_info B on a.bill_id=b.bill_id
	left
	join vms_trans_info c
	on a.trans_id = c.trans_id
	where a.bill_ID in
	<iterate property="billId" conjunction="," open="(" close=")">
		#billId[]#
	</iterate>
	</select>
	<!-- 查找负数发票的billId -->
	<select id="findFSbill" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select b.bill_id from vms_bill_info a left join
		vms_bill_info b on a.bill_code=b.ORI_BILL_CODE and
		a.bill_no=b.ori_bill_no where a.bill_Id=#billId#
	</select>

	<update id="updateRedBillStatus" parameterClass="java.util.Map">
		update
		vms_bill_info a set A.DATASTATUS=#dataStatus#
		<isNotEmpty prepend="," property="cherNum">
			a.INSURE_ID=#cherNum#
		</isNotEmpty>
		<isNotEmpty prepend="," property="billDate">
			a.BILL_DATE=#billDate#
		</isNotEmpty>
		where 1=1
		<isNotEmpty prepend="and" property="billId">
			a.bill_id=#billId#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="oriBillCode">
			a.ORI_BILL_CODE=#oriBillCode#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="oriBillNo">
			a.ORI_BILL_NO=#oriBillNo#
		</isNotEmpty>
	</update>
	<update id="updateRedTransBill" parameterClass="java.util.Map">
		update
		vms_trans_info a set a.datastatus=#dataStatus# where a.trans_id in
		(select t.trans_id from vms_trans_bill t where t.bill_Id=#billId#)
	</update>

	<update id="updateNotIssueBill" parameterClass="java.util.Map">
		update
		vms_bill_info a set A.DATASTATUS=#dataStatus# where a.bill_id in
		(select t1.bill_id from vms_trans_bill t1 left join vms_bill_info t2
		where t1.trans_id in (select t3.trans_id from vms_trans_bill t3
		where
		t3.bill_id=#billId#) and t2.bill_CODE is null and t2.bill_no is null)
	</update>

	<select id="findNotRedBillCount" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select count(1) from vms_trans_bill a left join
		vms_bill_info b on a.bill_id = b.bill_id
		left join vms_trans_info c on
		a.trans_id = c.trans_id
		where A.TRANS_ID in (select trans_id from
		vms_trans_bill where
		bill_id=#billId#)
		and b.datastatus!='18'
		and
		b.bill_code is not null
		and b.bill_no is not null
	</select>
	<update id="updateRedBillInfo" parameterClass="java.util.Map">
		update
		vms_bill_info a
		set A.DATASTATUS=#dataStatus#,
		A.bill_code=#billCode#,
		a.bill_no=#billNo#,
		a.bill_Date=#billDate#
		where a.bill_id =#billId#
	</update>
	<select id="getCloseTimeValue" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		SELECT A.TIME FROM VMS_CLOSING_TIME A WHERE A.NAME=#name#
	</select>
	
	<!--oracle版本  -->
	<!-- <select id="getRollOutRatio" parameterClass="java.util.Map"
		resultClass="taxTransferInfo">
		select A.INST_ID as orginCode,
		A.YEAR_MONTH as periodName,
		TO_NUMBER(A.RESULT)*100 as rate
		FROM VMS_TIMERTASK_PROPORTIONALITY A
		WHERE A.YEAR_MONTH=#yearMonth# AND A.AVAILABLE='1' AND
		A.INST_ID IN
		(SELECT T.ACCOUNTING_ID FROM VMS_INST_ACCOUNTING T WHERE T.INST_ID IN
		(select A.UPINST_ID from YGZAPP.VMS_DIC_INST A WHERE
		A.INST_ID=#instId#))
	</select> -->
	
	<!--mysql版本  -->
	<select id="getRollOutRatio" parameterClass="java.util.Map"
		resultClass="taxTransferInfo">
		select A.INST_ID as orginCode,
		A.YEAR_MONTHt as periodName,
		cast((A.RESULT) AS SIGNED INTEGER)*100 as rate
		FROM VMS_TIMERTASK_PROPORTIONALITY A
		WHERE A.YEAR_MONTHt=#yearMonth# AND A.AVAILABLE='1' AND
		A.INST_ID IN
		(SELECT T.ACCOUNTING_ID FROM VMS_INST_ACCOUNTING T WHERE T.INST_ID IN
		(select A.UPINST_ID from VMS_DIC_INST A WHERE
		A.INST_ID=#instId#))
	</select>
	
	
	<select id="findGetRoutAmt" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		SELECT ROLL_OUT_AMT FROM vms_input_invoice_new_item WHERE
		ID = #ID#
	</select>
	
	<!-- 从主表中间表中查出数据 -->
	<select id="findDataByPrimary" resultClass="inputInfo">
		SELECT 
		A.TRANS_ID as userId,
		A.INVOICE_ID as billId,
		A.INVOICE_NO as billCode,
		A.TRANS_CURR as curreny,
		A.TRANS_DATE as billDate,
		A.TAXNO as taxNo,
		A.NAME as name,
		A.BANK_NO as bankNo,
		A.BANK_NAME as bankName,
		A.CUSTOMER_TEL as customerTel,
		A.CUSTOMER_ADD as customerAdd,
		A.BILL_TYPE as billType,
		A.DATA_STATUS as billStatu,
		A.AUTHENTICATION_DATE as dealNo,
		<!--新增
			日期：2018-08-24
			作者：刘俊杰
			说明：增加字段BANK_CODE，用于存储机构代码
		 -->
		A.BANK_CODE as BANK_CODE
		<!-- end 2018-08-24 -->
		FROM VMS_INPUT_INVOICE_INFO_TEMP A
	</select>
	<!-- 删除主表应用表中数据 -->
	<delete id="deleteDataByPrimary">
		DELETE FROM VMS_INPUT_INVOICE_NEW
	</delete>
	<!-- 将数据插入到主表应用表中 -->
	<insert id="insertDataByPrimary" parameterClass="java.util.Map">
		INSERT INTO VMS_INPUT_INVOICE_NEW (
		BILL_ID,
		BILL_CODE,
		CURRENY,
		BILL_DATE,
		TAXNO,
		NAME,
		BANK_NO,
		BANK_NAME,
		CUSTOMER_TEL,
		CUSTOMER_ADD,
		BILL_TYPE,
		BILL_STATU,
		OPERATE_DATE,
		TRANS_ID,
		<!--新增
			日期：2018-08-24
			作者：刘俊杰
			说明：增加字段BANK_CODE，用于存储机构代码
		 -->
		BANK_CODE
		<!-- end 2018-08-24 -->
		) VALUES (
		#inputInfo.billId#,
		#inputInfo.billCode#,
		#inputInfo.curreny#,
		#inputInfo.billDate#,
		#inputInfo.taxNo#,
		#inputInfo.name#,
		#inputInfo.bankNo#,
		#inputInfo.bankName#,
		#inputInfo.customerTel#,
		#inputInfo.customerAdd#,
		#inputInfo.billType#,
		#inputInfo.billStatu#,
		#inputInfo.dealNo#,
		#inputInfo.userId#,
		<!--新增
			日期：2018-08-24
			作者：刘俊杰
			说明：增加字段BANK_CODE，用于存储机构代码
		 -->
		#inputInfo.BANK_CODE#
		<!-- end 2018-08-24 -->
		)
	</insert>
	<!-- 从明细表中间表中查数据 -->
	<select id="findDataByDetails" resultClass="inputInvoiceNew">
		SELECT 
		A.INVOICE_ID as billCode,
		A.INVOICE_NO as billNo,
		A.SHARE_INST as instName,
		A.AMT as amt,
		A.TAX_AMT as taxAmt,
		A.TAX_RATE as taxRate,
		A.EXPENSE as amtTaxSum,
		A.PURPOSE as porpuse,
		A.IS_TAX_CREDIT as isCredit,
		A.TRANSFER_MONEY as transferAmt,
		A.ROLL_OUT_STATUS as transferStatus,
		A.TRANS_REASON as remark,
		A.ROLL_OUT_MONTH as rollOutMonth,
		A.AVAILABLE as available,
		A.TRANS_ID as glInterfaceId
		FROM VMS_INPUT_INVOICE_NEW_ITEM_T A
	</select>
	<!-- 删除明细表应用表中数据 -->
	<delete id="deleteDataByDetails">
		DELETE FROM VMS_INPUT_INVOICE_NEW_ITEM
	</delete>
	<!-- 将数据插入到明细表应用表中 -->
	<insert id="insertDataByDetails" parameterClass="java.util.Map">
		INSERT INTO VMS_INPUT_INVOICE_NEW_ITEM(
		BILL_ID,
		BILL_CODE,
		SHARE_INST,
		AMT,
		TAX,
		TAX_RATE,
		SUM_AMT,
		PURPOSE,
		IS_CREDIT,
		ROLL_OUT_AMT,
		ROLL_OUT_STATUS,
		REMARK,
		ROLL_OUT_MONTH,
		AVAILABLE,
		TRANS_ID
		) VALUES(
		#inputInvoiceNew.billCode#,
		#inputInvoiceNew.billNo#,
		#inputInvoiceNew.instName#,
		#inputInvoiceNew.amt#,
		#inputInvoiceNew.taxAmt#,
		#inputInvoiceNew.taxRate#,
		#inputInvoiceNew.amtTaxSum#,
		#inputInvoiceNew.porpuse#,
		#inputInvoiceNew.isCredit#,
		#inputInvoiceNew.transferAmt#,
		#inputInvoiceNew.transferStatus#,
		#inputInvoiceNew.remark#,
		#inputInvoiceNew.rollOutMonth#,
		#inputInvoiceNew.available#,
		#inputInvoiceNew.glInterfaceId#
		) 
	</insert>
	
	<insert id="insertSubjectDictionary" parameterClass="java.util.Map">
		INSERT INTO vms_dic_subject(
		SUBJECT_ID,
		SUBJECT_NAME,
		CATEGORY,
		VALID_STATE,
		REMARK,
		RATIO)
		VALUES (
		#subjectId#,
		#subjectName#,
		#category#,
		#validState#,
		#remark#,
		#ratio#)
	</insert>
	
	
	<!--新增
		日期：2018-08-22
		作者：刘俊杰
		功能：通过远程连接总账的数据库(oracle)
	-->
	<!-- start -->
		<select id="getGeneralIedgerTempOfLongdistance" parameterClass="java.util.Map" resultClass="GeneralLedgerTemp">
			SELECT INST_ID,YEAR_MONTH,DIRECTION_ID,DIRECTION_NAME,PLANLONGDESC_ID,PLANLONGDESC_NAME,IS_TAXEXEMPTION,DEBIT_DESC,CREDIT_DESC,BALANCE_SOURCE 
			FROM APPS.VMS_ACC_BALANCE_INFO
			WHERE YEAR_MONTH=#yearMonth#
		</select>
	<!-- end -->
	
	<!-- 
		新增
		日期：2018-09-03
		作者：刘俊杰
		说明：定时器初始化 
	-->
	<!--查询跑批任务表中任务数量 -->
	<select id="intervalFindBatchRunTimeCount" resultClass="java.lang.Long">
		SELECT count(*) from batchruntime where 1=1
	</select>
	<!-- 删除表中不全的数据 -->
	<delete id="intervalDeleteBatchRunTimeForInit" parameterClass="java.util.Map">
		delete from batchruntime
	</delete>
	<!-- 重新插入新的数据 -->
	<insert id="intervalInsertBatchRunTimeInit" parameterClass="java.util.Map">
		insert into batchruntime(hour,minute,second,intervalHour,intervalMinute,intervalSecond,cname) values(
		0,0,0,24,0,0,'核心'),(1,0,0,24,0,0,'总账'),(2,0,0,24,0,0,'费控'),(6,0,0,24,0,0,'犹豫期')
	</insert>
	<!--查询跑批任务表 -->
	<select id="intervalFindBatchRunTimeAllList" parameterClass="java.util.Map" resultClass="BatchRunTime">
		SELECT id,hour,minute,second,cname,intervalHour,intervalMinute,intervalSecond from batchruntime where 1=1
	</select>
	<!-- end 2018-08-30 -->
	
</sqlMap>
 